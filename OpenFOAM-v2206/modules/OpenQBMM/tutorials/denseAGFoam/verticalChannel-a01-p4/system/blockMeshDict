/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0    0   0)
    (0.05 0   0)
    (0.05 0.3 0)
    (0    0.3 0)
    (0    0   0.06)
    (0.05 0   0.06)
    (0.05 0.3 0.06)
    (0    0.3 0.06)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (28 100 1)
    simpleGrading
    (
        (
            (   0.0621352389 0.107142857143 4)  // 20% y-dir, 30% cells, exp = 4
            (   0.8757295222 0.785714285714 1)  // 60% y-dir, 40% cells, exp = 1
            (   0.0621352389 0.107142857143 .25)  // 20% y-dir, 30% cells, exp = 4
        )
	    1                  // y-direction expansion ratio
        1                  // z-direction expansion ratio
    )
);

edges
(
);

boundary
(
    bottom
    {
        type            cyclic;
        neighbourPatch  top;
        faces
        (
            (1 5 4 0)
        );
    }
    top
    {
        type            cyclic;
        neighbourPatch  bottom;
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type            wall;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type            wall;
        faces
        (
            (2 6 5 1)
        );
    }

    front
    {
        type            empty;
        neighbourPatch  back;
        faces
        (
            (0 3 2 1)
        );
    }
    back
    {
        type           empty;
        neighbourPatch  front;
        faces
        (
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
