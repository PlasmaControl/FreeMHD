<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <SourceProxy class="vtkFlyingEdges3D"
                 name="FlyingEdges3D" label="Flying Edges 3D">
      <Documentation short_help="Generates isosurfaces from 3D image data (volume).">
      Generates an isosurface from 3D image data (volume). It
      implements the algorithm in: Flying Edges: A High-Performance
      Scalable Isocontouring Algorithm by Schroeder, Maynard,
      Geveci.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array"
                          number_of_components="1" />
        <Documentation>This property specifies the input dataset to be used by
        the contour filter.</Documentation>
      </InputProperty>
      <StringVectorProperty animateable="0"
                            command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            label="Contour By"
                            name="SelectInputScalars"
                            number_of_elements="5">
        <ArrayListDomain attribute_type="Scalars"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>This property specifies the name of the scalar array
        from which the contour filter will compute isolines and/or
        isosurfaces.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SetComputeNormals"
                         default_values="1"
                         name="ComputeNormals"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="InputDataTypeDecorator" name="vtkPolyData"  exclude="1"/>
        </Hints>
        <Documentation>If this property is set to 1, a scalar array containing
        a normal value at each point in the isosurface or isoline will be
        created by the contour filter; otherwise an array of normals will not
        be computed. This operation is fairly expensive both in terms of
        computation time and memory required, so if the output dataset produced
        by the contour filter will be processed by filters that modify the
        dataset's topology or geometry, it may be wise to set the value of this
        property to 0. Select whether to compute normals.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SetComputeGradients"
                         default_values="0"
                         name="ComputeGradients"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="InputDataTypeDecorator" name="Structured" />
        </Hints>
        <Documentation>If this property is set to 1, a scalar array containing
        a gradient value at each point in the isosurface or isoline will be
        created by this filter; otherwise an array of gradients will not be
        computed. This operation is fairly expensive both in terms of
        computation time and memory required, so if the output dataset produced
        by the contour filter will be processed by filters that modify the
        dataset's topology or geometry, it may be wise to set the value of this
        property to 0. Not that if ComputeNormals is set to 1, then gradients
        will have to be calculated, but they will only be stored in the output
        dataset if ComputeGradients is also set to 1.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SetComputeScalars"
                         default_values="0"
                         name="ComputeScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, an array of scalars
        (containing the contour value) will be added to the output dataset. If
        set to 0, the output will not contain this array.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetValue"
                            label="Isosurfaces"
                            name="ContourValues"
                            number_of_elements="0"
                            number_of_elements_per_command="1"
                            repeat_command="1"
                            set_number_command="SetNumberOfContours"
                            use_index="1">
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectInputScalars" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>This property specifies the values at which to compute
        isosurfaces/isolines and also the number of such
        values.</Documentation>
      </DoubleVectorProperty>
      <Hints>
        <Visibility replace_input="2" />
        <ShowInMenu category="Accelerated Algorithms" />
      </Hints>

      <PropertyGroup label="Isosurfaces">
        <Property name="ContourValues" />
      </PropertyGroup>

      <!-- End FlyingEdges3D -->
    </SourceProxy>

    <SourceProxy class="vtkFlyingEdges2D"
                 name="FlyingEdges2D" label="Flying Edges 2D">
      <Documentation short_help="Generates isoline(s) from a structured grid.">
        Generates isoline(s) from a structured grid. It implements the
        algorithm in: Flying Edges: A High-Performance Scalable
        Isocontouring Algorithm by Schroeder, Maynard, Geveci.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array"
                          number_of_components="1" />
        <Documentation>This property specifies the input dataset to be used by
        the contour filter.</Documentation>
      </InputProperty>
      <StringVectorProperty animateable="0"
                            command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            label="Contour By"
                            name="SelectInputScalars"
                            number_of_elements="5">
        <ArrayListDomain attribute_type="Scalars"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>This property specifies the name of the scalar array
        from which the contour filter will compute isolines and/or
        isosurfaces.</Documentation>
      </StringVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetValue"
                            label="Isosurfaces"
                            name="ContourValues"
                            number_of_elements="0"
                            number_of_elements_per_command="1"
                            repeat_command="1"
                            set_number_command="SetNumberOfContours"
                            use_index="1">
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectInputScalars" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>This property specifies the values at which to compute
        isosurfaces/isolines and also the number of such
        values.</Documentation>
      </DoubleVectorProperty>
      <Hints>
        <Visibility replace_input="2" />
        <ShowInMenu category="Accelerated Algorithms" />
      </Hints>

      <PropertyGroup label="Isosurfaces">
        <Property name="ContourValues" />
      </PropertyGroup>

      <!-- End FlyingEdges2D -->
    </SourceProxy>

    <SourceProxy class="vtkFlyingEdgesPlaneCutter"
                 label="Flying Edges Plane Cutter"
                 name="FlyingEdgesPlaneCutter">
      <Documentation short_help="Cut a volume with a plane and generates a polygonal cut surface">
        Flying Edges Plane Cutter is a specialization of the
        FlyingEdges algorithm to cut a volume with a single plane. It
        is designed for performance and an exploratory, fast workflow.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <Documentation>This property specifies the input to the Slice
        filter.</Documentation>
      </InputProperty>
      <ProxyProperty command="SetPlane"
                     label="Slice Type"
                     name="Plane">
        <ProxyGroupDomain name="groups">
          <Group name="implicit_functions" />
        </ProxyGroupDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="implicit_functions"
                 name="Plane" />
        </ProxyListDomain>
        <Documentation>This property sets the parameters of the slice
        function.</Documentation>
      </ProxyProperty>
      <Hints>
        <Visibility replace_input="2" />
        <ShowInMenu category="Accelerated Algorithms" />
      </Hints>
      <!-- FlyingEdgesPlaneCutter -->
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
