<ServerManagerConfiguration>
  <ProxyGroup name="array_measurement">
    <NullProxy name="None"></NullProxy>
    <Proxy class="vtkArithmeticMeanArrayMeasurement"
           name="Arithmetic Mean">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
    </Proxy>
    <Proxy class="vtkGeometricMeanArrayMeasurement"
           name="Geometric Mean">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
    </Proxy>
    <Proxy class="vtkHarmonicMeanArrayMeasurement"
           name="Harmonic Mean">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
    </Proxy>
    <Proxy class="vtkQuantileArrayMeasurement"
           name="Quantile">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
      <DoubleVectorProperty command="SetPercentile"
                            default_values="50.0"
                            name="Percentile"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>
           Set the percentile for measurement. Setting is to 50.0 is equivalent with computing the median.
        </Documentation>
      </DoubleVectorProperty>
    </Proxy>
    <Proxy class="vtkMaxArrayMeasurement"
           name="Max">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
    </Proxy>
    <Proxy class="vtkEntropyArrayMeasurement"
           name="Entropy">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
    </Proxy>
    <Proxy class="vtkStandardDeviationArrayMeasurement"
           name="Standard Deviation">
      <Hints>
        <ProxyList>
          <Link name="Input"
                with_property="Input" />
        </ProxyList>
      </Hints>
    </Proxy>
  </ProxyGroup>
  <ProxyGroup name="filters" >
    <SourceProxy name="ResampleToHyperTreeGrid" class="vtkResampleToHyperTreeGrid" label="Resample To Hyper Tree Grid" >
      <Documentation long_help="Warning: this plugin is a beta. Adaptive Mesh Refinement using a Hyper Tree Grid. The output is a Hyper Tree grid such that its leaves store a value measuring some property of the set of points inside them. Leaves are subdivided given some user defined heuristic."
                     short_help="Adaptive Mesh Refinement using a Hyper Tree Grid." >
          This Filter generates a Hyper Tree Grid from any input data set which has point data.
          Leaves of the Hyper Tree Grid are subdivided if the subset of points inside that leave
          match a crietrion set by the user on the input point data. The criterion is displayed, as
          well as an other way to represent the set of data in the subset.
      </Documentation>
      <InputProperty name="Input"
                     command="SetInputConnection" >
            <ProxyGroupDomain name="groups" >
              <Group name="sources" />
              <Group name="filters" />
            </ProxyGroupDomain>
            <DataTypeDomain name="input_type" >
              <DataType value="vtkDataSet" />
            </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty name="Dimensions"
                         label="Dimensions"
                         command="SetDimensions"
                         number_of_elements="3"
                         animateable="1"
                         default_values="3 3 3" >
          <Documentation>
            Dimensions of the Hyper Tree Grid.
          </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="BranchFactor"
                         label="Branch Factor"
                         command="SetBranchFactor"
                         number_of_elements="1"
                         default_values="2" >
          <EnumerationDomain name="enum" >
            <Entry value="2" text="2" />
            <Entry value="3" text="3" />
          </EnumerationDomain>
          <Documentation>
            Branch factor of the output Hyper Tree Grid.
          </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="MaxDepth"
                         label="MaxDepth"
                         command="SetMaxDepth"
                         number_of_elements="1"
                         animateable="0"
                         default_values="1" >
        <Documentation>
          Maximum tree depth of output Hyper Tree Grid.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty clean_command="ClearDataArrays"
                            command="AddDataArray"
                            name="PointDataArrays"
                            label="Point Data Array to process"
                            number_of_elements_per_command="1"
                            repeat_command="1">
        <Documentation>Add a point array by name to be resampled.</Documentation>
        <ArrayListDomain input_domain_name="input_array" name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty name="SelectInputScalars"
                            label="Subdividing Criterion Array"
                            command="SetInputArrayToProcess"
                            number_of_elements="5"
                            element_types="int int int int str"
                            animateable="0" >
        <ArrayListDomain name="array_list"
                         attribute_type="Scalars"
                         input_domain_name="inputs_array" >
          <RequiredProperties>
            <Property name="Input"
                      function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          Input point data used as a subdividing criterion to build the hypertree grid.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty name="UseMax"
                         command="SetMaxState"
                         label="Use Max"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          If not checked, Max is set to infinity.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty name="Max"
                            command="SetMax"
                            number_of_elements="1"
                            default_values="1">
        <Hints>
          <PropertyWidgetDecorator type="EnableWidgetDecorator">
            <Property name="UseMax" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Leaves are subdivided if the Subdividing Criterion is lower than Max.
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty name="UseMin"
                         command="SetMinState"
                         label="Use Min"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool"/>
        <Documentation>
          If not checked, Min is set to minus infinity.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty name="Min"
                            command="SetMin"
                            number_of_elements="1"
                            default_values="0" >
        <Hints>
          <PropertyWidgetDecorator type="EnableWidgetDecorator">
            <Property name="UseMin" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Leaves are subdivided if the Subdividing Criterion is greater than Min.
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty name="MinimumNumberOfPointsInSubtree"
                         command="SetMinimumNumberOfPointsInSubtree"
                         number_of_elements="1"
                         default_values="1" >
        <Documentation>
          Nodes are subdivided if an only if their non-empty children have at least this amount of points.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="InsideRange"
                         command="SetInRange"
                         number_of_elements="1"
                         default_values="1" >
        <BooleanDomain name="bool" />
        <Documentation>
          Inverts the criterion. Leafs are subdivided if the Subdividing Criterion is outside of [Min, Max]
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="NoEmptyCells"
                         command="SetNoEmptyCells"
                         number_of_elements="1"
                         default_values="0" >
        <BooleanDomain name="bool" />
        <Documentation>
          Forces the output hyper tree grid to not produce empty cells by limiting subdivisions.
          When producing the Hyper Tree Grid output, if any of the potential leaves of a node
          don't have point data but intersect with the geometry of the input, the node is not
          subdivided, and thus becomes a leaf. This parameter is trumped by Extrapolate Point Data
          parameter.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="ExtrapolatePointData"
                         command="SetExtrapolate"
                         number_of_elements="1"
                         default_values="0" >
        <BooleanDomain name="bool" />
        <Documentation>
          Forces the output hyper tree grid to not produce empty cells by extrapolation.
          Leaves intersecting the input geometry but not having any point data are
          extrapolated by averaging. The averages are computed from the Hyper Tree Grid
          that would be produced if this parameter was off, using Von Neumann super cursors.
        </Documentation>
      </IntVectorProperty>
      <ProxyProperty command="SetArrayMeasurement"
                     label="Subdividing Criterion"
                     name="ArrayMeasurement">
        <ProxyListDomain name="proxy_list">
          <Group name="array_measurement" default="Arithmetic Mean" />
        </ProxyListDomain>
        <Documentation>This property sets the array measurement method used for
          subdividing leaves in the hyper tree grid.</Documentation>
      </ProxyProperty>
      <ProxyProperty command="SetArrayMeasurementDisplay"
                     label="Averaging method"
                     name="ArrayMeasurementDisplay">
        <ProxyListDomain name="proxy_list">
          <Group name="array_measurement" default="None" />
        </ProxyListDomain>
        <Documentation>This property sets an extra array measurement method only for visualization
          purposes. This measurement is applied to the list of inputs.</Documentation>
      </ProxyProperty>
      <!-- End ResampleToHyperTreeGrid -->
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
