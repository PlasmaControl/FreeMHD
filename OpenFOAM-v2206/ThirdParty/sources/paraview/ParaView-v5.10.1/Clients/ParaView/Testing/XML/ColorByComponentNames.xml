<?xml version="1.0" ?>
<pqevents>
  <pqevent object="pqClientMainWindow/menubar" command="activate" arguments="menuTools" />
  <pqevent object="pqClientMainWindow/menubar/menuTools" command="activate" arguments="actionTesting_Window_Size" />
  <pqevent object="pqClientMainWindow/menubar" command="activate" arguments="menuSources" />
  <pqevent object="pqClientMainWindow/menubar/menuSources/Alphabetical" command="activate" arguments="ProgrammableSource" />
  <pqevent object="pqClientMainWindow/propertiesDock/propertiesPanel/scrollArea/qt_scrollarea_viewport/scrollAreaWidgetContents/PropertiesFrame/ProxyPanel/Script/Script"
           command="set_string"
           arguments="# Create a dummy dataset of points, setting metadata on a vector array. And test unicode chars in this field à¦¸.&#xA;import math&#xA;&#xA;data = self.GetPolyDataOutput()&#xA;verts = vtk.vtkCellArray()&#xA;pts = vtk.vtkPoints()&#xA;scalars = vtk.vtkFloatArray()&#xA;scalars.SetNumberOfComponents(3)&#xA;scalars.SetName('Vector Data')&#xA;scalars.SetComponentName(0, 'The first component')&#xA;scalars.SetComponentName(1, 'The second component')&#xA;scalars.SetComponentName(2, 'The third component')&#xA;&#xA;numPts = 100;&#xA;pts.SetNumberOfPoints(numPts);&#xA;scalars.SetNumberOfTuples(numPts);&#xA;&#xA;for i in range(numPts):&#xA;    point = [math.sin(i * numPts / (2 * math.pi)),&#xA;             math.cos(i * numPts / (2 * math.pi)),&#xA;             math.tan(i * numPts / (2 * math.pi)) % 1.]&#xA;    scalar = [-point[0], -point[1], -point[2]]&#xA;    pts.SetPoint(i, point)&#xA;    scalars.SetTuple(i, scalar)&#xA;    verts.InsertNextCell(1, [i])&#xA;&#xA;data.SetVerts(verts)&#xA;data.SetPoints(pts)&#xA;data.GetPointData().SetScalars(scalars)"/>
  <pqevent object="pqClientMainWindow/propertiesDock/propertiesPanel/Accept" command="activate" arguments="" />
  <pqevent object="pqClientMainWindow/variableToolbar/displayColor/Components" command="activated" arguments="The second component" />
  <pqevent object="pqClientMainWindow/variableToolbar/actionScalarBarVisibility" command="set_boolean" arguments="false" />
</pqevents>
