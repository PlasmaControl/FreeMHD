<ServerManagerConfiguration>
  <!-- ******************************************************************** -->
  <ProxyGroup name="delivery_managers">
    <DataDeliveryManagerProxy name="RenderViewDeliveryManager" class="vtkPVRenderViewDataDeliveryManager">
    </DataDeliveryManagerProxy>
    <DataDeliveryManagerProxy name="ContextViewDeliveryManager" class="vtkPVContextViewDataDeliveryManager">
    </DataDeliveryManagerProxy>
  </ProxyGroup>

  <ProxyGroup name="internal_views">
    <!-- ================================================================== -->

    <Proxy name="ViewBase"
           processes="client|renderserver|dataserver">
      <DoubleVectorProperty command="SetViewTime"
                            default_values="none"
                            name="ViewTime"
                            number_of_elements="1"
                            panel_visibility="never"
                            state_ignored="1">
        <DoubleRangeDomain name="range" />
        <Documentation>The pipeline update time for this view. This gets passed
        to all representations added to this view.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCacheKey"
                            default_values="none"
                            name="CacheKey"
                            number_of_elements="1"
                            panel_visibility="never"
                            state_ignored="1">
        <DoubleRangeDomain name="range" />
        <Documentation>This is the cache key used to identify which cache
        entry to use for rendering when caching is enabled.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseCache"
                         default_values="0"
                         name="UseCache"
                         panel_visibility="never"
                         number_of_elements="1"
                         state_ignored="1">
        <BooleanDomain name="bool" />
        <Documentation>Indicates whether to use cache for subsequent
        renderings.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetPosition"
                         default_values="0 0"
                         name="ViewPosition"
                         panel_visibility="never"
                         number_of_elements="2"
                         is_internal="1">
        <!-- ViewPosition is "internal" since vtkSMViewLayoutProxy typically
             sets it up. -->
        <Documentation>Set the position on this view in the multiview
        configuration.</Documentation>
        <Hints>
          <NoDefault />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetSize"
                         default_values="400 400"
                         ignore_synchronization="1"
                         name="ViewSize"
                         number_of_elements="2"
                         panel_visibility="never"
                         state_ignored="1"
                         no_custom_default="1">
        <Hints>
          <NoDefault />
        </Hints>
        <Documentation>Set the size of this view in the multiview
        configuration.</Documentation>
      </IntVectorProperty>
      <ProxyProperty command="AddRepresentation"
                     name="Representations"
                     remove_command="RemoveRepresentation"
                     repeatable="1">
        <Documentation>Representations in this view.</Documentation>
      </ProxyProperty>
      <IntVectorProperty command="SetPPI"
                         default_values="72"
                         name="PPI"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>Set the screen ppi (pixels per inch). This is used
                       when mapping font sizes in points to screen pixels.
        </Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="GeneralSettings"
                        property="ScreenPixelsPerInch"/>
        </Hints>
      </IntVectorProperty>
    </Proxy>

    <!-- ================================================================== -->
    <Proxy base_proxygroup="internal_views"
           base_proxyname="ViewBase"
           class="vtkPVXYChartView"
           name="XYChartViewTitle"
           processes="client|renderserver|dataserver">
      <Documentation>This is the base proxy for XY chart views.</Documentation>

      <SubProxy command="SetDeliveryManager">
        <Proxy name="DeliveryManager"
          proxygroup="delivery_managers"
          proxyname="ContextViewDeliveryManager"/>
      </SubProxy>

      <StringVectorProperty command="SetTitle"
                            name="ChartTitle"
                            number_of_elements="1"
                            default_values="">
        <Documentation>
          Set the title to use for the chart. Use {time} to display the current time.
        </Documentation>
        <Hints>
          <PlaceholderText>Use {time} to display current time</PlaceholderText>
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty command="SetTitleAlignment"
                         default_values="1"
                         name="ChartTitleAlignment"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Left"
                 value="0" />
          <Entry text="Center"
                 value="1" />
          <Entry text="Right"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetTitleFontFamily"
                            default_values="Arial"
                            name="ChartTitleFontFamily"
                            number_of_elements="1">
        <Documentation>Set the chart title font family.</Documentation>
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetTitleFontFile"
                            name="ChartTitleFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the chart title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetTitleFontSize"
                            default_values="18"
                            name="ChartTitleFontSize"
                            number_of_elements="1">
        <Documentation>Set the chart title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTitleBold"
                            default_values="0"
                            name="ChartTitleBold"
                            number_of_elements="1">
        <Documentation>Set the chart title bold.</Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetTitleItalic"
                            default_values="0"
                            name="ChartTitleItalic"
                            number_of_elements="1">
        <Documentation>Set the chart title bold.</Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetTitleColor"
                            default_values="0 0 0"
                            name="ChartTitleColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <PropertyGroup label="Title">
        <Property name="ChartTitle"/>
      </PropertyGroup>
      <PropertyGroup label="Chart Title Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="ChartTitleColor" function="Color"/>
        <Property name="ChartTitleFontFamily" function="Family"/>
        <Property name="ChartTitleFontFile" function="File"/>
        <Property name="ChartTitleBold" function="Bold" />
        <Property name="ChartTitleItalic" function="Italics"/>
        <Property name="ChartTitleFontSize" function="Size" />
        <Property name="ChartTitleAlignment" function="Justification" />
      </PropertyGroup>
    </Proxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewTitle"
                      name="XYChartViewBase"
                      processes="client|renderserver|dataserver">
      <Documentation>This is the base proxy for XY chart views.</Documentation>
      <IntVectorProperty command="SetLegendVisibility"
                         default_values="1"
                         name="ShowLegend"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetLegendLocation"
                         default_values="1"
                         name="LegendLocation"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <EnumerationDomain name="enum">
          <Entry text="TopLeft"
                 value="0" />
          <Entry text="TopRight"
                 value="1" />
          <Entry text="BottomRight"
                 value="2" />
          <Entry text="BottomLeft"
                 value="3" />
          <Entry text="Left"
                 value="4" />
          <Entry text="Top"
                 value="5" />
          <Entry text="Right"
                 value="6" />
          <Entry text="Bottom"
                 value="7" />
         <Entry text="Custom"
                 value="8" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetLegendSymbolWidth"
                         default_values="25"
                         name="LegendSymbolWidth"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <Documentation>Set the legend symbol width.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSortByXAxis"
                         default_values="0"
                         name="SortByXAxis"
                         label="Sort By X-Axis"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Sort the chart data by the x-axis before deciding line plot connectivity.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLegendPosition"
                         default_values="0 0"
                         name="LegendPosition"
                         panel_visibility="default"
                         number_of_elements="2">
        <Documentation>Set the legend position in the view for
          custom location.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="LegendLocation"
                                   value="8" />
          <!-- show this widget when LegendLocation==8 (ie.Custom) -->
        </Hints>
      </IntVectorProperty>
      <StringVectorProperty command="SetLegendFontFamily"
                            default_values="Arial"
                            name="LegendFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the legend font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetLegendFontFile"
                            default_values=""
                            name="LegendFontFile"
                            number_of_elements="1">
        <Documentation>Set the legend font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetLegendFontSize"
                            default_values="12"
                            name="LegendFontSize"
                            number_of_elements="1">
        <Documentation>Set the legend font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLegendBold"
                            default_values="0"
                            name="LegendBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the legend font bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLegendItalic"
                            default_values="0"
                            name="LegendItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the legend font italic.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTooltipNotation"
                         default_values="0"
                         name="TooltipNotation"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetTooltipPrecision"
                         default_values="6"
                         name="TooltipPrecision"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty name="HideTimeMarker"
                         command="SetHideTimeMarker"
                         number_of_elements="1"
                         default_values="0"
                         panel_visibility="advanced">
        <Documentation>
          Hide the marker that is used to mark the current time, when one of the axes is
          plotting time.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <PropertyGroup label="Legend Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="LegendFontFamily" function="Family"/>
        <Property name="LegendFontFile" function="File"/>
        <Property name="LegendBold" function="Bold" />
        <Property name="LegendItalic" function="Italics"/>
        <Property name="LegendFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="LegendColor" function="Color"/> -->
        <!-- <Property name="LegendOpacity" function="Opacity"/> -->
        <!-- <Property name="LegendShadow" function="Shadow" /> -->
      </PropertyGroup>

      <PropertyGroup label="Annotation">
        <Property name="ShowLegend"/>
        <Property name="LegendLocation"/>
        <Property name="LegendPosition"/>
        <Property name="HideTimeMarker"/>
        <Property name="LegendSymbolWidth"/>
      </PropertyGroup>
      <PropertyGroup label="Tooltip"
                     panel_visibility="advanced">
        <Property name="TooltipNotation"/>
        <Property name="TooltipPrecision"/>
      </PropertyGroup>

      <!-- left axis -->
      <!-- title -->
      <StringVectorProperty command="SetLeftAxisTitle"
                            name="LeftAxisTitle"
                            number_of_elements="1"
                            default_values=""/>
      <IntVectorProperty command="SetLeftGridVisibility"
                         default_values="1"
                         panel_visibility="advanced"
                         name="ShowLeftAxisGrid"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetLeftGridColor"
                            default_values="0.95 0.95 0.95"
                            name="LeftAxisGridColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLeftAxisColor"
                            default_values="0 0 0"
                            name="LeftAxisColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <StringVectorProperty command="SetLeftAxisTitleFontFamily"
                            default_values="Arial"
                            name="LeftAxisTitleFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetLeftAxisTitleFontFile"
                            name="LeftAxisTitleFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetLeftAxisTitleFontSize"
                            default_values="18"
                            name="LeftAxisTitleFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisTitleBold"
                            default_values="1"
                            name="LeftAxisTitleBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisTitleItalic"
                            default_values="0"
                            name="LeftAxisTitleItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetLeftAxisTitleColor"
                            default_values="0 0 0"
                            name="LeftAxisTitleColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <!-- range -->
      <IntVectorProperty command="SetLeftAxisLogScale"
                         default_values="0"
                         name="LeftAxisLogScale"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisUseCustomRange"
                         default_values="0"
                         name="LeftAxisUseCustomRange"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use the axis range specified or whether the view
          should compute the ranges automatically based on the data being shown.
          The ranges specified by ...AxisRange are only respected when the
          corresponding flag in this property is set to 1.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetLeftAxisRangeMinimum"
                            default_values="0"
                            name="LeftAxisRangeMinimum"
                            number_of_elements="1">
        <Documentation>Set the axis range minimum for the Left axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="LeftAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLeftAxisRangeMaximum"
                            default_values="1"
                            name="LeftAxisRangeMaximum"
                            number_of_elements="1">
        <Documentation>Set the axis range maximum for the Left axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="LeftAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>

      <!-- labels -->
      <IntVectorProperty command="SetLeftAxisLabelVisibility"
                         default_values="1"
                         name="ShowLeftAxisLabels"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="LeftAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="LeftAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisUseCustomLabels"
                            default_values="0"
                            panel_visibility="advanced"
                            name="LeftAxisUseCustomLabels"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use custom labels for each of the axis. Labels
          specified by ...AxisLabels etc. are used only when
          the corresponding AxisUseCustomLabels flag is set to 1.
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty name="LeftAxisLabels"
                            command="SetLeftAxisLabels"
                            panel_visibility="advanced"
                            animateable="1"
                            number_of_elements="0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            use_index="1"
                            set_number_command="SetLeftAxisLabelsNumber">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="LeftAxisUseCustomLabels"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Specify list of ticks and the associated labels to display. If the label is empty,
          the value of the tick will be used for display.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty command="SetLeftAxisLabelFontFamily"
                            default_values="Arial"
                            name="LeftAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetLeftAxisLabelFontFile"
                            name="LeftAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetLeftAxisLabelFontSize"
                            default_values="12"
                            name="LeftAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisLabelBold"
                            default_values="0"
                            name="LeftAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLeftAxisLabelItalic"
                            default_values="0"
                            name="LeftAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetLeftAxisLabelColor"
                            default_values="0 0 0"
                            name="LeftAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="Left Axis">
        <Property name="LeftAxisTitle"/>
        <Property name="ShowLeftAxisGrid"/>
        <Property name="LeftAxisGridColor"/>
        <Property name="LeftAxisColor"/>
      </PropertyGroup>

      <PropertyGroup label="Left Axis Title Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="LeftAxisTitleColor" function="Color"/>
        <Property name="LeftAxisTitleFontFamily" function="Family"/>
        <Property name="LeftAxisTitleFontFile" function="File"/>
        <Property name="LeftAxisTitleBold" function="Bold" />
        <Property name="LeftAxisTitleItalic" function="Italics"/>
        <Property name="LeftAxisTitleFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="LeftAxisTitleOpacity" function="Opacity"/> -->
        <!-- <Property name="LeftAxisTitleShadow" function="Shadow" /> -->
      </PropertyGroup>

     <PropertyGroup label="Left Axis Range">
       <Property name="LeftAxisLogScale"/>
       <Property name="LeftAxisUseCustomRange"/>
       <Property name="LeftAxisRangeMinimum"/>
       <Property name="LeftAxisRangeMaximum"/>
     </PropertyGroup>

      <PropertyGroup label="Left Axis Labels">
        <Property name="ShowLeftAxisLabels"/>
        <Property name="LeftAxisLabelNotation"/>
        <Property name="LeftAxisLabelPrecision"/>
        <Property name="LeftAxisUseCustomLabels"/>
        <Property name="LeftAxisLabels"/>
      </PropertyGroup>

      <PropertyGroup label="Left Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="LeftAxisLabelColor" function="Color"/>
        <Property name="LeftAxisLabelFontFamily" function="Family"/>
        <Property name="LeftAxisLabelFontFile" function="File"/>
        <Property name="LeftAxisLabelBold" function="Bold" />
        <Property name="LeftAxisLabelItalic" function="Italics"/>
        <Property name="LeftAxisLabelFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="LeftAxisLabelOpacity" function="Opacity"/> -->
        <!-- <Property name="LeftAxisLabelShadow" function="Shadow" /> -->
      </PropertyGroup>
      <!-- end left axis -->

      <!-- bottom axis -->
      <!-- title -->
      <StringVectorProperty command="SetBottomAxisTitle"
                            name="BottomAxisTitle"
                            number_of_elements="1"
                            default_values=""/>
      <IntVectorProperty command="SetBottomGridVisibility"
                         default_values="1"
                         panel_visibility="advanced"
                         name="ShowBottomAxisGrid"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBottomGridColor"
                            default_values="0.95 0.95 0.95"
                            name="BottomAxisGridColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBottomAxisColor"
                            default_values="0 0 0"
                            name="BottomAxisColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <StringVectorProperty command="SetBottomAxisTitleFontFamily"
                            default_values="Arial"
                            name="BottomAxisTitleFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetBottomAxisTitleFontFile"
                            name="BottomAxisTitleFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetBottomAxisTitleFontSize"
                            default_values="18"
                            name="BottomAxisTitleFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisTitleBold"
                            default_values="1"
                            name="BottomAxisTitleBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisTitleItalic"
                            default_values="0"
                            name="BottomAxisTitleItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBottomAxisTitleColor"
                            default_values="0 0 0"
                            name="BottomAxisTitleColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <!-- range -->
      <IntVectorProperty command="SetBottomAxisLogScale"
                         default_values="0"
                         name="BottomAxisLogScale"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisUseCustomRange"
                         default_values="0"
                         name="BottomAxisUseCustomRange"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use the axis range specified or whether the view
          should compute the ranges automatically based on the data being shown.
          The ranges specified by ...AxisRange are only respected when the
          corresponding flag in this property is set to 1.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBottomAxisRangeMinimum"
                            default_values="0"
                            name="BottomAxisRangeMinimum"
                            number_of_elements="1">
        <Documentation>Set the axis range minimum for the Bottom axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="BottomAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBottomAxisRangeMaximum"
                            default_values="1"
                            name="BottomAxisRangeMaximum"
                            number_of_elements="1">
        <Documentation>Set the axis range maximum for the Bottom axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="BottomAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>

      <!-- labels -->
      <IntVectorProperty command="SetBottomAxisLabelVisibility"
                         default_values="1"
                         name="ShowBottomAxisLabels"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="BottomAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="BottomAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisUseCustomLabels"
                            default_values="0"
                            panel_visibility="advanced"
                            name="BottomAxisUseCustomLabels"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use custom labels for each of the axis. Labels
          specified by ...AxisLabels etc. are used only when
          the corresponding AxisUseCustomLabels flag is set to 1.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetBottomAxisLabels"
                            name="BottomAxisLabels"
                            panel_visibility="advanced"
                            animateable="1"
                            number_of_elements="0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            use_index="1"
                            set_number_command="SetBottomAxisLabelsNumber">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="BottomAxisUseCustomLabels"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Specify list of ticks and the associated labels to display. If the label is empty,
          the value of the tick will be used for display.
        </Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetBottomAxisLabelFontFamily"
                            default_values="Arial"
                            name="BottomAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetBottomAxisLabelFontFile"
                            name="BottomAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetBottomAxisLabelFontSize"
                            default_values="12"
                            name="BottomAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisLabelBold"
                            default_values="0"
                            name="BottomAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetBottomAxisLabelItalic"
                            default_values="0"
                            name="BottomAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBottomAxisLabelColor"
                            default_values="0 0 0"
                            name="BottomAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="Bottom Axis">
        <Property name="BottomAxisTitle"/>
        <Property name="ShowBottomAxisGrid"/>
        <Property name="BottomAxisGridColor"/>
        <Property name="BottomAxisColor"/>
      </PropertyGroup>

      <PropertyGroup label="Bottom Axis Title Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="BottomAxisTitleColor" function="Color"/>
        <Property name="BottomAxisTitleFontFamily" function="Family"/>
        <Property name="BottomAxisTitleFontFile" function="File"/>
        <Property name="BottomAxisTitleBold" function="Bold" />
        <Property name="BottomAxisTitleItalic" function="Italics"/>
        <Property name="BottomAxisTitleFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="BottomAxisTitleOpacity" function="Opacity"/> -->
        <!-- <Property name="BottomAxisTitleShadow" function="Shadow" /> -->
      </PropertyGroup>

     <PropertyGroup label="Bottom Axis Range">
       <Property name="BottomAxisLogScale"/>
       <Property name="BottomAxisUseCustomRange"/>
       <Property name="BottomAxisRangeMinimum"/>
       <Property name="BottomAxisRangeMaximum"/>
     </PropertyGroup>

      <PropertyGroup label="Bottom Axis Labels">
        <Property name="ShowBottomAxisLabels"/>
        <Property name="BottomAxisLabelNotation"/>
        <Property name="BottomAxisLabelPrecision"/>
        <Property name="BottomAxisUseCustomLabels"/>
        <Property name="BottomAxisLabels"/>
      </PropertyGroup>

      <PropertyGroup label="Bottom Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="BottomAxisLabelColor" function="Color"/>
        <Property name="BottomAxisLabelFontFamily" function="Family"/>
        <Property name="BottomAxisLabelFontFile" function="File"/>
        <Property name="BottomAxisLabelBold" function="Bold" />
        <Property name="BottomAxisLabelItalic" function="Italics"/>
        <Property name="BottomAxisLabelFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="BottomAxisLabelOpacity" function="Opacity"/> -->
        <!-- <Property name="BottomAxisLabelShadow" function="Shadow" /> -->
      </PropertyGroup>
      <!-- end bottom axis -->
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewBase"
                      class="vtkPVXYChartView"
                      name="XYChartViewBase4Axes"
                      processes="client|renderserver|dataserver">

      <Documentation>This is the base proxy for XY chart views with
      four axis: left, bottom, right and top</Documentation>

      <!-- right axis -->
      <!-- title -->
      <StringVectorProperty command="SetRightAxisTitle"
                            name="RightAxisTitle"
                            number_of_elements="1"
                            default_values=""
                            panel_visibility="advanced" />
      <IntVectorProperty command="SetRightGridVisibility"
                         default_values="1"
                         panel_visibility="advanced"
                         name="ShowRightAxisGrid"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRightGridColor"
                            default_values="0.95 0.95 0.95"
                            name="RightAxisGridColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRightAxisColor"
                            default_values="0 0 0"
                            name="RightAxisColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <StringVectorProperty command="SetRightAxisTitleFontFamily"
                            default_values="Arial"
                            name="RightAxisTitleFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetRightAxisTitleFontFile"
                            default_values=""
                            name="RightAxisTitleFontFile"
                            number_of_elements="1">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetRightAxisTitleFontSize"
                            default_values="18"
                            name="RightAxisTitleFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisTitleBold"
                            default_values="1"
                            name="RightAxisTitleBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisTitleItalic"
                            default_values="0"
                            name="RightAxisTitleItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRightAxisTitleColor"
                            default_values="0 0 0"
                            name="RightAxisTitleColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <!-- range -->
      <IntVectorProperty command="SetRightAxisLogScale"
                         default_values="0"
                         name="RightAxisLogScale"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisUseCustomRange"
                         default_values="0"
                         name="RightAxisUseCustomRange"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use the axis range specified or whether the view
          should compute the ranges automatically based on the data being shown.
          The ranges specified by ...AxisRange are only respected when the
          corresponding flag in this property is set to 1.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRightAxisRangeMinimum"
                            default_values="0"
                            name="RightAxisRangeMinimum"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>Set the axis range minimum for the Right axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="RightAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRightAxisRangeMaximum"
                            default_values="1"
                            name="RightAxisRangeMaximum"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>Set the axis range maximum for the Right axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="RightAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>

      <!-- labels -->
      <IntVectorProperty command="SetRightAxisLabelVisibility"
                         default_values="1"
                         name="ShowRightAxisLabels"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="RightAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="RightAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisUseCustomLabels"
                            default_values="0"
                            panel_visibility="advanced"
                            name="RightAxisUseCustomLabels"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use custom labels for each of the axis. Labels
          specified by ...AxisLabels etc. are used only when
          the corresponding AxisUseCustomLabels flag is set to 1.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetRightAxisLabels"
                            name="RightAxisLabels"
                            panel_visibility="advanced"
                            animateable="1"
                            number_of_elements="0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            use_index="1"
                            set_number_command="SetRightAxisLabelsNumber">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="RightAxisUseCustomLabels"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Specify list of ticks and the associated labels to display. If the label is empty,
          the value of the tick will be used for display.
        </Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetRightAxisLabelFontFamily"
                            default_values="Arial"
                            name="RightAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetRightAxisLabelFontFile"
                            name="RightAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetRightAxisLabelFontSize"
                            default_values="12"
                            name="RightAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisLabelBold"
                            default_values="0"
                            name="RightAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRightAxisLabelItalic"
                            default_values="0"
                            name="RightAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRightAxisLabelColor"
                            default_values="0 0 0"
                            name="RightAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="Right Axis">
        <Property name="RightAxisTitle"/>
        <Property name="ShowRightAxisGrid"/>
        <Property name="RightAxisGridColor"/>
        <Property name="RightAxisColor"/>
      </PropertyGroup>

      <PropertyGroup label="Right Axis Title Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="RightAxisTitleColor" function="Color"/>
        <Property name="RightAxisTitleFontFamily" function="Family"/>
        <Property name="RightAxisTitleFontFile" function="File"/>
        <Property name="RightAxisTitleBold" function="Bold" />
        <Property name="RightAxisTitleItalic" function="Italics"/>
        <Property name="RightAxisTitleFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="RightAxisTitleOpacity" function="Opacity"/> -->
        <!-- <Property name="RightAxisTitleShadow" function="Shadow" /> -->
      </PropertyGroup>

     <PropertyGroup label="Right Axis Range">
       <Property name="RightAxisLogScale"/>
       <Property name="RightAxisUseCustomRange"/>
       <Property name="RightAxisRangeMinimum"/>
       <Property name="RightAxisRangeMaximum"/>
     </PropertyGroup>

      <PropertyGroup label="Right Axis Labels">
        <Property name="ShowRightAxisLabels"/>
        <Property name="RightAxisLabelNotation"/>
        <Property name="RightAxisLabelPrecision"/>
        <Property name="RightAxisUseCustomLabels"/>
        <Property name="RightAxisLabels"/>
      </PropertyGroup>

      <PropertyGroup label="Right Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="RightAxisLabelColor" function="Color"/>
        <Property name="RightAxisLabelFontFamily" function="Family"/>
        <Property name="RightAxisLabelFontFile" function="File"/>
        <Property name="RightAxisLabelBold" function="Bold" />
        <Property name="RightAxisLabelItalic" function="Italics"/>
        <Property name="RightAxisLabelFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="RightAxisLabelOpacity" function="Opacity"/> -->
        <!-- <Property name="RightAxisLabelShadow" function="Shadow" /> -->
      </PropertyGroup>
      <!-- end right axis -->

      <!-- top axis -->
      <!-- title -->
      <StringVectorProperty command="SetTopAxisTitle"
                            name="TopAxisTitle"
                            number_of_elements="1"
                            default_values=""
                            panel_visibility="advanced"/>
      <IntVectorProperty command="SetTopGridVisibility"
                         default_values="1"
                         panel_visibility="advanced"
                         name="ShowTopAxisGrid"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetTopGridColor"
                            default_values="0.95 0.95 0.95"
                            name="TopAxisGridColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetTopAxisColor"
                            default_values="0 0 0"
                            name="TopAxisColor"
                            panel_visibility="advanced"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <StringVectorProperty command="SetTopAxisTitleFontFamily"
                            default_values="Arial"
                            name="TopAxisTitleFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetTopAxisTitleFontFile"
                            name="TopAxisTitleFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetTopAxisTitleFontSize"
                            default_values="18"
                            name="TopAxisTitleFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisTitleBold"
                            default_values="1"
                            name="TopAxisTitleBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisTitleItalic"
                            default_values="0"
                            name="TopAxisTitleItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title font italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetTopAxisTitleColor"
                            default_values="0 0 0"
                            name="TopAxisTitleColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <!-- range -->
      <IntVectorProperty command="SetTopAxisLogScale"
                         default_values="0"
                         name="TopAxisLogScale"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisUseCustomRange"
                         default_values="0"
                         name="TopAxisUseCustomRange"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use the axis range specified or whether the view
          should compute the ranges automatically based on the data being shown.
          The ranges specified by ...AxisRange, are only respected when the
          corresponding flag in this property is set to 1.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetTopAxisRangeMinimum"
                            default_values="0"
                            name="TopAxisRangeMinimum"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>Set the axis range minimum for the Top axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="TopAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetTopAxisRangeMaximum"
                            default_values="1"
                            name="TopAxisRangeMaximum"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>Set the axis range maximum for the Top axis.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="TopAxisUseCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>

      <!-- labels -->
      <IntVectorProperty command="SetTopAxisLabelVisibility"
                         default_values="1"
                         name="ShowTopAxisLabels"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="TopAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="TopAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisUseCustomLabels"
                            default_values="0"
                            panel_visibility="advanced"
                            name="TopAxisUseCustomLabels"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify whether to use custom labels for each of the axis. Labels
          specified by ...AxisLabels are used only when
          the corresponding AxisUseCustomLabels flag is set to 1.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetTopAxisLabels"
                            name="TopAxisLabels"
                            panel_visibility="advanced"
                            animateable="1"
                            number_of_elements="0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            use_index="1"
                            set_number_command="SetTopAxisLabelsNumber">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="TopAxisUseCustomLabels"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>
          Specify list of ticks and the associated labels to display. If the label is empty,
          the value of the tick will be used for display.
        </Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetTopAxisLabelFontFamily"
                            default_values="Arial"
                            name="TopAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the axis title font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetTopAxisLabelFontFile"
                            name="TopAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the axis title font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetTopAxisLabelFontSize"
                            default_values="12"
                            name="TopAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisLabelBold"
                            default_values="0"
                            name="TopAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTopAxisLabelItalic"
                            default_values="0"
                            name="TopAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetTopAxisLabelColor"
                            default_values="0 0 0"
                            name="TopAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="Top Axis">
        <Property name="TopAxisTitle"/>
        <Property name="ShowTopAxisGrid"/>
        <Property name="TopAxisGridColor"/>
        <Property name="TopAxisColor"/>
      </PropertyGroup>

      <PropertyGroup label="Top Axis Title Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="TopAxisTitleColor" function="Color"/>
        <Property name="TopAxisTitleFontFamily" function="Family"/>
        <Property name="TopAxisTitleFontFile" function="File"/>
        <Property name="TopAxisTitleBold" function="Bold" />
        <Property name="TopAxisTitleItalic" function="Italics"/>
        <Property name="TopAxisTitleFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="TopAxisTitleOpacity" function="Opacity"/> -->
        <!-- <Property name="TopAxisTitleShadow" function="Shadow" /> -->
      </PropertyGroup>

     <PropertyGroup label="Top Axis Range">
       <Property name="TopAxisLogScale"/>
       <Property name="TopAxisUseCustomRange"/>
       <Property name="TopAxisRangeMinimum"/>
       <Property name="TopAxisRangeMaximum"/>
     </PropertyGroup>

      <PropertyGroup label="Top Axis Labels">
        <Property name="ShowTopAxisLabels"/>
        <Property name="TopAxisLabelNotation"/>
        <Property name="TopAxisLabelPrecision"/>
        <Property name="TopAxisUseCustomLabels"/>
        <Property name="TopAxisLabels"/>
      </PropertyGroup>

      <PropertyGroup label="Top Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="TopAxisLabelColor" function="Color"/>
        <Property name="TopAxisLabelFontFamily" function="Family"/>
        <Property name="TopAxisLabelFontFile" function="File"/>
        <Property name="TopAxisLabelBold" function="Bold" />
        <Property name="TopAxisLabelItalic" function="Italics"/>
        <Property name="TopAxisLabelFontSize" function="Size" />
        <!-- next properties are not available -->
        <!-- <Property name="TopAxisLabelOpacity" function="Opacity"/> -->
        <!-- <Property name="TopAxisLabelShadow" function="Shadow" /> -->
      </PropertyGroup>
      <!-- end top axis -->
    </ContextViewProxy>

    <!-- ================================================================== -->
    <Proxy name="ComparativeViewBase">
      <DoubleVectorProperty command="SetViewTime"
                            default_values="none"
                            name="ViewTime"
                            number_of_elements="1"
                            panel_visibility="never"
                            state_ignored="1">
        <DoubleRangeDomain name="range" />
        <Documentation>The pipeline update time for this view. This gets passed
        to all representations added to this view.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty default_values="none"
                            name="CacheKey"
                            number_of_elements="1"
                            panel_visibility="never"
                            state_ignored="1"
                            is_internal="1">
        <DoubleRangeDomain name="range" />
        <Documentation>This is the cache key used to identify which cache
        entry to use for rendering when caching is enabled.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty default_values="0"
                         name="UseCache"
                         number_of_elements="1"
                         panel_visibility="never"
                         state_ignored="1"
                         is_internal="1">
        <BooleanDomain name="bool" />
        <Documentation>Indicates whether to use cache for subsequent
        renderings.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetViewPosition"
                         default_values="0 0"
                         name="ViewPosition"
                         panel_visibility="never"
                         number_of_elements="2">
        <Hints>
          <NoDefault />
        </Hints>
        <Documentation>Set the position on this view in the multiview
        configuration.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetViewSize"
                         default_values="400 400"
                         ignore_synchronization="1"
                         name="ViewSize"
                         number_of_elements="2"
                         panel_visibility="never"
                         state_ignored="1">
        <Hints>
          <NoDefault />
        </Hints>
        <Documentation>Set the size of this view in the multiview
        configuration.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="Build"
                         default_values="2 2"
                         name="Dimensions"
                         panel_visibility="never"
                         number_of_elements="2">
        <IntRangeDomain max="10 10"
                        min="1 1"
                        name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetOverlayAllComparisons"
                         default_values="0"
                         name="OverlayAllComparisons"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetSpacing"
                         default_values="1 1"
                         name="Spacing"
                         panel_visibility="never"
                         number_of_elements="2">
        <IntRangeDomain max="10 10"
                        min="0 0"
                        name="range" />
      </IntVectorProperty>
      <ProxyProperty argument_type="SMProxy"
                     command="AddRepresentation"
                     name="Representations"
                     remove_command="RemoveRepresentation"
                     repeatable="1">
        <Documentation>Representations in this view.</Documentation>
      </ProxyProperty>
      <ProxyProperty argument_type="SMProxy"
                     command="AddCue"
                     name="Cues"
                     remove_command="RemoveCue">
        <Documentation>Animation cues for changing parameters.</Documentation>
      </ProxyProperty>
    </Proxy>
  </ProxyGroup>

  <!-- ******************************************************************** -->
  <ProxyGroup name="views">
    <!-- ================================================================== -->
    <RenderViewProxy base_proxygroup="internal_views"
                     base_proxyname="ViewBase"
                     class="vtkPVRenderView"
                     name="RenderView"
                     label="Render View"
                     processes="client|renderserver|dataserver">
      <Documentation>View proxy for a 3D interactive render
      view.</Documentation>
      <IntVectorProperty command="SetShowAnnotation"
                         default_values="0"
                         number_of_elements="1"
                         name="ShowAnnotation"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to see annotation providing advanced debugging and performance
          information about each render.
        </Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="ShowAnnotation"/>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetAnnotationColor"
                            default_values="1 1 1"
                            name="AnnotationColor"
                            panel_widget="color_selector_with_palette"
                            panel_visibility="never"
                            number_of_elements="3">
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="TextAnnotationColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseInteractiveRenderingForScreenshots"
                         default_values="0"
                         name="UseInteractiveRenderingForScreenshots"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set whether InteractiveRender() should be used during
        CaptureWindow calls. Default is to use StillRender().</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetInteractionMode"
                         default_values="0"
                         name="InteractionMode"
                         number_of_elements="1"
                         panel_visibility="never"
                         state_ignored="1">
        <EnumerationDomain name="enum">
          <Entry text="3D"
                 value="0" />
          <Entry text="2D"
                 value="1" />
          <Entry text="Selection"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetStillRenderImageReductionFactor"
                         default_values="1"
                         name="StillRenderImageReductionFactor"
                         panel_visibility="never"
                         number_of_elements="1">
        <IntRangeDomain max="20"
                        min="1"
                        name="range" />
        <Documentation>Get/Set the reduction-factor to use when for
        StillRender(). This is typically set to 1, but in some cases with
        terrible connectivity or really large displays, one may want to use a
        sub-sampled image even for StillRender(). This is set it number of
        pixels to be sub-sampled by. Note that image reduction factors have no
        effect when in built-in mode.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="StillRenderImageReductionFactor"/>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty default_values="100.0"
                            name="CollectGeometryThreshold"
                            panel_visibility="never"
                            number_of_elements="1">
        <Documentation>DEPRECATED: Simply set UseOutlineForLODRendering flag to
        true, and whenever LOD rendering is employed, we rendering outlines, is
        possible.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInteractiveRenderImageReductionFactor"
                         default_values="2"
                         name="ImageReductionFactor"
                         panel_visibility="never"
                         number_of_elements="1">
        <IntRangeDomain max="20"
                        min="1"
                        name="range" />
        <Documentation>Get/Set the reduction-factor to use when for
        InteractiveRender(). This is set it number of pixels to be sub-sampled
        by. Note that image reduction factors have no effect when in built-in
        mode.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="ImageReductionFactor"/>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetSuppressRendering"
                         default_values="0"
                         name="SuppressRendering"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to true, this will suppress rendering
        into a window yet still perform all the updates that normally
        happen as a part of rendering.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRemoteRenderingThreshold"
                            default_values="20.0"
                            ignore_synchronization="1"
                            name="RemoteRenderThreshold"
                            panel_visibility="never"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
        <Documentation>The threshold used to determine if the compositing
        should be used for rendering. The value is rendering-geometry size in
        MBs.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="RemoteRenderThreshold"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLODRenderingThreshold"
                            default_values="5"
                            name="LODThreshold"
                            panel_visibility="never"
                            number_of_elements="1">
        <Documentation>Set the memory size threshold above which LOD will be
        used while rendering interactively. The value is rendering-geometry
        size in MBs.</Documentation>
        <DoubleRangeDomain min="0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="LODThreshold"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLODResolution"
                            default_values="0.5"
                            name="LODResolution"
                            panel_visibility="never"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="0"
                           name="range" />
        <Documentation>Set the LOD resolution. 0 implies lowest level or
        detail, while 1 implies maximum level of detail.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="LODResolution"/>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseOutlineForLODRendering"
                         default_values="0"
                         name="UseOutlineForLODRendering"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to true, this overrides the LODResolution. In
        that case, when using LOD for rendering, if possible, the data is
        rendered as outlines.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="UseOutlineForLODRendering"/>
        </Hints>
      </IntVectorProperty>
      <StringVectorProperty command="ConfigureCompressor"
                            default_values="vtkLZ4Compressor 0 3"
                            name="CompressorConfig"
                            panel_visibility="never"
                            number_of_elements="1">
        <Documentation>Used to configure the image compression used for
        client-server image transfer when doing interactive
        renders.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="CompressorConfig"/>
        </Hints>
      </StringVectorProperty>

      <ProxyProperty name="AxesGrid"
                     command="SetGridAxes3DActor"
                     panel_widget="proxy_editor">
        <ProxyListDomain name="proxy_list">
          <Proxy group="annotations" name="GridAxes3DActor" />
        </ProxyListDomain>
        <Hints>
          <ProxyEditorPropertyWidget property="Visibility">
            <!-- tell pqProxyEditorPropertyWidget that use the "Visibility"
                 property on the GridAxes3DActor proxy for a checkbox
                 on the UI -->
          </ProxyEditorPropertyWidget>
        </Hints>
      </ProxyProperty>

      <!-- Center and Orientation Axes -->
      <IntVectorProperty command="SetCenterAxesVisibility"
                         default_values="0"
                         name="CenterAxesVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Toggle the visibility of the axes showing the center of
        rotation in the scene.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetOrientationAxesVisibility"
                         default_values="1"
                         name="OrientationAxesVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Toggle the visibility of the axes showing the
        viewing direction.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetOrientationAxesInteractivity"
                         default_values="0"
                         panel_visibility="advanced"
                         name="OrientationAxesInteractivity"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Allows repositioning of the orientation
        axes.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOrientationAxesLabelColor"
                            default_values="1 1 1"
                            name="OrientationAxesLabelColor"
                            panel_widget="color_selector_with_palette"
                            panel_visibility="advanced"
                            number_of_elements="3">
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="TextAnnotationColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientationAxesOutlineColor"
                            default_values="1 1 1"
                            name="OrientationAxesOutlineColor"
                            panel_widget="color_selector_with_palette"
                            panel_visibility="advanced"
                            number_of_elements="3">
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="ForegroundColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetCenterOfRotation"
                            default_values="0 0 0"
                            name="CenterOfRotation"
                            panel_visibility="never"
                            number_of_elements="3">
        <Documentation>Center of rotation for the interactor.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRotationFactor"
                            default_values="1"
                            name="RotationFactor"
                            panel_visibility="never"
                            number_of_elements="1">
        <Documentation>Rotation speed factor for the interactor. This default
          rotation speed is multipied by this factor. Default value is 1.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty default_values="0"
                         name="NonInteractiveRenderDelay"
                         panel_visibility="never"
                         number_of_elements="1">
        <Documentation>Set the delay (in seconds) after an interactive render
          before switching to a full-res render.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="NonInteractiveRenderDelay"/>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty name="EnableRenderOnInteraction"
                         default_values="1"
                         panel_visibility="never"
                         number_of_elements="1">
                         <BooleanDomain name="bool" />
        <Documentation>
          Set whether the view must render automatically on interaction. If application
          wants to manage renders explicitly, set this to 0 (Off). 1 (On) by default.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty default_values="0.3"
                         name="WindowResizeNonInteractiveRenderDelay"
                         panel_visibility="never"
                         number_of_elements="1">
        <Documentation>Set the delay (in seconds) before doing a full resolution render after the last resize of the window.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="WindowResizeNonInteractiveRenderDelay"/>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty name="Camera3DManipulators"
        command="SetCamera3DManipulators"
        argument_is_array="1"
        number_of_elements="9"
        default_values="4 1 2 3 4 7 2 4 6"
        panel_visibility="never">
        <Documentation>
          Set the interactions mode for 3D interaction. The values are specified
          in order as (left button, middle button, right button), and repeated for
          shift key and control key modifiers.
        </Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewInteractionSettings"
                        property="Camera3DManipulators"/>
        </Hints>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0" />
          <Entry text="Pan" value="1" />
          <Entry text="Zoom" value="2" />
          <Entry text="Roll" value="3" />
          <Entry text="Rotate" value="4" />
          <Entry text="Multi-Rotate" value="5" />
          <Entry text="ZoomToMouse" value="6" />
          <Entry text="SkyboxRotate" value="7" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty name="Camera2DManipulators"
        command="SetCamera2DManipulators"
        argument_is_array="1"
        number_of_elements="9"
        default_values="1 3 2 2 2 6 3 1 4"
        panel_visibility="never">
        <Documentation>
          Set the interactions mode for 2D interaction. The values are specified
          in order as (left button, middle button, right button), and repeated for
          shift key and control key modifiers.
        </Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewInteractionSettings"
                        property="Camera2DManipulators"/>
        </Hints>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0" />
          <Entry text="Pan" value="1" />
          <Entry text="Zoom" value="2" />
          <Entry text="Roll" value="3" />
          <Entry text="Rotate" value="4" />
          <Entry text="ZoomToMouse" value="6" />
        </EnumerationDomain>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetCamera2DMouseWheelMotionFactor"
                            default_values="1"
                            name="Camera2DMouseWheelMotionFactor"
                            number_of_elements="1"
                            panel_visibility="never">
        <DoubleRangeDomain max="10"
                           min="0"
                           name="range"
                           resolution="0.01" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewInteractionSettings"
                        property="Camera2DMouseWheelMotionFactor"/>
        </Hints>
        <Documentation>Set the wheel motion factor for 2D interaction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCamera3DMouseWheelMotionFactor"
                            default_values="1"
                            name="Camera3DMouseWheelMotionFactor"
                            number_of_elements="1"
                            panel_visibility="never">
        <DoubleRangeDomain max="10"
                           min="0"
                           name="range"
                           resolution="0.01" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewInteractionSettings"
                        property="Camera3DMouseWheelMotionFactor"/>
        </Hints>
        <Documentation>Set the wheel motion factor for 3D interaction.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseLightKit"
                         default_values="1"
                         name="UseLight"
                         number_of_elements="1">
        <Documentation>Enable/Disable the LightKit.</Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <!-- Key Light -->
      <DoubleVectorProperty command="SetKeyLightWarmth"
                            default_values="0.60"
                            name="KeyLightWarmth"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range"
                           resolution="0.01" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetKeyLightIntensity"
                            default_values="0.75"
                            name="KeyLightIntensity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range"
                           resolution="0.05" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetKeyLightElevation"
                            default_values="50.0"
                            name="KeyLightElevation"
                            number_of_elements="1">
        <DoubleRangeDomain max="90"
                           min="0"
                           name="range"
                           resolution="1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetKeyLightAzimuth"
                            default_values="10.0"
                            name="KeyLightAzimuth"
                            number_of_elements="1">
        <DoubleRangeDomain max="90"
                           min="-90"
                           name="range"
                           resolution="1" />
      </DoubleVectorProperty>
      <!-- Fill Light -->
      <DoubleVectorProperty command="SetFillLightWarmth"
                            default_values="0.40"
                            name="FillLightWarmth"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range"
                           resolution="0.01" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetKeyToFillRatio"
                            default_values="3.0"
                            name="FillLightK:F Ratio"
                            number_of_elements="1">
        <DoubleRangeDomain max="15"
                           min="1"
                           name="range"
                           resolution="0.1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetFillLightElevation"
                            default_values="-75.0"
                            name="FillLightElevation"
                            number_of_elements="1">
        <DoubleRangeDomain max="10"
                           min="-90"
                           name="range"
                           resolution="1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetFillLightAzimuth"
                            default_values="-10.0"
                            name="FillLightAzimuth"
                            number_of_elements="1">
        <DoubleRangeDomain max="90"
                           min="-90"
                           name="range"
                           resolution="1" />
      </DoubleVectorProperty>
      <!-- Back Light -->
      <DoubleVectorProperty command="SetBackLightWarmth"
                            default_values="0.50"
                            name="BackLightWarmth"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range"
                           resolution="0.01" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetKeyToBackRatio"
                            default_values="3.5"
                            name="BackLightK:B Ratio"
                            number_of_elements="1">
        <DoubleRangeDomain max="15"
                           min="1"
                           name="range"
                           resolution="0.1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBackLightElevation"
                            default_values="0.0"
                            name="BackLightElevation"
                            number_of_elements="1">
        <DoubleRangeDomain max="45"
                           min="-45"
                           name="range"
                           resolution="1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBackLightAzimuth"
                            default_values="110.0"
                            name="BackLightAzimuth"
                            number_of_elements="1">
        <DoubleRangeDomain max="170"
                           min="60"
                           name="range"
                           resolution="1" />
      </DoubleVectorProperty>
      <!-- Head Light -->
      <DoubleVectorProperty command="SetHeadLightWarmth"
                            default_values="0.50"
                            name="HeadLightWarmth"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range"
                           resolution="0.01" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetKeyToHeadRatio"
                            default_values="3.0"
                            name="HeadLightK:H Ratio"
                            number_of_elements="1">
        <DoubleRangeDomain max="15"
                           min="1"
                           name="range"
                           resolution="0.1" />
      </DoubleVectorProperty>
      <!-- Maintain Luminance -->
      <IntVectorProperty command="SetMaintainLuminance"
                         default_values="0"
                         name="MaintainLuminance"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty command="SetUseHiddenLineRemoval"
                         default_values="0"
                         name="HiddenLineRemoval"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Use a hidden line removal technique to hide wireframe surfaces that
          are occluded by other wireframe surfaces. Note that this is disabled
          when rendering distributed geometry in parallel.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetUseDepthPeeling"
                         default_values="1"
                         name="DepthPeeling"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="DepthPeeling"/>
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetUseDepthPeelingForVolumes"
                         default_values="1"
                         name="DepthPeelingForVolumes"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="DepthPeelingForVolumes"/>
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetMaximumNumberOfPeels"
                         default_values="4"
                         name="MaximumNumberOfPeels"
                         panel_visibility="never"
                         number_of_elements="1">
        <Documentation>In case of depth peeling, define the maximum number of
        peeling layers. Initial value is 4. A special value of 0 means no
        maximum limit. It has to be a positive value.</Documentation>
        <IntRangeDomain min="0"
                        name="range" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="MaximumNumberOfPeels"/>
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetUseFXAA"
                         default_values="0"
                         name="UseFXAA"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="UseFXAA"/>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetFXAARelativeContrastThreshold"
                            default_values="0.125"
                            name="FXAARelativeContrastThreshold"
                            panel_visibility="never"
                            number_of_elements="1">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="FXAARelativeContrastThreshold" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetFXAAHardContrastThreshold"
                            default_values="0.0625"
                            name="FXAAHardContrastThreshold"
                            panel_visibility="never"
                            number_of_elements="1">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="FXAAHardContrastThreshold" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetFXAASubpixelBlendLimit"
                            default_values="0.75"
                            name="FXAASubpixelBlendLimit"
                            panel_visibility="never"
                            number_of_elements="1">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="FXAASubpixelBlendLimit" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetFXAASubpixelContrastThreshold"
                            default_values="0.25"
                            name="FXAASubpixelContrastThreshold"
                            panel_visibility="never"
                            number_of_elements="1">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="FXAASubpixelContrastThreshold" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetFXAAUseHighQualityEndpoints"
                         default_values="1"
                         name="FXAAUseHighQualityEndpoints"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="FXAAUseHighQualityEndpoints" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetFXAAEndpointSearchIterations"
                         default_values="12"
                         name="FXAAEndpointSearchIterations"
                         panel_visibility="never"
                         number_of_elements="1">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="FXAAEndpointSearchIterations" />
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty name="UseToneMapping"
                         command="SetUseToneMapping"
                         default_values="0"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Enable / Disable tone mapping. Tone mapping is a technique to preserve the colors when the scene is too dark or too bright.
          Refer to the settings for more configuration.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty name="Exposure"
                            command="SetExposure"
                            default_values="1.0"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <DoubleRangeDomain name="range" min="0.0" max="10.0" />
        <Documentation>
          Set the exposure coefficient.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="UseToneMapping"
                 value="1" />
              <Expression type="or">
                <PropertyWidgetDecorator type="GenericDecorator"
                                         mode="visibility"
                                         property="ToneMappingType"
                                         value="2" />
                <PropertyWidgetDecorator type="GenericDecorator"
                                         mode="visibility"
                                         property="ToneMappingType"
                                         value="3" />
              </Expression>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty name="ToneMappingType"
                         command="SetToneMappingType"
                         number_of_elements="1"
                         default_values="3"
                         panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="ToneMappingType"/>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty name="Contrast"
                            command="SetContrast"
                            default_values="1.6773"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="Contrast"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="Shoulder"
                            command="SetShoulder"
                            default_values="0.9714"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="Shoulder"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="MidIn"
                            command="SetMidIn"
                            default_values="0.18"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="MidIn"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="MidOut"
                            command="SetMidOut"
                            default_values="0.18"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="MidOut"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="HdrMax"
                            command="SetHdrMax"
                            default_values="11.0785"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="HdrMax"/>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty name="UseACES"
                         command="SetUseACES"
                         default_values="1"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="UseACES"/>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty name="GenericFilmicPresets"
                         command="SetGenericFilmicPresets"
                         number_of_elements="1"
                         default_values="1"
                         panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="GenericFilmicPresets"/>
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty name="UseSSAO"
                         command="SetUseSSAO"
                         label="Use Ambient Occlusion"
                         default_values="0"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Enable / Disable screen space ambient occlusion.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="UseSSAODefaultPresets"
                            command="SetUseSSAODefaultPresets"
                            default_values="1"
                            number_of_elements="1"
                            panel_visibility="never">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="UseSSAODefaultPresets"/>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty name="Radius"
                            command="SetRadius"
                            default_values="0.5"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="Radius"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty name="Bias"
                            command="SetBias"
                            default_values="0.01"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="Bias"/>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty name="KernelSize"
                            command="SetKernelSize"
                            default_values="32"
                            number_of_elements="1"
                            panel_visibility="never">
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="KernelSize"/>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty name="Blur"
                            command="SetBlur"
                            default_values="0"
                            number_of_elements="1"
                            panel_visibility="never">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="RenderViewSettings"
                        property="Blur"/>
        </Hints>
      </IntVectorProperty>

      <IntVectorProperty command="SetStereoCapableWindow"
                         default_values="none"
                         name="StereoCapableWindow"
                         number_of_elements="1"
                         is_internal="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetStereoRender"
                         default_values="0"
                         name="StereoRender"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetStereoType"
                         default_values="none"
                         name="StereoType"
                         number_of_elements="1">
        <Documentation>
          Set the stereo rendering mode to use. In client-server configurations,
          you may also want to set the ServerStereoType.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="Crystal Eyes"
                 value="1" />
          <Entry text="Red-Blue"
                 value="2" />
          <Entry text="Interlaced"
                 value="3" />
          <Entry text="Left"
                 value="4" />
          <Entry text="Right"
                 value="5" />
          <Entry text="Dresden"
                 value="6" />
          <Entry text="Anaglyph"
                 value="7" />
          <Entry text="Checkerboard"
                 value="8" />
          <Entry text="SplitViewportHorizontal"
                 value="9" />
          <Entry text="None"
                 value="10" />
        </EnumerationDomain>
        <Hints>
          <NoDefault />
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="StereoRender" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetServerStereoType"
                         default_values="0"
                         name="ServerStereoType"
                         number_of_elements="1">
        <Documentation>
          This property allows you to set a different stereo mode for the server processes.
          Note that the stereo type selected on the client and server must be *compatible*, i.e.
          if the stereo type on the client side needs 2 renders each frame, the stereo type on the
          server must do exactly the same, otherwise deadlocks may ensue.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="Same As Client" value="0" />
          <Entry text="Crystal Eyes" value="1" />
          <Entry text="Red-Blue" value="2" />
          <Entry text="Interlaced" value="3" />
          <Entry text="Left" value="4" />
          <Entry text="Right" value="5" />
          <Entry text="Dresden" value="6" />
          <Entry text="Anaglyph" value="7" />
          <Entry text="Checkerboard" value="8" />
          <Entry text="SplitViewportHorizontal" value="9" />
          <Entry text="None" value="10" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="StereoRender" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetMultiSamples"
                         default_values="0"
                         name="MultiSamples"
                         panel_visibility="never"
                         number_of_elements="1">
      </IntVectorProperty>
      <IntVectorProperty command="SetAlphaBitPlanes"
                         default_values="1"
                         name="AlphaBitPlanes"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetStencilCapable"
                         default_values="1"
                         name="StencilCapable"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <ProxyProperty command="AddRepresentation"
                     is_internal="1"
                     name="HiddenRepresentations"
                     remove_command="RemoveRepresentation"
                     repeatable="1">
        <Documentation>This property is meant for adding/removing
        representation secretly. e.g. 3D widgets etc. This property is not
        saved in states nor it recorded by undo-redo.</Documentation>
      </ProxyProperty>
      <ProxyProperty command="AddPropToRenderer"
                     is_internal="1"
                     name="HiddenProps"
                     remove_command="RemovePropFromRenderer"
                     repeatable="1">
        <Documentation>This property is meant for adding/removing props
        secretly. e.g. 3D widgets etc. This property is not saved in states nor
        it recorded by undo-redo.</Documentation>
      </ProxyProperty>
      <SubProxy>
        <Proxy name="ActiveCamera"
               proxygroup="camera"
               proxyname="Camera"></Proxy>
        <ExposedProperties>
          <Property name="CameraPositionInfo" panel_visibility="never"/>
          <Property name="CameraPosition" panel_visibility="never"/>
          <Property name="CameraFocalPointInfo" panel_visibility="never"/>
          <Property name="CameraFocalPoint" panel_visibility="never"/>
          <Property name="CameraViewUpInfo" panel_visibility="never"/>
          <Property name="CameraViewUp" panel_visibility="never"/>
          <Property name="CameraViewAngleInfo" panel_visibility="never"/>
          <Property name="CameraViewAngle" panel_visibility="never"/>
          <Property name="CameraFocalDiskInfo" panel_visibility="never"/>
          <Property name="CameraFocalDisk" panel_visibility="never"/>
          <Property name="CameraFocalDistanceInfo" panel_visibility="never"/>
          <Property name="CameraFocalDistance" panel_visibility="never"/>
          <Property name="CameraParallelScale" panel_visibility="never"/>
          <Property name="CameraParallelScaleInfo" panel_visibility="never"/>
          <Property name="EyeAngle" panel_visibility="never"/>
          <Property name="EyeTransformMatrix" />
          <Property name="ModelTransformMatrix" />
        </ExposedProperties>
      </SubProxy>
      <IntVectorProperty command="SetParallelProjection"
                         default_values="0"
                         ignore_synchronization="1"
                         name="CameraParallelProjection"
                         number_of_elements="1"
                         panel_visibility="default">
        <BooleanDomain name="bool" />
        <Documentation>
          Enable/disable parallel projection mode.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetUseRenderViewSettingsForBackground"
                         name="UseColorPaletteForBackground"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
            When set, the view uses the background color settings as specified in
            global color palette.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetBackgroundColorMode"
                         name="BackgroundColorMode"
                         number_of_elements="1"
                         default_values="0">
        <EnumerationDomain name="enum">
          <Entry text="Single Color" value="0" />
          <Entry text="Gradient" value="1" />
          <Entry text="Texture" value="2" />
          <Entry text="Skybox" value="3" />
          <Entry text="Stereo Skybox" value="4" />
        </EnumerationDomain>
        <Documentation>
          Select the background for the view.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state"
            property="UseColorPaletteForBackground" values="0" />
        </Hints>
      </IntVectorProperty>
      <ProxyProperty command="SetBackgroundTexture"
                     name="BackgroundTexture" panel_widget="texture_selector">
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <!-- hide widget unless mode is "Texture" or "Skybox" -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="visibility"
            property="BackgroundColorMode" values="2 3 4" />
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state"
            property="UseColorPaletteForBackground" values="0" />
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetBackground2"
                            default_values="0 0 0.165"
                            name="Background2"
                            label="Background 2"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1" min="0 0 0" name="range" />
        <Hints>
          <!-- hide widget unless mode is "Gradient" -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="visibility"
            property="BackgroundColorMode" value="1" />
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state"
            property="UseColorPaletteForBackground" values="0" />
        </Hints>
        <Documentation>
          Specify the color to use for the upper half of the viewport when using **Gradient**
          background color mode.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBackground"
                            default_values="0.329 0.349 0.427"
                            name="Background"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state"
            property="UseColorPaletteForBackground" values="0" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseEnvironmentLighting"
                         default_values="0"
                         name="UseEnvironmentLighting"
                         number_of_elements="1">
        <Documentation>
          Enable skybox light contribution. This feature is only compatible with PBR interpolation.
        </Documentation>
        <BooleanDomain name="bool" />
        <Hints>
          <!-- hide widget unless mode is "Skybox" -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="visibility"
            property="BackgroundColorMode" value="3" />
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state"
            property="UseColorPaletteForBackground" values="0" />
        </Hints>
      </IntVectorProperty>
      <Property
          name="CaptureZBuffer"
          command="CaptureZBuffer"
          >
        <Documentation>A helper function to get the Z buffer from
        a RenderView.</Documentation>
      </Property>
      <DoubleVectorProperty
          command="SetMaxClipBounds"
          default_values="0.0 -1.0 0.0 -1.0 0.0 -1.0"
          name="MaxClipBounds"
          number_of_elements="6"
          argument_is_array="1"
          animateable="0"
          >
        <DoubleRangeDomain name="range" />
        <Documentation>Set the most conservative clipping range.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty
          name="LockBounds"
          command="SetLockBounds"
          default_values="0"
          animateable="0"
          number_of_elements="1"
          >
        <BooleanDomain name="bool" />
        <Documentation>A helper function to force consistent Z buffer
        captures from a RenderView.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="EnableOSPRay"
          label="Enable Ray Tracing"
          command="SetEnableOSPRay"
          default_values="0"
          animateable="0"
          number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Switches between rasterization and ray tracing.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
        </Hints>
      </IntVectorProperty>
      <StringVectorProperty name="OSPRayRendererType"
          command="SetOSPRayRendererType"
          label="Back End"
          default_values="scivis"
          number_of_elements="1">
        <RendererDomain name="list">
        </RendererDomain>
        <Documentation>Selects a specific ray traced rendering engine.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty
          name="Shadows"
          command="SetShadows"
          default_values="0"
          animateable="0"
          number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Controls whether OSPRay raycaster back end casts shadow rays
        or not.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                 <Property name="OSPRayRendererType" function="equals" value="OSPRay raycaster"/>
              </PropertyWidgetDecorator>
            </Expression>
	  </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty
          name="AmbientSamples"
          command="SetAmbientOcclusionSamples"
          default_values="0"
          animateable="0"
          number_of_elements="1">
        <IntRangeDomain
            min="0"
            name="range"/>
        <Documentation>Sets the number of occlusion query rays that
        OSPRay raycaster sends at each intersection.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                 <Property name="OSPRayRendererType" function="equals" value="OSPRay raycaster"/>
              </PropertyWidgetDecorator>
            </Expression>
	  </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty
          name="SamplesPerPixel"
          command="SetSamplesPerPixel"
          default_values="1"
          animateable="0"
          number_of_elements="1">
        <IntRangeDomain
            min="1"
            name="range"/>
        <Documentation>Set the number of primary rays that ray tracers
        shoot per pixel.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty
          name="MaxFrames"
          label="Progressive Passes"
          command="SetMaxFrames"
          default_values="1"
          animateable="0"
          number_of_elements="1">
        <IntRangeDomain
            min="1"
            name="range"/>
        <Documentation>Set the number of render passes ray tracers take to
        improve image quality. Note, this requires turning on the
        'Enable Streaming' setting in Edit->Preferences/Settings.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty
          name="RouletteDepth"
          command="SetRouletteDepth"
          default_values="5"
          animateable="0"
          number_of_elements="1">
        <IntRangeDomain
            min="0"
            name="range"/>
        <Documentation>Set the path traced recursion depth at which to start Russian roulette termination.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                 <Property name="OSPRayRendererType" function="equals" value="OSPRay pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty
          name="VolumeAnisotropy"
          command="SetVolumeAnisotropy"
          default_values="0.0"
          animateable="0"
          number_of_elements="1">
        <DoubleRangeDomain
            min="-1.0"
            max="1.0"
            name="range"/>
        <Documentation>Set the tendency for light to scatter back towards (negative) or away from (positive) the light source within path traced volumes.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                 <Property name="OSPRayRendererType" function="equals" value="OSPRay pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
	  </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty
          name="Denoise"
          command="SetDenoise"
          default_values="1"
          animateable="0"
          number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Controls whether to denoise images. This option will have no effect without a denoiser library and until progressive passes or samples per pixel exceeds four.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="or">
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="MaxFrames" function="greaterthan" value="3"/>
              </PropertyWidgetDecorator>
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="SamplesPerPixel" function="greaterthan" value="3" />
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty
          name="LightScale"
          command="SetLightScale"
          default_values="1.0"
          animateable="0"
          number_of_elements="1">
        <DoubleRangeDomain
            min="0.0"
            name="range"/>
        <Documentation>Diminish or amplify all lights in the scene.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty
          name="OSPRayTemporalCacheSize"
          label="Temporal Cache Size"
          command="SetTimeCacheSize"
          default_values="0"
          animateable="0"
          number_of_elements="1">
        <IntRangeDomain
            min="0"
            name="range"/>
        <Documentation>Set the size of the timestep cache that speeds up flip book animation in ray tracers.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetBackgroundMode"
                         label="Background mode"
                         default_values="2"
                         name="BackgroundMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <!--<Entry text="None"
                 value="0" /> Disabled since needs more work. -->
          <Entry text="Backplate"
                 value="1" />
          <Entry text="Environment"
                 value="2" />
          <Entry text="Both"
                 value="3" />
        </EnumerationDomain>
        <Documentation>
          Background behavior for path tracers. Backplate does not move or affect materials. Environment does.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty
          name="BackgroundNorth"
          label="Environment North"
          command="SetBackgroundNorth"
          default_values="0.0 1.0 0.0"
          animateable="0"
          number_of_elements="3">
        <Documentation>Sets north pole for gradient and image environmental background in path tracers.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty
          name="BackgroundEast"
          command="SetBackgroundEast"
          label="Environment East"
          default_values="1.0 0.0 0.0"
          animateable="0"
          number_of_elements="3">
        <Documentation>Sets east direction for image environmental background in path tracers.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEnvironmentalBG"
                            default_values="0.329 0.349 0.427"
                            name="EnvironmentalBG"
                            panel_widget="color_selector_with_palette"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEnvironmentalBG2"
                            default_values="0 0 0.165"
                            name="EnvironmentalBG2"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetGradientEnvironmentalBG"
                         default_values="0"
                         name="UseGradientEnvironmentalBG"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetTexturedEnvironmentalBG"
                         default_values="0"
                         name="UseTexturedEnvironmentalBG"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <ProxyProperty command="SetEnvironmentalBGTexture"
                     name="EnvironmentalBGTexture"
                     panel_widget="texture_selector">
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="contains" value="pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </ProxyProperty>
      <ProxyProperty
        name="AdditionalLights"
        command="AddLight"
        remove_command="RemoveLight"
        repeatable="1">
      </ProxyProperty>
      <ProxyProperty command="SetMaterialLibrary"
                     name="OSPRayMaterialLibrary"
                     label="OSPRay Material Library"
                     number_of_elements="1"
                     panel_visibility="never"
                     default_values="None">
        <Documentation>Container for a set of material specifications.</Documentation>
      </ProxyProperty>
      <PropertyGroup label="Orientation Axes">
        <Property name="OrientationAxesVisibility"/>
        <Property name="OrientationAxesInteractivity"/>
        <Property name="OrientationAxesLabelColor"/>
        <Property name="OrientationAxesOutlineColor"/>
      </PropertyGroup>
      <PropertyGroup label="Render Passes">
        <Property name="UseToneMapping"/>
        <Property name="Exposure"/>
        <Property name="UseSSAO"/>
      </PropertyGroup>
      <PropertyGroup name="Lights"
                     label="Lights"
                     panel_visibility="never">
        <!-- Light Kit -->
        <Property name="UseLight"/>
        <!-- Key Light -->
        <Property name="KeyLightWarmth"/>
        <Property name="KeyLightIntensity"/>
        <Property name="KeyLightElevation"/>
        <Property name="KeyLightAzimuth"/>
        <!-- Fill Light -->
        <Property name="FillLightWarmth"/>
        <Property name="FillLightK:F Ratio"/>
        <Property name="FillLightElevation"/>
        <Property name="FillLightAzimuth"/>
        <!-- Back Light -->
        <Property name="BackLightWarmth"/>
        <Property name="BackLightK:B Ratio"/>
        <Property name="BackLightElevation"/>
        <Property name="BackLightAzimuth"/>
        <!-- Head Light -->
        <Property name="HeadLightWarmth"/>
        <Property name="HeadLightK:H Ratio"/>
        <Property name="MaintainLuminance"/>
      </PropertyGroup>
      <PropertyGroup label="Background" >
        <Property name="UseColorPaletteForBackground" />
        <Property name="BackgroundColorMode" />
        <Property name="Background2"/>
        <Property name="Background"/>
        <Property name="BackgroundTexture"/>
        <Property name="UseEnvironmentLighting"/>
      </PropertyGroup>
      <PropertyGroup label="Stereo">
        <Property name="StereoCapableWindow" />
        <Property name="StereoRender" />
        <Property name="StereoType" />
        <Property name="ServerStereoType" />
      </PropertyGroup>
      <PropertyGroup label="Cinema Export"
                     panel_visibility="never">
        <Property name="CaptureZBuffer"/>
        <Property name="MaxClipBounds"/>
        <Property name="LockBounds"/>
      </PropertyGroup>
      <PropertyGroup label="Ray Traced Rendering"
                     panel_visibility="advanced">
        <Property name="EnableOSPRay"/>
        <Property name="Shadows"/>
        <Property name="OSPRayRendererType"/>
        <Property name="AmbientSamples"/>
        <Property name="SamplesPerPixel"/>
        <Property name="RouletteDepth"/>
        <Property name="MaxFrames"/>
        <Property name="Denoise"/>
        <Property name="VolumeAnisotropy"/>
        <Property name="LightScale"/>
        <Property name="OSPRayTemporalCacheSize"/>
        <Property name="BackgroundNorth"/>
        <Property name="BackgroundEast"/>
        <Property name="BackgroundMode"/>
      </PropertyGroup>
      <PropertyGroup label="Path Traced Environment" panel_widget="EnvironmentalBGEditor" panel_visibility="default">
        <Property name="EnvironmentalBG"/>
        <Property name="EnvironmentalBG2"/>
        <Property name="UseGradientEnvironmentalBG"/>
        <Property name="UseTexturedEnvironmentalBG"/>
        <Property name="EnvironmentalBGTexture"/>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="EnableOSPRay"
                                       values="1" />
              <PropertyWidgetDecorator type="EnableWidgetDecorator">
                <Property name="OSPRayRendererType" function="equals" value="OSPRay pathtracer"/>
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </PropertyGroup>

      <SubProxy command="SetDeliveryManager">
        <Proxy name="DeliveryManager"
          proxygroup="delivery_managers"
          proxyname="RenderViewDeliveryManager"/>
      </SubProxy>
    </RenderViewProxy>

    <!-- ================================================================== -->
    <OrthographicSliceViewProxy base_proxygroup="views"
                     base_proxyname="RenderView"
                     class="vtkPVOrthographicSliceView"
                     processes="client|renderserver|dataserver"
                     label="Orthographic Slice View"
                     name="OrthographicSliceView">
      <DoubleVectorProperty name="SlicePosition"
                            command="SetSlicePosition"
                            number_of_elements="3"
                            default_values="0 0 0">
        <Documentation>
          Set the slice position.
        </Documentation>
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>

      <DoubleVectorProperty name="SliceIncrements"
        command="SetSliceIncrements"
        number_of_elements="3"
        default_values="1 1 1">
        <DoubleRangeDomain name="range" />
        <Documentation>
          When interacting using the thumb wheel, set the increments to use
          to change the slice position.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty name="ShowSliceAnnotations"
        command="SetSliceAnnotationsVisibility"
        number_of_elements="1"
        default_values="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

    </OrthographicSliceViewProxy>

    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewBase4Axes"
                      class="vtkPVXYChartView"
                      name="XYChartView"
                      label="Line Chart View"
                      processes="client|renderserver|dataserver"
                      representation_name="XYChartRepresentation"
                      post_creation="SetChartTypeToLine" >
      <Documentation>This is the proxy for the XY line chart
      view.</Documentation>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewBase4Axes"
                      class="vtkPVXYChartView"
                      name="XYPointChartView"
                      label="Point Chart View"
                      processes="client|renderserver|dataserver"
                      representation_name="XYPointChartRepresentation"
                      post_creation="SetChartTypeToPoint" >
      <Documentation>This is the proxy for the XY point chart
      view.</Documentation>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewBase4Axes"
                      class="vtkPVXYChartView"
                      name="QuartileChartView"
                      label="Quartile Chart View"
                      processes="client|renderserver|dataserver"
                      representation_name="QuartileChartRepresentation"
                      post_creation="SetChartTypeToArea" >
      <Documentation>This is the proxy for the Quartile chart view.</Documentation>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewBase4Axes"
                      class="vtkPVXYChartView"
                      name="XYBarChartView"
                      label="Bar Chart View"
                      processes="client|renderserver|dataserver"
                      representation_name="XYBarChartRepresentation"
                      post_creation="SetChartTypeToBar" >
      <Documentation>This is the proxy for bar chart view.</Documentation>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewBase4Axes"
                      class="vtkPVXYChartView"
                      name="XYHistogramChartView"
                      label="Histogram View"
                      processes="client|renderserver|dataserver"
                      post_creation="SetChartTypeToBar"
                      representation_name="HistogramChartRepresentation"
                      skip_plotable_check="1">
      <Documentation>This is the proxy for the histogram chart view.</Documentation>
      <Hints>
        <ShowOneRepresentationAtATime type="HistogramChartRepresentation" />
        <!-- When present, vtkSMParaViewPipelineController::Show() will
             result in hiding other representations that are currently visible
             -->
      </Hints>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="XYChartViewTitle"
                      class="vtkPVXYChartView"
                      name="BoxChartView"
                      label="Box Chart View"
                      processes="client|renderserver|dataserver"
                      representation_name="BoxChartRepresentation"
                      post_creation="SetChartTypeToBox" >
      <Documentation>This is the proxy for box chart view.</Documentation>
      <IntVectorProperty command="SetLegendVisibility"
                         default_values="1"
                         panel_visibility="never"
                         name="ShowLegend"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetLegendSymbolWidth"
                         default_values="25"
                         name="LegendSymbolWidth"
                         number_of_elements="1"
                         panel_visibility="never">
      </IntVectorProperty>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <ContextViewProxy base_proxygroup="internal_views"
                      base_proxyname="ViewBase"
                      class="vtkPVXYChartView"
                      name="ParallelCoordinatesChartView"
                      label="Parallel Coordinates View"
                      processes="client|renderserver|dataserver"
                      representation_name="ParallelCoordinatesRepresentation"
                      post_creation="SetChartTypeToParallelCoordinates"
                      skip_plotable_check="1">
      <Documentation>
        This is the proxy for parallel coordinates chart view.
      </Documentation>
      <SubProxy command="SetDeliveryManager">
        <Proxy name="DeliveryManager"
          proxygroup="delivery_managers"
          proxyname="ContextViewDeliveryManager"/>
      </SubProxy>
      <Hints>
        <ShowOneRepresentationAtATime type="ParallelCoordinatesRepresentation" />
        <!-- When present, vtkSMParaViewPipelineController::Show() will
             result in hiding other representations that are currently visible
             -->
      </Hints>
    </ContextViewProxy>
    <!-- ================================================================== -->
    <PlotMatrixViewProxy base_proxygroup="internal_views"
                         base_proxyname="XYChartViewTitle"
                         class="vtkPVPlotMatrixView"
                         name="PlotMatrixView"
                         label="Plot Matrix View"
                         processes="client|renderserver|dataserver"
                         representation_name="PlotMatrixRepresentation"
                         skip_plotable_check="1">
      <Documentation>This is the proxy for the plot matrix
      view.</Documentation>
      <IntVectorProperty command="SetBorderLeft"
                         default_values="50"
                         name="BorderLeft"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetBorderBottom"
                         default_values="40"
                         name="BorderBottom"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetBorderRight"
                         default_values="50"
                         name="BorderRight"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetBorderTop"
                         default_values="40"
                         name="BorderTop"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetGutterX"
                         default_values="15"
                         name="GutterX"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetGutterY"
                         default_values="15"
                         name="GutterY"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>
      <IntVectorProperty command="SetNumberOfAnimationFrames"
                         default_values="25"
                         name="NumberOfAnimationFrames"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <IntRangeDomain min="0" name="range" />
      </IntVectorProperty>

      <PropertyGroup label="Border">
        <Property name="BorderLeft"/>
        <Property name="BorderBottom"/>
        <Property name="BorderRight"/>
        <Property name="BorderTop"/>
      </PropertyGroup>

      <PropertyGroup label="Spacing (Gutter)">
        <Property name="GutterX"/>
        <Property name="GutterY"/>
      </PropertyGroup>

      <DoubleVectorProperty command="SetScatterPlotSelectedRowColumnColor"
                            default_values="0.8 0 0 0.4"
                            name="ScatterPlotSelectedRowColumnColor"
                            number_of_elements="4"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1 1"
                           min="0 0 0 0"
                           name="range" />
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetScatterPlotSelectedActiveColor"
                            default_values="0 0.8 0 0.4"
                            name="ScatterPlotSelectedActiveColor"
                            number_of_elements="4"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1 1"
                           min="0 0 0 0"
                           name="range" />
      </DoubleVectorProperty>

      <!-- activeplot -->
      <DoubleVectorProperty command="SetActivePlotBackgroundColor"
                            default_values="1 1 1 0"
                            name="ActivePlotBackgroundColor"
                            number_of_elements="4"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1 1"
                           min="0 0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetActivePlotAxisColor"
                            default_values="0 0 0"
                            name="ActivePlotAxisColor"
                            panel_widget="color_selector"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetActivePlotGridColor"
                            default_values="0.95 0.95 0.95"
                            name="ActivePlotGridColor"
                            panel_widget="color_selector"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetActivePlotGridVisibility"
                         default_values="1"
                         name="ActivePlotGridVisibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetActivePlotAxisLabelVisibility"
                         default_values="1"
                         name="ActivePlotAxisLabelVisibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetActivePlotAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="ActivePlotAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetActivePlotAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="ActivePlotAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <StringVectorProperty command="SetActivePlotAxisLabelFontFamily"
                            default_values="Arial"
                            name="ActivePlotAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActivePlotAxisLabelFontFile"
                            name="ActivePlotAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetActivePlotAxisLabelFontSize"
                            default_values="12"
                            name="ActivePlotAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetActivePlotAxisLabelBold"
                            default_values="0"
                            name="ActivePlotAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetActivePlotAxisLabelItalic"
                            default_values="0"
                            name="ActivePlotAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetActivePlotAxisLabelColor"
                            default_values="0 0 0"
                            name="ActivePlotAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="ActivePlot"
                     panel_visibility="advanced">
        <Property name="ActivePlotBackgroundColor"/>
        <Property name="ActivePlotAxisColor"/>
        <Property name="ActivePlotGridColor"/>
        <Property name="ActivePlotGridVisibility"/>
        <Property name="ActivePlotAxisLabelVisibility"/>
        <Property name="ActivePlotAxisLabelNotation"/>
        <Property name="ActivePlotAxisLabelPrecision"/>
      </PropertyGroup>
      <PropertyGroup label="ActivePlot Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="ActivePlotAxisLabelColor" function="Color"/>
        <Property name="ActivePlotAxisLabelFontFamily" function="Family"/>
        <Property name="ActivePlotAxisLabelFontFile" function="File"/>
        <Property name="ActivePlotAxisLabelBold" function="Bold" />
        <Property name="ActivePlotAxisLabelItalic" function="Italics"/>
        <Property name="ActivePlotAxisLabelFontSize" function="Size" />
      </PropertyGroup>

      <!-- scatterplot -->
      <DoubleVectorProperty command="SetScatterPlotBackgroundColor"
                            default_values="1 1 1 0"
                            name="ScatterPlotBackgroundColor"
                            number_of_elements="4"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1 1"
                           min="0 0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScatterPlotAxisColor"
                            default_values="0 0 0"
                            name="ScatterPlotAxisColor"
                            panel_widget="color_selector"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScatterPlotGridColor"
                            default_values="0.95 0.95 0.95"
                            name="ScatterPlotGridColor"
                            panel_widget="color_selector"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetScatterPlotGridVisibility"
                         default_values="1"
                         name="ScatterPlotGridVisibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetScatterPlotAxisLabelVisibility"
                         default_values="1"
                         name="ScatterPlotAxisLabelVisibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetScatterPlotAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="ScatterPlotAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetScatterPlotAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="ScatterPlotAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <StringVectorProperty command="SetScatterPlotAxisLabelFontFamily"
                            default_values="Arial"
                            name="ScatterPlotAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetScatterPlotAxisLabelFontFile"
                            name="ScatterPlotAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetScatterPlotAxisLabelFontSize"
                            default_values="12"
                            name="ScatterPlotAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetScatterPlotAxisLabelBold"
                            default_values="0"
                            name="ScatterPlotAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetScatterPlotAxisLabelItalic"
                            default_values="0"
                            name="ScatterPlotAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetScatterPlotAxisLabelColor"
                            default_values="0 0 0"
                            name="ScatterPlotAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="ScatterPlot"
                     panel_visibility="advanced">
        <Property name="ScatterPlotBackgroundColor"/>
        <Property name="ScatterPlotAxisColor"/>
        <Property name="ScatterPlotGridColor"/>
        <Property name="ScatterPlotGridVisibility"/>
        <Property name="ScatterPlotAxisLabelVisibility"/>
        <Property name="ScatterPlotAxisLabelNotation"/>
        <Property name="ScatterPlotAxisLabelPrecision"/>
      </PropertyGroup>
      <PropertyGroup label="ScatterPlot Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="ScatterPlotAxisLabelColor" function="Color"/>
        <Property name="ScatterPlotAxisLabelFontFamily" function="Family"/>
        <Property name="ScatterPlotAxisLabelFontFile" function="File"/>
        <Property name="ScatterPlotAxisLabelBold" function="Bold" />
        <Property name="ScatterPlotAxisLabelItalic" function="Italics"/>
        <Property name="ScatterPlotAxisLabelFontSize" function="Size" />
      </PropertyGroup>

      <!-- histogram -->
      <DoubleVectorProperty command="SetHistogramBackgroundColor"
                            default_values="0.5 0.5 0.5 0.4"
                            name="HistogramBackgroundColor"
                            number_of_elements="4"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1 1"
                           min="0 0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetHistogramAxisColor"
                            default_values="0 0 0"
                            name="HistogramAxisColor"
                            panel_widget="color_selector"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetHistogramGridColor"
                            default_values="0.95 0.95 0.95"
                            name="HistogramGridColor"
                            panel_widget="color_selector"
                            number_of_elements="3"
                            panel_visibility="advanced">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetHistogramGridVisibility"
                         default_values="1"
                         name="HistogramGridVisibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetHistogramAxisLabelVisibility"
                         default_values="1"
                         name="HistogramAxisLabelVisibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetHistogramAxisLabelNotation"
                         default_values="0"
                         panel_visibility="advanced"
                         name="HistogramAxisLabelNotation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Mixed"
                 value="0" />
          <Entry text="Scientific"
                 value="1" />
          <Entry text="Fixed"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetHistogramAxisLabelPrecision"
                         default_values="2"
                         panel_visibility="advanced"
                         name="HistogramAxisLabelPrecision"
                         number_of_elements="1">
        <IntRangeDomain name="range" min="0"/>
      </IntVectorProperty>
      <StringVectorProperty command="SetHistogramAxisLabelFontFamily"
                            default_values="Arial"
                            name="HistogramAxisLabelFontFamily"
                            number_of_elements="1">
        <StringListDomain name="list">
          <String value="Arial" />
          <String value="Courier" />
          <String value="Times" />
          <String value="File" />
        </StringListDomain>
        <Documentation>Set the font familyname.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetHistogramAxisLabelFontFile"
                            name="HistogramAxisLabelFontFile"
                            number_of_elements="1"
                            default_values="">
        <Documentation>Set the font file.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetHistogramAxisLabelFontSize"
                            default_values="12"
                            name="HistogramAxisLabelFontSize"
                            number_of_elements="1">
        <Documentation>Set the axis title font size.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetHistogramAxisLabelBold"
                            default_values="0"
                            name="HistogramAxisLabelBold"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title bold.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetHistogramAxisLabelItalic"
                            default_values="0"
                            name="HistogramAxisLabelItalic"
                            number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the axis title italic.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetHistogramAxisLabelColor"
                            default_values="0 0 0"
                            name="HistogramAxisLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>

      <PropertyGroup label="Histogram"
                     panel_visibility="advanced">
        <Property name="HistogramBackgroundColor"/>
        <Property name="HistogramAxisColor"/>
        <Property name="HistogramGridColor"/>
        <Property name="HistogramGridVisibility"/>
        <Property name="HistogramAxisLabelVisibility"/>
        <Property name="HistogramAxisLabelNotation"/>
        <Property name="HistogramAxisLabelPrecision"/>
      </PropertyGroup>
      <PropertyGroup label="Histogram Axis Label Properties"
                     panel_widget="FontEditor"
                     panel_visibility="advanced">
        <Property name="HistogramAxisLabelColor" function="Color"/>
        <Property name="HistogramAxisLabelFontFamily" function="Family"/>
        <Property name="HistogramAxisLabelFontFile" function="File"/>
        <Property name="HistogramAxisLabelBold" function="Bold" />
        <Property name="HistogramAxisLabelItalic" function="Italics"/>
        <Property name="HistogramAxisLabelFontSize" function="Size" />
      </PropertyGroup>

      <Hints>
        <ShowOneRepresentationAtATime type="PlotMatrixRepresentation" />
        <!-- When present, vtkSMParaViewPipelineController::Show() will
             result in hiding other representations that are currently visible
             -->
      </Hints>

      <!-- end of PlotMatrixViewProxy -->
    </PlotMatrixViewProxy>
    <!-- ================================================================== -->
    <SpreadSheetViewProxy base_proxygroup="internal_views"
               base_proxyname="ViewBase"
               class="vtkSpreadSheetView"
               name="SpreadSheetView"
               label="SpreadSheet View"
               processes="client|dataserver|renderserver"
               representation_name="SpreadSheetRepresentation">
      <IntVectorProperty name="CellFontSize"
                         default_values="9"
                         number_of_elements="1">
        <IntRangeDomain min="1" max="48" name="range" />
        <Documentation>Sets the font size for cells in the
        spreadsheet.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="HeaderFontSize"
                         default_values="9"
                         number_of_elements="1">
        <IntRangeDomain min="1" max="48" name="range" />
        <Documentation>Sets the font size for row and column headers
        in the spreadsheet.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetShowExtractedSelection"
                         default_values="0"
                         name="SelectionOnly"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>When set to 1, this representations shows only the
        selected cells (or points). The change will effect only after calling
        Update(). Note that changing this will clean all cache.</Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetGenerateCellConnectivity"
                         default_values="0"
                         name="GenerateCellConnectivity"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Generation of the cell connectivity.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetColumnNameToSort"
                            name="ColumnToSort"
                            number_of_elements="1"
                            panel_visibility="never">
      </StringVectorProperty>
      <IntVectorProperty command="SetInvertSortOrder"
                         default_values="0"
                         name="InvertOrder"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IdTypeVectorProperty command="SetBlockSize"
                            default_values="1024"
                            name="BlockSize"
                            number_of_elements="1"
                            panel_visibility="never">
        <Documentation>Get/Set the number of rows that fit within one block.
        The output of this filter will have at most BlockSize
        rows.</Documentation>
      </IdTypeVectorProperty>
      <StringVectorProperty command="HideColumnByLabel"
                            clean_command="ClearHiddenColumnsByLabel"
                            name="HiddenColumnLabels"
                            number_of_elements_per_command="1"
                            panel_visibility="never"
                            default_values_delimiter=";"
                            default_values="Block Number"
                            number_of_elements="1"
                            repeat_command="1">
        <Documentation>This is list of labels for columns that will be hidden
          in the view i.e. these columns won't be show in the GUI or exported
          when exporting the view.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetFieldAssociation"
                         default_values="0"
                         name="FieldAssociation"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>Select the attribute data to pass.</Documentation>
        <FieldDataDomain enable_field_data="1"
                         name="enum">
        </FieldDataDomain>
      </IntVectorProperty>

      <Hints>
        <ShowOneRepresentationAtATime />
        <!-- When present, vtkSMParaViewPipelineController::Show() will
             result in hiding other representations that are currently visible
             -->
      </Hints>

      <!-- End of SpreadSheetView -->
    </SpreadSheetViewProxy>

    <!-- ================================================================== -->
    <RenderViewProxy name="RenderViewWithEDL" class="vtkPVRenderViewWithEDL"
                     label="Eye Dome Lighting"
                     processes="client|renderserver|dataserver"
                     base_proxygroup="views"
                     base_proxyname="RenderView">
    <!-- End of EyeDomeLighting View -->
    </RenderViewProxy>

  </ProxyGroup>

  <!-- ==================================================================== -->
  <ProxyGroup name="internal_representations">
    <PVRepresentationProxy class="vtkPVCompositeRepresentation"
                           name="PVRepresentationBase"
                           processes="client|renderserver|dataserver">
      <Documentation>ParaView's default representation for showing any type of
      dataset in the render view.</Documentation>
      <InputProperty command="SetSelectionConnection"
                     name="Selection">
        <DataTypeDomain name="input_type">
          <DataType value="vtkSelection" />
        </DataTypeDomain>
        <Documentation>Set the selection.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetSelectionVisibility"
                         default_values="1"
                         name="SelectionVisibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for the selection, if
        any.</Documentation>
      </IntVectorProperty>
      <RepresentationType subproxy="OutlineRepresentation"
                          text="Outline" />
      <RepresentationType subproxy="FeatureEdgesRepresentation"
                          text="Feature Edges" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Points"
                          text="Points" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Wireframe"
                          text="Wireframe" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Surface"
                          text="Surface" />
      <RepresentationType subproxy="SurfaceRepresentation"
                          subtype="Surface With Edges"
                          text="Surface With Edges" />
      <RepresentationType subproxy="Glyph3DRepresentation"
                          subtype="Surface"
                          text="3D Glyphs" />
      <RepresentationType subproxy="PointGaussianRepresentation"
                          text="Point Gaussian" />
      <StringVectorProperty command="GetRepresentationTypes"
                            information_only="1"
                            name="RepresentationTypesInfo"
                            si_class="vtkSIDataArrayProperty">
        <Documentation>Property that lists the available representation types.
        This is used by the domain for "Representation" to setup the list of
        types available correctly.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActiveRepresentation"
                            default_values="Surface"
                            name="Representation"
                            number_of_elements="1"
                            panel_visibility="default"
                            panel_widget="display_representation_selector" >
        <Documentation>Choose the type for the representation.</Documentation>
        <RepresentationTypeDomain name="list">
          <RequiredProperties>
            <Property function="StringList"
                      name="RepresentationTypesInfo" />
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentationTypeDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetCellFieldDataArrayName"
                            default_values="vtkOriginalCellIds"
                            name="SelectionCellFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_cell"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetPointFieldDataArrayName"
                            default_values="vtkOriginalPointIds"
                            name="SelectionPointFieldDataArrayName"
                            number_of_elements="1"
                            panel_visibility="never">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <SubProxy>
        <Proxy name="SurfaceRepresentation"
               proxygroup="representations"
               proxyname="SurfaceRepresentation"></Proxy>
        <ExposedProperties>
          <PropertyGroup panel_visibility="default"
                         panel_widget="ColorEditor"
                         label="Coloring" >
            <Property name="AmbientColor" />
            <Property name="ColorArrayName" />
            <Property name="DiffuseColor" />
            <Property name="LookupTable" />
            <Property name="UseSeparateColorMap" />
          </PropertyGroup>

          <PropertyGroup label="Scalar Coloring">
            <Property name="MapScalars"
                      panel_visibility="advanced" />
            <Property name="MultiComponentsMapping"
                      panel_visibility="advanced" />
            <Property name="InterpolateScalarsBeforeMapping"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Styling">
            <Property name="Opacity"
                      panel_visibility="default" />
            <Property name="PointSize"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points" />
            <Property name="LineWidth"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe" />
            <Property name="RenderLinesAsTubes"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="wireframe"/>
            <Property name="RenderPointsAsSpheres"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="points"/>
            <Hints>
              <!--Hide for volume and slice representation-->
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="or">
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface With Edges" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Outline" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Points" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Wireframe" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="3D Glyphs" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Point Gaussian" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Feature Edges" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Stream Lines" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>

          <PropertyGroup label="Lighting">
            <Property name="Interpolation"
                      panel_visibility="advanced" />
            <Property name="Specular"
                      panel_visibility="default" />
            <Property name="SpecularColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="InteractiveSelectionColor"
                      panel_visibility="never" />
            <Property name="SpecularPower"
                      panel_visibility="advanced" />
            <Property name="Luminosity"
                      panel_visibility="advanced" />
            <Property name="Ambient" panel_visibility="advanced"/>
            <Property name="Diffuse" panel_visibility="advanced"/>
            <Property name="Roughness" panel_visibility="advanced"/>
            <Property name="Metallic" panel_visibility="advanced"/>
            <Property name="EdgeTint"
                      panel_widget="color_selector"
                      panel_visibility="advanced"/>
            <Property name="Anisotropy" panel_visibility="advanced"/>
            <Property name="AnisotropyRotation" panel_visibility="advanced"/>
            <Property name="BaseIOR" panel_visibility="advanced"/>
            <Property name="CoatStrength" panel_visibility="advanced"/>
            <Property name="CoatIOR" panel_visibility="advanced"/>
            <Property name="CoatRoughness" panel_visibility="advanced"/>
            <Property name="CoatColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="SelectTCoordArray" panel_visibility="advanced"/>
            <Property name="SelectNormalArray" panel_visibility="advanced"/>
            <Property name="SelectTangentArray" panel_visibility="advanced"/>
            <Property name="Texture" panel_visibility="advanced"/>
            <Property name="RepeatTextures" panel_visibility="advanced"/>
            <Property name="InterpolateTextures" panel_visibility="advanced"/>
            <Property name="SeamlessU" panel_visibility="advanced"/>
            <Property name="SeamlessV" panel_visibility="advanced"/>
            <Property name="UseMipmapTextures" panel_visibility="advanced"/>
            <Property name="ShowTexturesOnBackface" panel_visibility="advanced"/>
            <Property name="BaseColorTexture" panel_visibility="advanced"/>
            <Property name="NormalTexture" panel_visibility="advanced"/>
            <Property name="NormalScale" panel_visibility="advanced"/>
            <Property name="CoatNormalTexture" panel_visibility="advanced"/>
            <Property name="CoatNormalScale" panel_visibility="advanced"/>
            <Property name="MaterialTexture" panel_visibility="advanced"/>
            <Property name="OcclusionStrength" panel_visibility="advanced"/>
            <Property name="AnisotropyTexture" panel_visibility="advanced"/>
            <Property name="EmissiveTexture" panel_visibility="advanced"/>
            <Property name="EmissiveFactor" panel_visibility="advanced"/>
            <Property name="FlipTextures" panel_visibility="advanced"/>
            <!--Hide for volumes and non surface representations-->
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="or">
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Surface With Edges" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="3D Glyphs" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                          mode="visibility"
                                          property="RenderLinesAsTubes"
                                          value="1" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                          mode="visibility"
                                          property="RenderPointsAsSpheres"
                                          value="1" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>

          <PropertyGroup label="Edge Styling">
            <Property name="EdgeColor"
                      panel_widget="color_selector_with_palette"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="Surface With Edges" />
          </PropertyGroup>

          <PropertyGroup label="Backface Styling">
            <Property name="BackfaceRepresentation"
                      panel_visibility="advanced" />
            <Property name="BackfaceAmbientColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="BackfaceDiffuseColor"
                      panel_widget="color_selector"
                      panel_visibility="advanced" />
            <Property name="BackfaceOpacity"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup label="Transforming">
            <Property name="Position"
                      panel_visibility="advanced" />
            <Property name="Scale"
                      panel_visibility="advanced" />
            <Property name="Orientation"
                      panel_visibility="advanced" />
            <Property name="Origin"
                      panel_visibility="advanced" />
            <Property name="CoordinateShiftScaleMethod"
                      panel_visibility="advanced"/>
          </PropertyGroup>

          <PropertyGroup label="Miscellaneous">
            <Property name="Pickable"
                      panel_visibility="advanced" />
            <Property name="StaticMode"
                      panel_visibility="never" />
            <Property name="SuppressLOD"
                      panel_visibility="never" />
            <Property name="UserTransform"
                      panel_visibility="never" />
            <Property name="Triangulate"
                      panel_visibility="advanced" />
            <Property name="UseShaderReplacements"
                      panel_visibility="advanced" />
            <Property name="ShaderReplacements"
                      panel_visibility="advanced" />
            <Property name="NonlinearSubdivisionLevel"
                      panel_visibility="advanced" />
            <Property name="BlockColorsDistinctValues"
                      panel_visibility="advanced" />
            <Property name="UseDataPartitions"
                      panel_visibility="advanced" />
          </PropertyGroup>

          <PropertyGroup panel_visibility="advanced"
                         label="Ray Tracing" >
            <Property name="OSPRayUseScaleArray" />
            <Property name="OSPRayScaleArray" />
            <Property name="OSPRayScaleFunction" />
            <Property name="OSPRayMaterial" />
          </PropertyGroup>

          <PropertyGroup label="Blocks"
                         panel_widget="DataAssemblyEditor"
                         panel_visibility="multiblock_inspector">
            <!--
               place holder for future work
               <Property name="Assembly"       function="ActiveAssembly" />
            -->
            <Property name="BlockSelectors" function="Selectors" />
            <Property name="BlockColors"    function="Colors" />
            <Property name="BlockOpacities" function="Opacities" />
            <Hints>
              <DataAssemblyPropertyWidget use_inputname_as_header="1" link_active_selection="1"/>
            </Hints>
          </PropertyGroup>

        </ExposedProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="OutlineRepresentation"
               proxygroup="representations"
               proxyname="OutlineRepresentation"></Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="FeatureEdgesRepresentation"
               proxygroup="representations"
               proxyname="FeatureEdgesRepresentation"></Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="Glyph3DRepresentation"
               proxygroup="representations"
               proxyname="Glyph3DRepresentation"></Proxy>
        <ExposedProperties>
          <PropertyGroup label="Glyph Parameters"
                         panel_visibility="advanced">
            <Property name="Masking"
                      panel_visibility="never" />
            <Property name="MeshVisibility"
                      panel_visibility="never" />
            <Property name="Orient"
                      panel_visibility="advanced" />
            <Property name="OrientationMode"
                      panel_visibility="advanced" />
            <Property name="SelectOrientationVectors"
                      panel_visibility="advanced" />
            <Property name="Scaling"
                      panel_visibility="advanced" />
            <Property name="ScaleMode"
                      panel_visibility="advanced" />
            <Property name="ScaleFactor"
                      panel_visibility="advanced" />
            <Property name="SelectMaskArray"
                      panel_visibility="never" />
            <Property name="SelectScaleArray"
                      panel_visibility="advanced" />
            <Property name="GlyphType"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="3d glyphs"/>
            <Property name="UseGlyphTable"
                      panel_visibility="advanced"/>
            <Property name="GlyphTableIndexArray"
                      panel_visibility="advanced"/>
            <Property name="UseCompositeGlyphTable"
                      panel_visibility="advanced"/>
            <Property name="UseGlyphCullingAndLOD"
                      panel_visibility="advanced"/>
            <Property name="LODValues"
                      panel_visibility="advanced"/>
            <Property name="ColorByLODIndex"
                      panel_visibility="advanced"/>
            <Hints>
                <PropertyWidgetDecorator type="GenericDecorator"
                                         mode="visibility"
                                         property="Representation"
                                         value="3D Glyphs" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="PointGaussianRepresentation"
               proxygroup="representations" proxyname="PointGaussianRepresentation">
        </Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
        <ExposedProperties>
          <PropertyGroup label="Point Gaussian">
            <Property name="GaussianRadius" />
            <Property name="ShaderPreset" />
            <Property name="CustomTriangleScale" />
            <Property name="CustomShader" />
            <Property name="Emissive" />
            <Property name="ScaleByArray" />
            <Property name="SetScaleArray" />
            <Property name="ScaleArrayComponent" />
            <Property name="UseScaleFunction" />
            <Property name="ScaleTransferFunction" />
            <Property name="OpacityByArray" />
            <Property name="OpacityArray" />
            <Property name="OpacityArrayComponent" />
            <Property name="OpacityTransferFunction" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="Representation"
                                       value="Point Gaussian" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <ProxyProperty name="DataAxesGrid"
                     command="SetGridAxesRepresentation"
                     panel_widget="proxy_editor" >
        <ProxyListDomain name="proxy_list">
          <Proxy group="representations" name="GridAxesRepresentation" />
        </ProxyListDomain>
        <Hints>
          <!-- tell pqProxyEditorPropertyWidget that use the "GridAxesVisibility"
               property on the GridAxes3DRepr for a checkbox on the UI -->
          <ProxyEditorPropertyWidget property="GridAxesVisibility" />
        </Hints>
      </ProxyProperty>
      <SubProxy command="SetSelectionRepresentation">
        <Proxy name="SelectionRepresentation"
               proxygroup="representations"
               proxyname="SelectionRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
          <Exception name="Representation" />
          <Exception name="Color" />
          <Exception name="LineWidth" />
          <Exception name="Opacity" />
          <Exception name="PointSize" />
        </ShareProperties>
        <ExposedProperties>
          <Property exposed_name="SelectionColor" name="Color" panel_visibility="never" />
          <Property exposed_name="SelectionOpacity" name="Opacity" panel_visibility="never" />
          <Property exposed_name="SelectionUseOutline" name="UseOutline" panel_visibility="never" />
          <Property exposed_name="SelectionRepresentation" name="Representation" panel_visibility="never" />
          <Property exposed_name="SelectionPointSize" name="PointSize" panel_visibility="never" />
          <Property exposed_name="SelectionLineWidth" name="LineWidth" panel_visibility="never" />
          <Property exposed_name="SelectionCellLabelVisibility" name="CellLabelVisibility" panel_visibility="never"/>
          <PropertyGroup label="Cell Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionCellLabelBold" name="CellLabelBold" function="Bold"/>
            <Property exposed_name="SelectionCellLabelColor" name="CellLabelColor" function="Color"/>
            <Property exposed_name="SelectionCellLabelFontFamily" name="CellLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionCellLabelFontFile" name="CellLabelFontFile" function="File"/>
            <Property exposed_name="SelectionCellLabelFontSize" name="CellLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionCellLabelItalic" name="CellLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionCellLabelJustification" name="CellLabelJustification" function="Justification"/>
            <Property exposed_name="SelectionCellLabelOpacity" name="CellLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionCellLabelShadow" name="CellLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionCellLabelFormat" name="CellLabelFormat" panel_visibility="never"/>
          <Property exposed_name="SelectionPointLabelVisibility" name="PointLabelVisibility" panel_visibility="never"/>
          <Property exposed_name="SelectionMaximumNumberOfLabels" name="MaximumNumberOfLabels" panel_visibility="never"/>
          <PropertyGroup label="Point Label Font" panel_visibility="never" panel_widget="FontEditor">
            <Property exposed_name="SelectionPointLabelBold" name="PointLabelBold" function="Bold"/>
            <Property exposed_name="SelectionPointLabelColor" name="PointLabelColor" function="Color"/>
            <Property exposed_name="SelectionPointLabelFontFamily" name="PointLabelFontFamily" function="Family"/>
            <Property exposed_name="SelectionPointLabelFontFile" name="PointLabelFontFile" function="File"/>
            <Property exposed_name="SelectionPointLabelFontSize" name="PointLabelFontSize" function="Size"/>
            <Property exposed_name="SelectionPointLabelItalic" name="PointLabelItalic" function="Italics"/>
            <Property exposed_name="SelectionPointLabelJustification" name="PointLabelJustification" function="Justification"/>
            <Property exposed_name="SelectionPointLabelOpacity" name="PointLabelOpacity" function="Opacity"/>
            <Property exposed_name="SelectionPointLabelShadow" name="PointLabelShadow" function="Shadow"/>
          </PropertyGroup>
          <Property exposed_name="SelectionPointLabelFormat" name="PointLabelFormat" panel_visibility="never"/>
        </ExposedProperties>
      </SubProxy>
      <ProxyProperty name="PolarAxes"
                     command="SetPolarAxesRepresentation"
                     panel_visibility="advanced"
                     panel_widget="proxy_editor">
        <ProxyListDomain name="proxy_list">
          <Proxy group="representations" name="PolarAxesRepresentation" />
        </ProxyListDomain>
        <Hints>
          <ProxyEditorPropertyWidget property="Visibility"/>
            <!-- tell pqProxyEditorPropertyWidget that use the "Visibility"
                 property on the PolarAxesActor proxy for a checkbox
                 on the UI -->
        </Hints>
      </ProxyProperty>
      <PropertyGroup label="Annotations">
        <Property name="PolarAxes"
                  panel_visibility="advanced" />
      </PropertyGroup>
    </PVRepresentationProxy>
  </ProxyGroup>

  <!-- ==================================================================== -->
  <ProxyGroup name="representations">
    <!-- ================================================================== -->
    <PVRepresentationProxy base_proxygroup="internal_representations"
                           base_proxyname="PVRepresentationBase"
                           class="vtkPVCompositeRepresentation"
                           name="GeometryRepresentation"
                           processes="client|renderserver|dataserver">
      <Documentation>ParaView's default representation for showing any type of
      dataset in the render view.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkDataSet" />
          <DataType value="vtkGenericDataSet" />
          <DataType value="vtkHyperTreeGrid" />

          <!-- for MB, we want to match if any of the leaf nodes is of the following type -->
          <DataType value="vtkDataObjectTree" child_match="any">
            <DataType value="vtkDataSet" />
            <DataType value="vtkGenericDataSet" />
            <DataType value="vtkHyperTreeGrid" />
          </DataType>
        </DataTypeDomain>
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell"
                          optional="1"></InputArrayDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1"></InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <!-- End of GeometryRepresentation -->
    </PVRepresentationProxy>
    <!-- ================================================================== -->
    <PVRepresentationProxy base_proxygroup="representations"
                           base_proxyname="UnstructuredGridRepresentation"
                           class="vtkPVCompositeRepresentation"
                           name="UnstructuredGridBaseRepresentation"
                           processes="client|renderserver|dataserver">
      <Deprecated deprecated_in="5.4" to_remove_in="5.5">
          This is no longer needed. Simply use UniformGridVolumeRepresentation.
      </Deprecated>
    </PVRepresentationProxy>

    <!-- ================================================================== -->

    <PVRepresentationProxy base_proxygroup="internal_representations"
                           base_proxyname="PVRepresentationBase"
                           class="vtkPVCompositeRepresentation"
                           name="UnstructuredGridRepresentation"
                           processes="client|renderserver|dataserver">
      <Documentation>This representation is used to show unstructured grid as
      Surface/Outline/Points/Wireframe/Volume</Documentation>
      <!-- this adds to what is already defined in PVRepresentationBase -->
      <RepresentationType subproxy="VolumeRepresentation"
                          text="Volume" />
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkUnstructuredGrid" />
          <DataType value="vtkUnstructuredGridBase" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell"
                          optional="1"></InputArrayDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1"></InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <SubProxy>
        <Proxy name="VolumeRepresentation"
               proxygroup="representations"
               proxyname="UnstructuredGridVolumeRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
        <ExposedProperties>
          <PropertyGroup label="Volume Rendering">
            <Property name="ScalarOpacityFunction" />
            <Property name="ScalarOpacityUnitDistance"
                      panel_visibility="advanced" />
            <Property name="UseSeparateOpacityArray"
                      panel_visibility="advanced" />
            <Property name="OpacityArrayName"
                      panel_visibility="advanced" />
            <Property name="OpacityComponent"
                      panel_visibility="advanced" />
            <Property name="SelectMapper"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="volume" />
            <Property name="SamplingDimensions"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="volume"/>
            <Property name="UseFloatingPointFrameBuffer" />
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="or">
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Volume" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="NVIDIA IndeX" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <Hints>
        <!-- pqDisplayRepresentationWidget respects this hint to put out
             a warning for the user before switching to this type of Representation.
             The user can then accept or reject the change.
             BUG #15117
        -->
        <WarnOnRepresentationChange value="Volume" />
      </Hints>
      <!-- End of UnstructuredGridRepresentation -->
    </PVRepresentationProxy>

    <!-- ================================================================== -->
    <PVRepresentationProxy base_proxygroup="internal_representations"
                           base_proxyname="PVRepresentationBase"
                           class="vtkPVCompositeRepresentation"
                           name="StructuredGridRepresentation"
                           processes="client|renderserver|dataserver">
      <Documentation>This representation is used to show structured grid as
      Surface/Outline/Points/Wireframe/Volume</Documentation>
      <!-- this adds to what is already defined in PVRepresentationBase -->
      <RepresentationType subproxy="VolumeRepresentation"
                          text="Volume" />
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkStructuredGrid" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1"></InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <SubProxy>
        <Proxy name="VolumeRepresentation"
               proxygroup="representations"
               proxyname="StructuredGridVolumeRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
        <ExposedProperties>
          <PropertyGroup label="Volume Rendering">
            <Property name="ScalarOpacityFunction" />
            <Property name="ScalarOpacityUnitDistance"
                      panel_visibility="advanced" />
            <Property name="SelectMapper"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="volume" />
            <Property name="SamplingDimensions"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="volume"/>
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="Representation"
                                       value="Volume" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <Hints>
        <!-- pqDisplayRepresentationWidget respects this hint to put out
             a warning for the user before switching to this type of Representation.
             The user can then accept or reject the change.
             BUG #15117
        -->
        <WarnOnRepresentationChange value="Volume" />
      </Hints>
      <!-- End of StructuredGridRepresentation -->
    </PVRepresentationProxy>
    <PVRepresentationProxy base_proxygroup="internal_representations"
                           base_proxyname="PVRepresentationBase"
                           class="vtkPVCompositeRepresentation"
                           name="UniformGridRepresentation"
                           processes="client|renderserver|dataserver">
      <Documentation>This representation is used to show image data as
      Surface/Outline/Points/Wireframe/Volume/Slice.</Documentation>
      <!-- this adds to the types already defined in PVRepresentationBase -->
      <RepresentationType subproxy="VolumeRepresentation"
                          text="Volume" />
      <RepresentationType subproxy="SliceRepresentation"
                          text="Slice" />
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkImageData" />
          <DataType value="vtkRectilinearGrid" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell"
                          optional="1"></InputArrayDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1"></InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <SubProxy>
        <Proxy name="VolumeRepresentation"
               proxygroup="representations"
               proxyname="UniformGridVolumeRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
        <ExposedProperties>
          <PropertyGroup label="Volume Rendering">
            <Property name="ScalarOpacityUnitDistance"
                      panel_visibility="advanced" />
            <Property name="ScalarOpacityFunction" />
            <Property name="UseSeparateOpacityArray"
                      panel_visibility="advanced" />
            <Property name="OpacityArrayName"
                      panel_visibility="advanced" />
            <Property name="OpacityComponent"
                      panel_visibility="advanced" />
            <Property name="VolumeRenderingMode"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="volume" />
            <Property name="Shade"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="volume" />
            <Property name="InterpolationType"
                      panel_visibility="never" />
            <Property name="BlendMode" />
            <Property name="IsosurfaceValues" />
            <Property name="SliceFunction" />
            <Property name="UseCropping" />
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="or">
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="Volume" />
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="Representation"
                                           value="NVIDIA IndeX" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>
          <PropertyGroup label="Cropping Parameters" panel_widget="InteractiveBox">
            <Property function="Position" name="CroppingOrigin" />
            <Property function="Scale" name="CroppingScale" />
            <Property function="Input" name="DummyInput" />
            <Hints>
              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="and">
                  <Expression type="or">
                    <PropertyWidgetDecorator type="GenericDecorator"
                                             mode="visibility"
                                             property="Representation"
                                             value="Volume" />
                    <PropertyWidgetDecorator type="GenericDecorator"
                                             mode="visibility"
                                             property="Representation"
                                             value="NVIDIA IndeX" />
                  </Expression>
                  <PropertyWidgetDecorator type="GenericDecorator"
                                           mode="visibility"
                                           property="UseCropping"
                                           value="1" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
        <LinkProperties>
          <Property name="DummyInput" with_property="Input" />
        </LinkProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="SliceRepresentation"
               proxygroup="representations"
               proxyname="ImageSliceRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
        <ExposedProperties>
          <PropertyGroup label="Slicing">
            <Property name="SliceMode"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="slice" />
            <Property name="Slice"
                      panel_visibility="advanced"
                      panel_visibility_default_for_representation="slice" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="Representation"
                                       value="Slice" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <Hints>
        <!-- pqDisplayRepresentationWidget respects this hint to put out
             a warning for the user before switching to this type of Representation.
             The user can then accept or reject the change.
             BUG #15117
        -->
        <WarnOnRepresentationChange value="Volume" />
      </Hints>
      <!-- End of UniformGridRepresentation -->
    </PVRepresentationProxy>
    <!-- ================================================================== -->
    <PVRepresentationProxy base_proxygroup="internal_representations"
                           base_proxyname="PVRepresentationBase"
                           class="vtkPVCompositeRepresentation"
                           name="AMRRepresentation"
                           processes="client|renderserver|dataserver">
      <Documentation>This representation is used to show AMR data as
      Surface/Outline/Points/Wireframe/Volume.</Documentation>
      <!-- this adds to the types already defined in PVRepresentationBase -->
      <RepresentationType subproxy="VolumeRepresentation"
                          text="Volume" />
      <RepresentationType subproxy="AMROutlineRepresentation"
                          text="AMR Blocks" />
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkOverlappingAMR" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell"
                          optional="1"></InputArrayDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1"></InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>

      <SubProxy>
        <Proxy name="VolumeRepresentation"
               proxygroup="internal_representations"
               proxyname="AMRVolumeRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
        </ShareProperties>
        <ExposedProperties>
        <PropertyGroup label="Volume Rendering">
          <Property name="ScalarOpacityUnitDistance"
                    panel_visibility="advanced" />
          <Property name="ScalarOpacityFunction" />
          <Property name="VolumeRenderingMode" />
          <Property name="ResamplingMode" />
          <Property name="StreamingRequestSize" />
          <Property name="NumberOfSamples" />
          <Property name="Shade" />
          <Hints>
            <PropertyWidgetDecorator type="GenericDecorator"
                                     mode="visibility"
                                     property="Representation"
                                     value="Volume" />
          </Hints>
        </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <SubProxy>
        <Proxy name="AMROutlineRepresentation"
               proxygroup="internal_representations"
               proxyname="AMROutlineRepresentation" />
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
        </ShareProperties>
      </SubProxy>

      <Hints>
        <!-- pqDisplayRepresentationWidget respects this hint to put out
             a warning for the user before switching to this type of Representation.
             The user can then accept or reject the change.
             BUG #15117
        -->
        <WarnOnRepresentationChange value="Volume" />
      </Hints>

      <!-- End of AMRRepresentation -->
    </PVRepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkStructuredGridVolumeRepresentation"
                         name="StructuredGridVolumeRepresentation"
                         processes="client|renderserver|dataserver"
                         si_class="vtkSIUnstructuredGridVolumeRepresentationProxy"
                         base_proxygroup="representations"
                         base_proxyname="UnstructuredGridVolumeRepresentation">
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkImageVolumeRepresentation"
                         name="UniformGridVolumeRepresentation"
                         processes="client|renderserver|dataserver"
                         si_class="vtkSIProxy">
      <Documentation>Representation for rendering a vtkImageData as
      volume.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="0"
                        name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="any"
                          name="input_array_any">
        </InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                         input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetUseSeparateOpacityArray"
                         default_values="0"
                         name="UseSeparateOpacityArray"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is on, the Opacity Array will be used to determine the
          point gaussian sprites.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty name="OpacityArrayName"
                            command="SelectOpacityArray"
                            number_of_elements="5"
                            element_types="0 0 0 0 2"
                            label="Volume Opacity Array"
                            panel_visibility="advanced">
        <ArrayListDomain name="array_list"
          input_domain_name="input_point_array">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property specifies the name of the input array to map to opacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="UseSeparateOpacityArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SelectOpacityArrayComponent"
                         default_values="0"
                         name="OpacityComponent"
                         number_of_elements="1">
        <NumberOfComponentsDomain name="comps" enable_magnitude="1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="OpacityArrayName" />
          </RequiredProperties>
        </NumberOfComponentsDomain>
        <Documentation>
          This property indicates the component of the array to be used for opacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="UseSeparateOpacityArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolationType"
                         default_values="2"
                         name="InterpolationType"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Nearest"
                 value="0" />
          <Entry text="Linear"
                 value="1" />
          <Entry text="Cubic"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <ProxyProperty command="SetColor"
                     name="LookupTable" >
        <ProxyGroupDomain name="groups">
          <Group name="transfer_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetShade"
                         default_values="0"
                         name="Shade"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable/Disable shading.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When enabled, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMultiComponentsMapping"
                         default_values="0"
                         name="MultiComponentsMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="MultiComponentsDecorator"
                                   components="2 4" />
        </Hints>
      </IntVectorProperty>
      <ProxyProperty command="SetScalarOpacity"
                     name="ScalarOpacityFunction">
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty command="SetRequestedRenderMode"
                         default_values="0"
                         name="VolumeRenderingMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Smart" value="0" />
          <Entry text="Ray Cast Only" value="1" />
          <Entry text="GPU Based" value="2" />
          <Entry text="OSPRay Based" value="3" />
        </EnumerationDomain>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetScalarOpacityUnitDistance"
                            default_values="1"
                            name="ScalarOpacityUnitDistance"
                            number_of_elements="1">
        <BoundsDomain mode="approximate_cell_length"
                      name="bounds" >
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </BoundsDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="BlendMode"
                                   value="6"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetBlendMode"
                         default_values="0"
                         name="BlendMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <!-- See vtkVolumeMapper::BlendModes -->
          <Entry text="Composite"
                 value="0" />
          <Entry text="Isosurface"
                 value="5" />
          <Entry text="Slice"
                 value="6" />
        </EnumerationDomain>
        <Documentation>This property specifies how the samples should be blended</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetIsosurfaceValue"
                            label="Isosurfaces"
                            name="IsosurfaceValues"
                            number_of_elements="0"
                            number_of_elements_per_command="1"
                            repeat_command="1"
                            set_number_command="SetNumberOfIsosurfaces"
                            use_index="1">
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="ColorArrayName" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>This property specifies the values at which to display
        isosurfaces and also the number of such values.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="BlendMode"
                                   value="5" />
          <!-- enable this widget when BlendMode==Isosurface -->
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetSliceFunction"
                     label="Slice Type"
                     name="SliceFunction">
        <ProxyGroupDomain name="groups">
          <Group name="implicit_functions" />
        </ProxyGroupDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="implicit_functions"
                 name="Plane" />
        </ProxyListDomain>
        <Documentation>This property sets the parameters of the slice
        function.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="BlendMode"
                                   value="6" />
          <!-- enable this widget when BlendMode==Slice -->
        </Hints>
      </ProxyProperty>
      <IntVectorProperty command="SetCropping"
                         default_values="0"
                         name="UseCropping"
                         number_of_elements="1">
        <BooleanDomain name="bool"/>
        <Documentation>This property specifies if the cropping is enabled.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetCroppingOrigin"
                            name="CroppingOrigin"
                            number_of_elements="3"
                            argument_is_array="1"
                            default_values="0 0 0">
        <Documentation>This property specifies the cropping origin.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetCroppingScale"
                            name="CroppingScale"
                            number_of_elements="3"
                            argument_is_array="1"
                            default_values="1 1 1">
        <Documentation>This property specifies the cropping scale.</Documentation>
      </DoubleVectorProperty>
      <InputProperty is_internal="1" name="DummyInput" />
      <Hints>
        <ProxyList>
          <Link name="DummyInput"
                with_property="Input" />
        </ProxyList>
      </Hints>

      <!-- end of UniformGridVolumeRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkOutlineRepresentation"
                         name="OutlineRepresentation"
                         processes="client|renderserver|dataserver"
                         base_proxygroup="representations"
                         base_proxyname="SurfaceRepresentation" >
      <Documentation>
        Representation for showing an outline for any dataset.
      </Documentation>
      <!-- end of OutlineRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkFeatureEdgesRepresentation"
                         name="FeatureEdgesRepresentation"
                         processes="client|renderserver|dataserver"
                         base_proxygroup="representations"
                         base_proxyname="SurfaceRepresentation" >
      <Documentation>
        Representation for showing feature edges for any dataset.
      </Documentation>
      <!-- end of OutlineRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy base_proxyname="PVRepresentationBase"
                         name="PointGaussianRepresentation"
                         class="vtkPointGaussianRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="0"
                        name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain attribute_type="point"
                          name="input_point_array"
                          optional="1">
        </InputArrayDomain>
      </InputProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                         input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to True, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <ProxyProperty command="SetLookupTable"
                     name="LookupTable" >
        <Documentation>Set the lookup-table to use to map data array to colors.
        Lookuptable is only used with MapScalars to ON.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty command="SetSplatSize"
                            default_values="0.0"
                            name="GaussianRadius"
                            label="Gaussian Radius"
                            number_of_elements="1">
        <BoundsDomain name="range" mode="scaled_extent" scale_factor="0.005">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </BoundsDomain>
        <Documentation>
          The radius of the gaussian blur for each point.
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SelectShaderPreset"
                         default_values="1"
                         name="ShaderPreset"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Gaussian Blur"
                 value="0" />
          <Entry text="Sphere"
                 value="1" />
          <Entry text="Black-edged circle"
                 value="2" />
          <Entry text="Plain circle"
                 value="3" />
          <Entry text="Triangle"
                 value="4" />
          <Entry text="Square Outline"
                 value="5" />
          <Entry text="Custom"
                 value="6" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SetCustomTriangleScale"
                         default_values="3"
                         name="CustomTriangleScale"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <Documentation>
          Sets the scale of the triangle geometry drawn, automatically
          set when using preset but needed with custom shader code
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ShaderPreset"
                                   value="6" />
          <!-- show this widget when using CustomShader -->
        </Hints>
      </IntVectorProperty>
      <StringVectorProperty command="SetCustomShader"
                            default_values="
// This custom shader code define a gaussian blur&#xa;
// Please take a look into vtkSMPointGaussianRepresentation.cxx&#xa;
// for other custom shader examples&#xa;
//VTK::Color::Impl&#xa;
  float dist2 = dot(offsetVCVSOutput.xy,offsetVCVSOutput.xy);&#xa;
  float gaussian = exp(-0.5*dist2);&#xa;
  opacity = opacity*gaussian;&#xa;"
                            label="Custom Shader Code"
                            name="CustomShader"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>
          Sets the custom shader code
        </Documentation>
        <Hints>
          <Widget type="multi_line" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="ShaderPreset"
                                   value="6" />
          <!-- show this widget when using CustomShader -->
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty command="SetEmissive"
                         default_values="0"
                         name="Emissive"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>
          Should the splat be emissive like a light source or not. For cosmology emissive should be on. For scanned point clouds typically it would be off.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetScaleByArray"
                         default_values="0"
                         name="ScaleByArray"
                         number_of_elements="1"
                         label="Use Scale Array"
                         panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is on, the Scale Array will be used to determine that radii
          of the gaussians.  Otherwise the Default Radius will be used.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty name="SetScaleArray"
                            command="SelectScaleArray"
                            number_of_elements="5"
                            element_types="0 0 0 0 2"
                            label="Gaussian Scale Array"
                            panel_visibility="advanced">
        <ArrayListDomain name="array_list"
          input_domain_name="input_point_array">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property specifies the name of the input array to scale the splats by.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="ScaleByArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SelectScaleArrayComponent"
                         default_values="0"
                         name="ScaleArrayComponent"
                         number_of_elements="1">
        <NumberOfComponentsDomain name="comps" enable_magnitude="1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SetScaleArray" />
          </RequiredProperties>
        </NumberOfComponentsDomain>
        <Documentation>
          This property indicates the component of the array to be used for scaling.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="ScaleByArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseScaleFunction"
                         default_values="1"
                         name="UseScaleFunction"
                         number_of_elements="1"
                         label="Use Scale Transfer Function"
                         panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is enabled, the Scale Transfer Function is used to map
          the scale values of the Scale Array. Otherwise, the scale values are used as-is.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="ScaleByArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <ProxyProperty command="SetScaleTransferFunction"
                     name="ScaleTransferFunction"
                     panel_visibility="advanced"
                     panel_widget="transfer_function_editor" >
        <Documentation>Set the piecewise function used to map data array to sprite size.
        ScaleTransferFunction is only used if ScaleByArray is set.</Documentation>
        <RangedTransferFunctionDomain name="proxy_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ArraySelection" name="SetScaleArray" />
            <Property function="ComponentSelection" name="ScaleArrayComponent" />
          </RequiredProperties>
        </RangedTransferFunctionDomain>
        <Hints>
          <PropertyWidgetDecorator type="CompositeDecorator">
            <Expression type="and">
              <PropertyWidgetDecorator type="ShowWidgetDecorator">
                <Property name="ScaleByArray" function="boolean" />
              </PropertyWidgetDecorator>
              <PropertyWidgetDecorator type="ShowWidgetDecorator">
                <Property name="UseScaleFunction" function="boolean" />
              </PropertyWidgetDecorator>
            </Expression>
          </PropertyWidgetDecorator>
        </Hints>
      </ProxyProperty>
      <IntVectorProperty command="SetOpacityByArray"
                         default_values="0"
                         name="OpacityByArray"
                         number_of_elements="1"
                         label="Use Opacity Array"
                         panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is on, the Opacity Array will be used to determine the
          point gaussian sprites.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty name="OpacityArray"
                            command="SelectOpacityArray"
                            number_of_elements="5"
                            element_types="0 0 0 0 2"
                            label="Gaussian Opacity Array"
                            panel_visibility="advanced">
        <ArrayListDomain name="array_list"
          input_domain_name="input_point_array">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property specifies the name of the input array to map to point opacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="OpacityByArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SelectOpacityArrayComponent"
                         default_values="0"
                         name="OpacityArrayComponent"
                         number_of_elements="1">
        <NumberOfComponentsDomain name="comps" enable_magnitude="1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="OpacityArray" />
          </RequiredProperties>
        </NumberOfComponentsDomain>
        <Documentation>
          This property indicates the component of the array to be used for opacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="OpacityByArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>
      <ProxyProperty command="SetOpacityTransferFunction"
                     name="OpacityTransferFunction"
                     panel_visibility="advanced"
                     panel_widget="transfer_function_editor">
        <Documentation>Set the piecewise function used to map data array to sprite opacity.
        OpacityTransferFunction is only used if ScaleByArray is set and OpacityArray is
        also given.</Documentation>
        <RangedTransferFunctionDomain name="proxy_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ArraySelection" name="OpacityArray" />
            <Property function="ComponentSelection" name="OpacityArrayComponent" />
          </RequiredProperties>
        </RangedTransferFunctionDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="OpacityByArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1" min="0" name="range" />
        <Documentation>
          The opacity to use when rendering the model.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEdgeColor"
                            default_values="0 0 0.5"
                            name="EdgeColor"
                            number_of_elements="3">
        <Documentation>Set the edge color. This color is used to draw the edge
        for the polygonal data when EdgeVisibility is on.</Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="EdgeColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAmbientColor"
                            default_values="1.0 1.0 1.0"
                            name="AmbientColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="ForegroundColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuseColor"
                            default_values="1.0 1.0 1.0"
                            name="DiffuseColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SurfaceColor" unlink_if_modified="1" />
        </Hints>
        <Documentation>
          The diffuse color of the model
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularColor"
                            default_values="1.0 1.0 1.0"
                            name="SpecularColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>
          The specular color of the model
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPointSize"
                            default_values="2.0"
                            name="PointSize"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            label="Translation"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <!-- End of PointGaussianRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkUnstructuredGridVolumeRepresentation"
                         name="UnstructuredGridVolumeRepresentation"
                         processes="client|renderserver|dataserver"
                         si_class="vtkSIUnstructuredGridVolumeRepresentationProxy">
      <Documentation>Representation for rendering a vtkImageData as
      volume.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain composite_data_supported="1"
                        name="input_type">
          <DataType value="vtkUnstructuredGridBase" />
        </DataTypeDomain>
        <InputArrayDomain name="input_array_any">
        </InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5" >
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                         input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetUseSeparateOpacityArray"
                         default_values="0"
                         name="UseSeparateOpacityArray"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          If this property is on, the Opacity Array will be used to determine the
          point gaussian sprites.
        </Documentation>
      </IntVectorProperty>
      <StringVectorProperty name="OpacityArrayName"
                            command="SelectOpacityArray"
                            number_of_elements="5"
                            element_types="0 0 0 0 2"
                            label="Volume Opacity Array"
                            panel_visibility="advanced">
        <ArrayListDomain name="array_list"
          input_domain_name="input_point_array">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          This property specifies the name of the input array to map to opacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="UseSeparateOpacityArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SelectOpacityArrayComponent"
                         default_values="0"
                         name="OpacityComponent"
                         number_of_elements="1">
        <NumberOfComponentsDomain name="comps" enable_magnitude="1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="OpacityArrayName" />
          </RequiredProperties>
        </NumberOfComponentsDomain>
        <Documentation>
          This property indicates the component of the array to be used for opacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="UseSeparateOpacityArray" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </IntVectorProperty>

      <StringVectorProperty name="Assembly"
        command="SetActiveAssembly"
        number_of_elements="1"
        default_values="Hierarchy"
        panel_visibility="multiblock_inspector">
        <DataAssemblyListDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </DataAssemblyListDomain>
        <Documentation>
          Select which assembly is used when specify selectors
          to choose block visibilities, block colors, etc. for composite datasets.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockSelectors"
        command="AddBlockSelector"
        clean_command="RemoveAllBlockSelectors"
        repeat_command="1"
        number_of_elements_per_command="1"
        panel_visibility="multiblock_inspector"
        number_of_elements="1"
        default_values="/">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Documentation>
          For composite datasets, specify selectors to limit the view
          to a chosen subset of blocks.
        </Documentation>
      </StringVectorProperty>

      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolationType"
                         default_values="1"
                         name="InterpolationType"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Nearest"
                 value="0" />
          <Entry text="Linear"
                 value="1" />
        </EnumerationDomain>
      </IntVectorProperty>
      <ProxyProperty command="SetColor"
                     name="LookupTable" >
        <ProxyGroupDomain name="groups">
          <Group name="transfer_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When enabled, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMultiComponentsMapping"
                         default_values="0"
                         name="MultiComponentsMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="MultiComponentsDecorator"
                                   components="2 4" />
        </Hints>
      </IntVectorProperty>
      <ProxyProperty command="SetScalarOpacity"
                     name="ScalarOpacityFunction" >
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <StringVectorProperty command="SetActiveVolumeMapper"
                            default_values="Projected tetra"
                            name="SelectMapper"
                            number_of_elements="1">
        <Documentation>Select the volume mapper to use for Volume
        rendering.</Documentation>
        <StringListDomain name="list">
          <String value="Projected tetra" />
          <String value="Z sweep" />
          <String value="Bunyk ray cast" />
          <String value="Resample To Image" />
        </StringListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetSamplingDimensions"
                         default_values="128 128 128"
                         name="SamplingDimensions"
                         number_of_elements="3">
        <IntRangeDomain name="range" min="1 1 1"/>
        <Documentation>
        How many linear samples we want along each axis
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="SelectMapper"
                                   value="Resample To Image" />
        </Hints>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetScalarOpacityUnitDistance"
                            default_values="1"
                            name="ScalarOpacityUnitDistance"
                            number_of_elements="1">
        <BoundsDomain mode="approximate_cell_length"
                      name="bounds" >
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </BoundsDomain>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseDataPartitions"
                         default_values="0"
                         name="UseDataPartitions"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Specify whether or not to redistribute the data when actor is translucent.
        Default is false.</Documentation>
      </IntVectorProperty>
      <SubProxy>
        <Proxy name="VolumeDummyMapper"
               proxygroup="mappers"
               proxyname="DummyVolumeMapper"></Proxy>
        <ExposedProperties>
          <Property name="RayCastFunction" />
        </ExposedProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="VolumeBunykMapper"
               proxygroup="mappers"
               proxyname="UnstructuredGridVolumeRayCastMapper"></Proxy>
        <ShareProperties subproxy="VolumeDummyMapper"></ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="VolumeZSweepMapper"
               proxygroup="mappers"
               proxyname="UnstructuredGridVolumeZSweepMapper"></Proxy>
        <ShareProperties subproxy="VolumeDummyMapper"></ShareProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="VolumePTMapper"
               proxygroup="mappers"
               proxyname="ProjectedTetrahedraMapper"></Proxy>
        <ShareProperties subproxy="VolumeDummyMapper"></ShareProperties>
        <ExposedProperties>
          <Property name="UseFloatingPointFrameBuffer" />
        </ExposedProperties>
      </SubProxy>
      <SubProxy>
        <Proxy name="VolumeResampleToImageMapper"
               proxygroup="mappers"
               proxyname="UnstructuredGridResampleToImageMapper"></Proxy>
      </SubProxy>
      <!-- end of UnstructuredGridVolumeRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkImageSliceRepresentation"
                         name="ImageSliceRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation to show 2D images. If the input image has
      3D extents, then this representation shows a single Z
      slice.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Set the input to the representation. Must be a
        vtkImageData producer.</Documentation>
        <DataTypeDomain composite_data_supported="0"
                        name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="any"
                          name="input_array_any"></InputArrayDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                         input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetSlice"
                         default_values="0"
                         name="Slice"
                         number_of_elements="1">
        <Documentation>Set the current slice number. Slice number is used to
        load a 2D slice from a 3D input image. If the input image is 2D, then
        the slice number if ignored. The direction of the slice is determined
        by SliceMode.</Documentation>
        <DimensionsDomain name="dims">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="Direction"
                      name="SliceMode" />
          </RequiredProperties>
        </DimensionsDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetSliceMode"
                         default_values="5"
                         label="Slice Direction"
                         name="SliceMode"
                         number_of_elements="1">
        <Documentation>Determines the direction of slicing to obtain a 2D slice
        from a 3D image.</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="XY Plane"
                 value="5" />
          <Entry text="YZ Plane"
                 value="6" />
          <Entry text="XZ Plane"
                 value="7" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to True, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>

      <ProxyProperty command="SetLookupTable"
                     name="LookupTable" >
        <Documentation>Set the lookup table to use for scalar
        mapping.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty command="SetUseXYPlane"
                         default_values="0"
                         name="UseXYPlane"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set, the image slice is always rendered in the XY
        plane (Z==0) irrespective of the image bounds. Default if
        Off.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
    <!-- End of ImageSliceRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy base_proxygroup="internal_representations"
                         base_proxyname="SurfaceRepresentationBase"
                         class="vtkGeometryRepresentationWithFaces"
                         name="SurfaceRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation to show any dataset in a 3D render
      view.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
          <DataType value="vtkHyperTreeGrid" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="any"
                          name="input_array_any" />
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell"
                          optional="1" />
        <InputArrayDomain attribute_type="point"
                          name="input_array_point"
                          optional="1" />
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell_1"
                          number_of_components="1"
                          optional="1" />
        <InputArrayDomain attribute_type="point"
                          name="input_array_point_1"
                          number_of_components="1"
                          optional="1" />
        <InputArrayDomain attribute_type="point"
                          name="input_array_point_2"
                          number_of_components="2"
                          optional="1" />
        <InputArrayDomain attribute_type="cell"
                          name="input_array_cell_3"
                          number_of_components="3"
                          optional="1" />
        <InputArrayDomain attribute_type="point"
                          name="input_array_point_3"
                          number_of_components="3"
                          optional="1" />
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetBackfaceRepresentation"
                         default_values="400"
                         name="BackfaceRepresentation"
                         number_of_elements="1">
        <Documentation>Choose the representation type for the
        backface.</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="Follow Frontface"
                 value="400" />
          <Entry text="Cull Backface"
                 value="401" />
          <Entry text="Cull Frontface"
                 value="402" />
          <Entry text="Points"
                 value="0" />
          <Entry text="Wireframe"
                 value="1" />
          <Entry text="Surface"
                 value="2" />
          <Entry text="Surface With Edges"
                 value="3" />
        </EnumerationDomain>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBackfaceOpacity"
                            default_values="1.0"
                            name="BackfaceOpacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBackfaceAmbientColor"
                            default_values="1.0 1.0 1.0"
                            name="BackfaceAmbientColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBackfaceDiffuseColor"
                            default_values="1.0 1.0 1.0"
                            name="BackfaceDiffuseColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SurfaceColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
    </RepresentationProxy>
    <!-- ================================================================== -->
    <RepresentationProxy base_proxygroup="internal_representations"
                         base_proxyname="SurfaceRepresentationBase"
                         class="vtkGlyph3DRepresentation"
                         name="Glyph3DRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation to show any dataset in a 3D render
      view.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <InputArrayDomain name="scale_array"
                          number_of_components="1,3"
                          optional="1" />
        <InputArrayDomain name="vector_array"
                          number_of_components="3,4"
                          optional="1" />
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <InputProperty command="SetInputConnection"
                     label="Glyph Type"
                     name="GlyphType"
                     panel_visibility="advanced"
                     port_index="1">
        <Documentation>Specify the source objects.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkPolyData" />
          <DataType value="vtkDataObjectTree" />
        </DataTypeDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="sources" name="ArrowSource" />
          <Proxy group="sources" name="ConeSource" />
          <Proxy group="sources" name="CubeSource" />
          <Proxy group="sources" name="CylinderSource" />
          <Proxy group="sources" name="LineSource" />
          <Proxy group="sources" name="SphereSource" />
          <Proxy group="sources" name="GlyphSource2D" />
          <Proxy group="internal_filters" name="PipelineConnection" />
        </ProxyListDomain>
        <Hints>
          <ProxyPropertyWidget selected_proxy_panel_visibility="advanced" />
          <!-- show the selected proxy's panel, only in advanced mode. -->
        </Hints>
      </InputProperty>
      <IntVectorProperty command="SetMeshVisibility"
                         default_values="0"
                         name="MeshVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Get/Set the visibility of the original
        mesh.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetMaskArray"
                            default_values=""
                            label="Mask Array"
                            name="SelectMaskArray"
                            number_of_elements="1"></StringVectorProperty>
      <StringVectorProperty command="SetScaleArray"
                            default_values=""
                            label="Scale Array"
                            name="SelectScaleArray"
                            number_of_elements="1">
        <ArrayListDomain attribute_type="Scalars"
                         input_domain_name="scale_array"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetScaling"
                         default_values="0"
                         name="Scaling"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable/Disable scaling of source
        geometry.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetScaleMode"
                         default_values="0"
                         name="ScaleMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="No Data Scaling Off"
                 value="0" />
          <Entry text="Magnitude"
                 value="1" />
          <Entry text="Vector Components"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetOrientationArray"
                            default_values=""
                            label="Orientation Vectors"
                            name="SelectOrientationVectors"
                            number_of_elements="1">
        <ArrayListDomain attribute_type="Vectors"
                         input_domain_name="vector_array"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <DoubleVectorProperty command="SetScaleFactor"
                            default_values="1.0"
                            name="ScaleFactor"
                            number_of_elements="1">
        <BoundsDomain mode="scaled_extent"
                      name="bounds"
                      scale_factor="0.1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </BoundsDomain>
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectScaleArray" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <ArrayRangeDomain name="vector_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectOrientationVectors" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>The value of this property will be used as a multiplier
        for scaling the glyphs before adding them to the
        output.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetOrient"
                         default_values="0"
                         name="Orient"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the glyphs will be
        oriented based on the selected orientation vector
        array.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetOrientationMode"
                         default_values="0"
                         name="OrientationMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Direction"
                 value="0" />
          <Entry text="Rotation"
                 value="1" />
          <Entry text="Quaternion"
                 value="2" />
        </EnumerationDomain>
        <Documentation>Orientation mode indicates if the OrientationArray
        provides the direction vector for the orientation, the rotations
        around each axes or the quaternion in WXYZ format. Default is DIRECTION.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMasking"
                         default_values="0"
                         name="Masking"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Tells the mapper to skip glyphing input points that
        haves false values in the mask array. If there is no mask array (id
        access mode is set and there is no such id, or array name access mode
        is set and the there is no such name), masking is silently ignored. A
        mask array is a vtkBitArray with only one component.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSourceIndexing"
                         default_values="0"
                         name="UseGlyphTable"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When enabled, the source index array would be used to select the
        glyph source. If not, only the first source input will be used to generate
        the glyph. It's a prerequisite to enable UseCompositeGlyphTable.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetSourceIndexArray"
                            default_values=""
                            name="GlyphTableIndexArray"
                            number_of_elements="1">
        <ArrayListDomain attribute_type="Scalars"
                         input_domain_name="input_array_point"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetUseSourceTableTree"
                         default_values="0"
                         name="UseCompositeGlyphTable"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When true, the glyph data is expected to be a multiblock
        dataset, where each top-level node contains a separate glyph which may
        be selected by a point data array on the input dataset. UseGlyphTable
        must be enabled as a prerequisite.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseGlyphTable"
                                   value="1" />
          <!-- enable this widget when UseGlyphTable==1 -->
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseCullingAndLOD"
                         default_values="0"
                         name="UseGlyphCullingAndLOD"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When true, culling pass and level of details are enabled.
        The culling pass detects points outside the frustum view and LOD displays
        decimated geometry based on the distance between the camera and the instance.
        This allows to render a higher number of glyphs at interactive rate.
        This feature works only with OpenGL driver >= 4.0.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1"
                            command="SetLODDistanceAndTargetReduction"
                            label="LOD Values"
                            name="LODValues"
                            number_of_elements="0"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            set_number_command="SetNumberOfLOD"
                            use_index="1">
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="Input"
                      name="UseGlyphCullingAndLOD" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <Documentation>
        Configure LODs. The first value is the distance after which it is enabled.
        The second value is the decimation parameter (0 displays full geometry,
        1 displays only a point)
        The maximum number of LODs depends on the GPU capacity.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseGlyphCullingAndLOD"
                                   value="1" />
          <!-- enable this widget when UseGlyphCullingAndLOD==1 -->+
          <ShowComponentLabels>
            <ComponentLabel component="0" label="Distance"/>
            <ComponentLabel component="1" label="Decimation"/>
          </ShowComponentLabels>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetColorByLODIndex"
                         default_values="0"
                         label = "Color By LOD Index"
                         name="ColorByLODIndex"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When true, each level of detail has its own color based on its index.
        It can be useful to correctly configure the levels of details.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseGlyphCullingAndLOD"
                                   value="1" />
        </Hints>
      </IntVectorProperty>
      <!-- end of Glyph3DRepresentation -->
    </RepresentationProxy>
    <!-- ================================================================== -->
    <RepresentationProxy class="vtkDataLabelRepresentation"
                         name="DataLabelRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation used to add labels to points/cells of any
      dataset.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <InputArrayDomain name="input_array_any"></InputArrayDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetPointLabelColor"
                            default_values="1 1 0"
                            name="PointLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPointLabelOpacity"
                            default_values="1.0"
                            name="PointLabelOpacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="0.0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPointLabelFontFamily"
                         default_values="0"
                         name="PointLabelFontFamily"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Arial"
                 value="0" />
          <Entry text="Courier"
                 value="1" />
          <Entry text="Times"
                 value="2" />
          <Entry text="File"
                 value="4" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetPointLabelFontFile"
                            name="PointLabelFontFile"
                            number_of_elements="1"
                            default_values="">
      </StringVectorProperty>
      <IntVectorProperty command="SetMaximumNumberOfLabels"
                         default_values="100"
                         name="MaximumNumberOfLabels"
                         number_of_elements="1">
        <IntRangeDomain min="1"
                        name="range" />
        <Documentation>The maximum number of point labels shown.  If the dataset
          contains more points that this number, a random subset of this size is
          chosen and labeled.</Documentation>
        <Hints>
          <PropertyLink group="settings"
                        proxy="GeneralSettings"
                        property="MaximumNumberOfDataRepresentationLabels"/>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetPointLabelBold"
                         default_values="0"
                         name="PointLabelBold"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetPointLabelItalic"
                         default_values="0"
                         name="PointLabelItalic"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetPointLabelShadow"
                         default_values="0"
                         name="PointLabelShadow"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetPointLabelFontSize"
                         default_values="18"
                         name="PointLabelFontSize"
                         number_of_elements="1">
        <IntRangeDomain min="0"
                        name="range" />
      </IntVectorProperty>
      <StringVectorProperty command="SetPointLabelFormat"
                            default_values=""
                            name="PointLabelFormat"
                            number_of_elements="1">
        <Documentation>
          This should be a printf-style format string. By default,
          the mapper will try to print each component of the tuple
          using a sane format: d for integers, f for floats, g for
          doubles, ld for longs, et cetera. If you need a different
          format, set it here. You can do things like limit the number
          of significant digits, add prefixes/suffixes, basically
          anything that printf can do. Leave empty to auto select an
          appropriate format.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetPointLabelJustification"
                         default_values="0"
                         name="PointLabelJustification"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Left"
                 value="0" />
          <Entry text="Center"
                 value="1" />
          <Entry text="Right"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetPointLabelVisibility"
                         default_values="0"
                         name="PointLabelVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetPointLabelMode"
                         default_values="6"
                         name="PointLabelMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="IDs"
                 value="0" />
          <Entry text="Scalars"
                 value="1" />
          <Entry text="Vectors"
                 value="2" />
          <Entry text="Normals"
                 value="3" />
          <Entry text="TCoords"
                 value="4" />
          <Entry text="Tensors"
                 value="5" />
          <Entry text="FieldData"
                 value="6" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetPointFieldDataArrayName"
                            name="PointFieldDataArrayName"
                            number_of_elements="1">
        <ArrayListDomain input_domain_name="input_array"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <DoubleVectorProperty command="SetCellLabelColor"
                            default_values="0.0 1.0 0.0"
                            name="CellLabelColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCellLabelOpacity"
                            default_values="1.0"
                            name="CellLabelOpacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1.0"
                           min="0.0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetCellLabelFontFamily"
                         default_values="0"
                         name="CellLabelFontFamily"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Arial"
                 value="0" />
          <Entry text="Courier"
                 value="1" />
          <Entry text="Times"
                 value="2" />
          <Entry text="File"
                 value="4" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetCellLabelFontFile"
                            name="CellLabelFontFile"
                            number_of_elements="1"
                            default_values="">
      </StringVectorProperty>
      <IntVectorProperty command="SetCellLabelBold"
                         default_values="0"
                         name="CellLabelBold"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetCellLabelItalic"
                         default_values="0"
                         name="CellLabelItalic"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetCellLabelShadow"
                         default_values="0"
                         name="CellLabelShadow"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetCellLabelFontSize"
                         default_values="18"
                         name="CellLabelFontSize"
                         number_of_elements="1">
        <IntRangeDomain min="0"
                        name="range" />
      </IntVectorProperty>
      <StringVectorProperty command="SetCellLabelFormat"
                            default_values=""
                            name="CellLabelFormat"
                            number_of_elements="1">
        <Documentation>
          This should be a printf-style format string. By default,
          the mapper will try to print each component of the tuple
          using a sane format: d for integers, f for floats, g for
          doubles, ld for longs, et cetera. If you need a different
          format, set it here. You can do things like limit the number
          of significant digits, add prefixes/suffixes, basically
          anything that printf can do. Leave empty to auto select an
          appropriate format.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetCellLabelJustification"
                         default_values="0"
                         name="CellLabelJustification"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Left"
                 value="0" />
          <Entry text="Center"
                 value="1" />
          <Entry text="Right"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetCellLabelVisibility"
                         default_values="0"
                         name="CellLabelVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetCellLabelMode"
                         default_values="6"
                         name="CellLabelMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="IDs"
                 value="0" />
          <Entry text="Scalars"
                 value="1" />
          <Entry text="Vectors"
                 value="2" />
          <Entry text="Normals"
                 value="3" />
          <Entry text="TCoords"
                 value="4" />
          <Entry text="Tensors"
                 value="5" />
          <Entry text="FieldData"
                 value="6" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetCellFieldDataArrayName"
                            name="CellFieldDataArrayName"
                            number_of_elements="1">
        <ArrayListDomain input_domain_name="input_array"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
      </StringVectorProperty>
      <!-- End of DataLabelRepresentation -->
    </RepresentationProxy>
    <!-- ================================================================== -->
    <RepresentationProxy class="vtkSelectionRepresentation"
                         name="SelectionRepresentation"
                         processes="client|renderserver|dataserver"
                         si_class="vtkSIProxy">
      <Documentation>Proxy to show a selection as geometry.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <InputArrayDomain name="input_array_any"></InputArrayDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Get/Set the visibility of the
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetColor"
                            default_values="1.0 0.0 1.0"
                            name="Color"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SelectionColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="2.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPointSize"
                            default_values="5.0"
                            name="PointSize"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRenderLinesAsTubes"
                         default_values="0"
                         name="RenderLinesAsTubes"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all lines are rendered as 3D tubes, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRenderPointsAsSpheres"
                         default_values="0"
                         name="RenderPointsAsSpheres"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all points are rendered as 3D spheres, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRepresentation"
                         default_values="1"
                         name="Representation"
                         panel_widget="display_representation_selector"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Points"
                 value="0" />
          <Entry text="Wireframe"
                 value="1" />
          <Entry text="Surface"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseOutline"
                         default_values="0"
                         name="UseOutline"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>

      <DoubleVectorProperty argument_is_array="1"
                            command="SetUserTransform"
                            default_values="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
                            name="UserTransform"
                            number_of_elements="16">
        <Documentation>
          In addition to the instance variables such as position and
          orientation, you can add an additional transformation for your own
          use. This transformation is concatenated with the actor's internal
          transformation, which you implicitly create through the use of
          Position, Origin, Orientation. The value is 4x4 matrix for the linear
          transform to use.
        </Documentation>
      </DoubleVectorProperty>

      <SubProxy command="SetLabelRepresentation">
        <Proxy name="LabelRepresentation"
               proxygroup="representations"
               proxyname="DataLabelRepresentation" />
        <ExposedProperties>
          <Property name="CellFieldDataArrayName" />
          <Property name="CellLabelBold" />
          <Property name="CellLabelColor" />
          <Property name="CellLabelFontFamily" />
          <Property name="CellLabelFontFile" />
          <Property name="CellLabelFontSize" />
          <Property name="CellLabelFormat" />
          <Property name="CellLabelItalic" />
          <Property name="CellLabelJustification" />
          <Property name="CellLabelOpacity" />
          <Property name="CellLabelShadow" />
          <Property name="CellLabelVisibility" />
          <Property name="PointFieldDataArrayName" />
          <Property name="PointLabelBold" />
          <Property name="PointLabelColor" />
          <Property name="PointLabelFontFamily" />
          <Property name="PointLabelFontFile" />
          <Property name="PointLabelFontSize" />
          <Property name="PointLabelFormat" />
          <Property name="PointLabelItalic" />
          <Property name="PointLabelJustification" />
          <Property name="PointLabelOpacity" />
          <Property name="PointLabelShadow" />
          <Property name="PointLabelVisibility" />
          <Property name="MaximumNumberOfLabels" />
        </ExposedProperties>
      </SubProxy>

      <PropertyGroup label="Cell Label Font" panel_visibility="never" panel_widget="FontEditor">
        <Property name="CellLabelBold" function="Bold"/>
        <Property name="CellLabelColor" function="Color"/>
        <Property name="CellLabelFontFamily" function="Family"/>
        <Property name="CellLabelFontFile" function="File"/>
        <Property name="CellLabelFontSize" function="Size"/>
        <Property name="CellLabelItalic" function="Italics"/>
        <Property name="CellLabelJustification" function="Justification"/>
        <Property name="CellLabelOpacity" function="Opacity"/>
        <Property name="CellLabelShadow" function="Shadow"/>
      </PropertyGroup>

      <PropertyGroup label="Point Label Font" panel_visibility="never" panel_widget="FontEditor">
        <Property name="PointLabelBold" function="Bold"/>
        <Property name="PointLabelColor" function="Color"/>
        <Property name="PointLabelFontFamily" function="Family"/>
        <Property name="PointLabelFontFile" function="File"/>
        <Property name="PointLabelFontSize" function="Size"/>
        <Property name="PointLabelItalic" function="Italics"/>
        <Property name="PointLabelJustification" function="Justification"/>
        <Property name="PointLabelOpacity" function="Opacity"/>
        <Property name="PointLabelShadow" function="Shadow"/>
      </PropertyGroup>
      <!-- End of SelectionRepresentation -->
    </RepresentationProxy>
    <!-- ================================================================== -->
    <RepresentationProxy class="vtkPVGridAxes3DRepresentation"
                         name="GridAxesRepresentation"
                         processes="client|renderserver|dataserver"
                         si_class="vtkSIProxy">
      <Documentation>Proxy to show a selection as geometry.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <InputArrayDomain name="input_array_any"></InputArrayDomain>
      </InputProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetGridAxesVisibility"
                         name="GridAxesVisibility"
                         default_values="0"
                         panel_visibility="never"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Show/hide an Axes Grid around the selected data.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            panel_visibility="never"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Keeps axes synced with actor transforms.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            panel_visibility="never"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Keeps axes synced with actor transforms.</Documentation>
      </DoubleVectorProperty>
      <Hints>
        <ProxyList>
          <Link name="Scale" with_property="Scale" />
          <Link name="Position" with_property="Position" />
        </ProxyList>
      </Hints>

      <SubProxy command="SetGridAxes">
        <Proxy name="GridAxes"
               proxygroup="annotations"
               proxyname="GridAxes3DActor" />
        <ExposedProperties>
          <PropertyGroup label="Title Texts">
            <Property name="XTitle"/>
            <Property name="YTitle"/>
            <Property name="ZTitle"/>
          </PropertyGroup>
          <PropertyGroup label="X Title Font Properties" panel_widget="FontEditor" panel_visibility="advanced">
            <Property name="XTitleColor" function="Color"/>
            <Property name="XTitleFontFamily" function="Family"/>
            <Property name="XTitleFontFile" function="File"/>
            <Property name="XTitleBold" function="Bold" />
            <Property name="XTitleItalic" function="Italics"/>
            <Property name="XTitleFontSize" function="Size" />
            <Property name="XTitleShadow" function="Shadow" />
            <Property name="XTitleOpacity" function="Opacity" />
          </PropertyGroup>
          <PropertyGroup label="Y Title Font Properties" panel_widget="FontEditor" panel_visibility="advanced">
            <Property name="YTitleColor" function="Color"/>
            <Property name="YTitleFontFamily" function="Family"/>
            <Property name="YTitleFontFile" function="File"/>
            <Property name="YTitleBold" function="Bold" />
            <Property name="YTitleItalic" function="Italics"/>
            <Property name="YTitleFontSize" function="Size" />
            <Property name="YTitleShadow" function="Shadow" />
            <Property name="YTitleOpacity" function="Opacity" />
          </PropertyGroup>
          <PropertyGroup label="Z Title Font Properties" panel_widget="FontEditor" panel_visibility="advanced">
            <Property name="ZTitleColor" function="Color"/>
            <Property name="ZTitleFontFamily" function="Family"/>
            <Property name="ZTitleFontFile" function="File"/>
            <Property name="ZTitleBold" function="Bold" />
            <Property name="ZTitleItalic" function="Italics"/>
            <Property name="ZTitleFontSize" function="Size" />
            <Property name="ZTitleShadow" function="Shadow" />
            <Property name="ZTitleOpacity" function="Opacity" />
          </PropertyGroup>
          <PropertyGroup label="Face Properties">
            <Property name="FacesToRender" />
            <Property name="CullBackface" />
            <Property name="CullFrontface" />
            <Property name="GridColor"/>
          </PropertyGroup>
          <Property name="ShowGrid"/>
          <Property name="ShowEdges"/>
          <Property name="ShowTicks"/>
          <PropertyGroup label="Label Properties">
            <Property name="LabelUniqueEdgesOnly" />
            <Property name="AxesToLabel" />
          </PropertyGroup>
          <PropertyGroup label="X Axis Label Font Properties" panel_widget="FontEditor" panel_visibility="advanced">
            <Property name="XLabelColor" function="Color"/>
            <Property name="XLabelFontFamily" function="Family"/>
            <Property name="XLabelFontFile" function="File"/>
            <Property name="XLabelBold" function="Bold" />
            <Property name="XLabelItalic" function="Italics"/>
            <Property name="XLabelFontSize" function="Size" />
            <Property name="XLabelShadow" function="Shadow" />
            <Property name="XLabelOpacity" function="Opacity" />
          </PropertyGroup>
          <PropertyGroup label="Y Axis Label Font Properties" panel_widget="FontEditor" panel_visibility="advanced">
            <Property name="YLabelColor" function="Color"/>
            <Property name="YLabelFontFamily" function="Family"/>
            <Property name="YLabelFontFile" function="File"/>
            <Property name="YLabelBold" function="Bold" />
            <Property name="YLabelItalic" function="Italics"/>
            <Property name="YLabelFontSize" function="Size" />
            <Property name="YLabelShadow" function="Shadow" />
            <Property name="YLabelOpacity" function="Opacity" />
          </PropertyGroup>
          <PropertyGroup label="Z Axis Label Font Properties" panel_widget="FontEditor" panel_visibility="advanced">
            <Property name="ZLabelColor" function="Color"/>
            <Property name="ZLabelFontFamily" function="Family"/>
            <Property name="ZLabelFontFile" function="File"/>
            <Property name="ZLabelBold" function="Bold" />
            <Property name="ZLabelItalic" function="Italics"/>
            <Property name="ZLabelFontSize" function="Size" />
            <Property name="ZLabelShadow" function="Shadow" />
            <Property name="ZLabelOpacity" function="Opacity" />
          </PropertyGroup>
          <PropertyGroup label="X Axis Label Properties">
            <Property name="XAxisNotation" />
            <Property name="XAxisPrecision" />
            <Property name="XAxisUseCustomLabels" />
            <Property name="XAxisLabels" />
          </PropertyGroup>
          <PropertyGroup label="Y Axis Label Properties">
            <Property name="YAxisNotation" />
            <Property name="YAxisPrecision" />
            <Property name="YAxisUseCustomLabels" />
            <Property name="YAxisLabels" />
          </PropertyGroup>
          <PropertyGroup label="Z Axis Label Properties">
            <Property name="ZAxisNotation" />
            <Property name="ZAxisPrecision" />
            <Property name="ZAxisUseCustomLabels" />
            <Property name="ZAxisLabels" />
          </PropertyGroup>
          <PropertyGroup label="Bounds">
            <Property name="UseCustomBounds" />
            <Property name="CustomBounds" />
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <!-- End of GridAxesRepresentation -->
    </RepresentationProxy>
    <!-- ================================================================== -->
    <RepresentationProxy class="vtkMoleculeRepresentation"
                         name="MoleculeRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation for a vtkMolecule.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkMolecule" />
        </DataTypeDomain>
        <Documentation>Set the input molecule for the
        representation.</Documentation>
        <InputArrayDomain attribute_type="vertex"
                          name="input_array"
                          optional="1" />
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1" min="0" name="range" />
        <Documentation>
          The opacity to use when rendering the model.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1" min="0" name="range" />
        <Documentation>
          The specularity to use when rendering the model.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100" min="0" name="range" />
        <Documentation>
          The specularity to use when rendering the model.
        </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When enabled, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRenderAtoms"
                         default_values="1"
                         name="RenderAtoms"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for the atoms.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetAtomicRadiusScaleFactor"
                            default_values="0.3"
                            name="AtomicRadiusFactor"
                            number_of_elements="1">
        <DoubleRangeDomain max="3" min="0" name="range" />
        <Documentation>The scale factor to apply on atom radius. Radius is expected to be in Angstrom. </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetAtomicRadiusType"
                         default_values="1"
                         label="Atomic Radius Type"
                         name="AtomicRadiusType"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <EnumerationDomain name="enum">
          <Entry text="Covalent"
                 value="0" />
          <Entry text="Van Der Waals"
                 value="1" />
          <Entry text="Unit"
                 value="2" />
          <Entry text="Input Array"
                 value="3" />
        </EnumerationDomain>
        <Documentation>The radius type to use.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty name="AtomicRadiusArrayName"
                            command="SetAtomicRadiusArray"
                            number_of_elements="1"
                            label="Atomic Radii Array"
                            panel_visibility="advanced">
        <ArrayListDomain  input_domain_name="input_array"
                          attribute_type="Scalars"
                          name="array_list">
          <RequiredProperties>
            <Property name="Input" function="Input"/>
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>This property specifies the name of the input array to use for atom radii. Values are expected to be in Angstrom.
        </Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetRenderBonds"
                         default_values="1"
                         name="RenderBonds"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for the bonds.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBondRadius"
                            default_values="0.075"
                            name="BondRadius"
                            number_of_elements="1">
        <DoubleRangeDomain max="0.5" min="0" name="range" />
        <Documentation>The bond radius, in Angstrom. </Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseMultiCylindersForBonds"
                         default_values="1"
                         name="MultiCylindersForBonds"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Display multiple cylinders for high bond order.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetBondColorMode"
                         default_values="1"
                         name="BondColorMode"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Use atom color for bonds. If disabled, use the custom bond color.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetBondColor"
                            default_values="1 1 1"
                            name="BondColor"
                            number_of_elements="3"
                            panel_widget="color_selector"
                            panel_visibility="default">
        <Documentation>Sets the color for the bonds.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            default_values_delimiter=";"
                            default_values="0;0;0;4;Atomic Numbers"
                            panel_visibility="never"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <ProxyProperty command="SetLookupTable"
                     name="LookupTable" >
        <Documentation>Set the lookup-table to use to map data array to colors.
        Lookuptable is only used with MapScalars to ON.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <!-- End of MoleculeRepresentation -->
    </RepresentationProxy>
    <PVMoleculeRepresentationProxy class="vtkPVCompositeRepresentation"
                           name="PVMoleculeRepresentation"
                           processes="client|renderserver|dataserver">
      <Documentation>PVRepresentationProxy for vtkMolecule.</Documentation>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility for this
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <RepresentationType subproxy="MoleculeRepresentation"
                          subtype="Molecule"
                          text="Molecule" />
      <StringVectorProperty command="GetRepresentationTypes"
                            information_only="1"
                            name="RepresentationTypesInfo"
                            si_class="vtkSIDataArrayProperty">
        <Documentation>Property that lists the available representation types.
        This is used by the domain for "Representation" to setup the list of
        types available correctly.</Documentation>
      </StringVectorProperty>
      <StringVectorProperty command="SetActiveRepresentation"
                            default_values="Molecule"
                            name="Representation"
                            number_of_elements="1"
                            panel_visibility="default"
                            panel_widget="display_representation_selector" >
        <Documentation>Choose the type for the representation.</Documentation>
        <RepresentationTypeDomain name="list">
          <RequiredProperties>
            <Property function="StringList"
                      name="RepresentationTypesInfo" />
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentationTypeDomain>
      </StringVectorProperty>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkMolecule" />
        </DataTypeDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <SubProxy>
        <Proxy name="MoleculeRepresentation"
               proxygroup="representations"
               proxyname="MoleculeRepresentation" />
        <ExposedProperties>
          <PropertyGroup label="Coloring">
            <Property name="Opacity"
                      panel_visibility="default" />
            <Property name="Specular"
                      panel_visibility="default" />
            <Property name="SpecularPower"
                      panel_visibility="default" />
            <Property name="MapScalars"
                      panel_visibility="default" />
            <Property name="ColorArrayName"
                      panel_visibility="default" />
            <Property name="LookupTable"
                      panel_visibility="never" />
          </PropertyGroup>
          <PropertyGroup label="Styling"
                          panel_widget="MoleculeParameters">
            <Property name="RenderAtoms"
                      function="RenderAtoms" />
            <Property name="AtomicRadiusFactor"
                      function="AtomicRadiusFactor" />
            <Property name="AtomicRadiusType"
                      function="AtomicRadiusType"/>
            <Proprety name="AtomicRadiusArrayName"
                      function="AtomicRadiusArrayName"/>
            <Property name="RenderBonds"
                      function="RenderBonds" />
            <Property name="BondRadius"
                      function="BondRadius" />
            <Property name="MultiCylindersForBonds"
                      function="UseMultiCylindersForBonds"/>
            <Property name="BondColorMode"
                      function="BondColorMode"/>
            <Property name="BondColor"
                      function="BondColor"/>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
    </PVMoleculeRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy class="vtkChartTextRepresentation"
                              name="ChartTextRepresentation"
                              processes="client|dataserver|renderserver">
      <Documentation>Representation to show text in Chart views</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInteractivity"
                         default_values="0"
                         name="Interactivity"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether user should be able to interactively place the text in the view.
        </Documentation>
        <!-- for now, we hide this property since we don't users interact with
             the text right now -->
      </IntVectorProperty>

      <SubProxy command="SetTextProperty">
        <Proxy name="Prop2DProperty" proxygroup="properties" proxyname="ChartTextProperty" />
        <ExposedProperties>
          <PropertyGroup label="Font Properties" panel_widget="FontEditor">
            <Property name="Color" function="Color" />
            <Property name="Opacity" function="Opacity"/>
            <Property name="FontFamily" function="Family"/>
            <Property name="FontFile" function="File"/>
            <Property name="Bold" function="Bold"/>
            <Property name="Italic" function="Italics" />
            <Property name="Shadow" function="Shadow"/>
            <Property name="FontSize" function="Size"/>
            <Property name="Justification" function="Justification"/>
            <Property name="VerticalJustification" default_values="1" />
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <IntVectorProperty command="SetLabelLocation"
                         default_values="4"
                         name="LabelLocation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <!-- for now, we skip interactive placement functionality
          <Entry text="Any Location" value="0" />
          -->
          <Entry text="Lower Left Corner" value="1" />
          <Entry text="Lower Right Corner" value="2" />
          <Entry text="Lower Center" value="3" />
          <Entry text="Upper Left Corner" value="4" />
          <Entry text="Upper Right Corner" value="5" />
          <Entry text="Upper Center" value="6" />
        </EnumerationDomain>
        <Documentation>Specify placement of the scalar bar actor.</Documentation>
      </IntVectorProperty>

      <PropertyGroup label="Text Position" panel_widget="TextLocationEditor">
        <Property name="LabelLocation" function="WindowLocation" />
      </PropertyGroup>

    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              class="vtkXYChartRepresentation"
                              name="XYChartRepresentationBase"
                              processes="client|dataserver|renderserver">
      <Documentation>API for representations used by XYChartView and XYBarChartView.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty clean_command="ResetCompositeDataSetIndices"
                         command="AddCompositeDataSetIndex"
                         default_values="1"
                         number_of_elements="1"
                         name="CompositeDataSetIndex"
                         number_of_elements_per_command="1"
                         panel_visibility="default"
                         repeat_command="1">
        <CompositeTreeDomain mode="leaves" name="tree">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </CompositeTreeDomain>
        <Documentation>This property lists the ids of the blocks to extract
          from the input multiblock dataset.</Documentation>
        <Hints>
          <!-- we don't want to show this property, except for MBs. -->
          <PropertyWidgetDecorator type="InputDataTypeDecorator"
            mode="visibility" name="vtkMultiBlockDataSet" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetFieldAssociation"
                         default_values="0"
                         name="AttributeType"
                         number_of_elements="1">
        <Documentation>Select the attribute data to render.</Documentation>
        <FieldDataDomain enable_field_data="1"
                         name="enum">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseIndexForXAxis"
                         default_values="1"
                         name="UseIndexForXAxis"
                         number_of_elements="1">
        <ChartUseIndexForAxisDomain name="bool">
          <RequiredProperties>
            <Property function="ArraySelection" name="XArrayName" />
          </RequiredProperties>
        </ChartUseIndexForAxisDomain>
        <Documentation>When set, the array index will be used for X axis,
        otherwise the array identified by XArrayName will be
        used.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetXAxisSeriesName"
                            default_values=""
                            name="XArrayName"
                            number_of_elements="1">
        <Documentation>Set the array to use on X axis. This is used only when
        UseIndexForXAxis is set to 0.</Documentation>
        <ChartSeriesListDomain name="array_list"
                              hide_partial_arrays="1">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
          </RequiredProperties>
        </ChartSeriesListDomain>
        <Hints>
          <!-- the widget for this property is only enabled, when
          UseIndexForXAxis is unchecked. -->
          <PropertyWidgetDecorator type="EnableWidgetDecorator">
            <Property name="UseIndexForXAxis" function="boolean_invert" />
          </PropertyWidgetDecorator>
        </Hints>
      </StringVectorProperty>
      <PropertyGroup label="X Axis Parameters">
        <Property name="UseIndexForXAxis" />
        <Property name="XArrayName" />
      </PropertyGroup>
      <StringVectorProperty command="SetSeriesVisibility"
                            element_types="2 0"
                            name="SeriesVisibility"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            clean_command="ClearSeriesVisibilities">
        <Documentation>Set the series visibility.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="visibility">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
        <Hints>
          <!-- when present, the SeriesEditor widget will allow user to
          re-order the series which will affect the rendered plot -->
          <SeriesEditor supports_reordering="1" />
        </Hints>
      </StringVectorProperty>
      <StringVectorProperty command="SetLabel"
                            clean_command="ClearLabels"
                            element_types="2 2"
                            name="SeriesLabel"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series labels.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="label">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetColor"
                            clean_command="ClearColors"
                            element_types="2 1 1 1"
                            name="SeriesColor"
                            number_of_elements_per_command="4"
                            repeat_command="1">
        <Documentation>Set the series line/bar color.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="color">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetAxisCorner"
                            clean_command="ClearAxisCorners"
                            element_types="2 0"
                            name="SeriesPlotCorner"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series axis corner.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="value"
                                    default_value="0">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <!--
          Set the palette SelectionColor color to all the plots in the chart.
        -->
      <DoubleVectorProperty command="SetSelectionColor"
                            default_values="1.0 0.0 1.0"
                            name="Color"
                            number_of_elements="3"
                            panel_visibility="never">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SelectionColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <SubProxy command="SetSelectionRepresentation">
        <!--
          SelectionRepresentation proxy is used to convey the selection to view.
          We keep this separate as subproxy so that when the selection is
          modified, we don't have to update the representation as well, we can
          only update the SelectionRepresentation.
        -->
        <RepresentationProxy name="SelectionRepresentation"
               class="vtkChartSelectionRepresentation"
               processes="client|dataserver|renderserver">
          <InputProperty command="SetInputConnection"
                         name="SelectionInput"/>
        </RepresentationProxy>
      </SubProxy>

      <StringVectorProperty command="SetSeriesLabelPrefix"
                            name="SeriesLabelPrefix"
                            number_of_elements="1"
                            default_value=""
                            panel_visibility="advanced">
      <Documentation>
        Specify a string to prefix to the **SeriesLabel** (**Legend Name**) for each
        of series being plotted. This will get prefixed to the labels (legend names) specified
        for each of the series individually via the **Series Parameters**.
      </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="LastPresetName"
                            number_of_elements="1"
                            default_values="Spectrum"
                            panel_visibility="never">
      <Documentation>Dummy property containing last color preset name.
        The property widget can set it when a preset is applied, and the domain can read it when a default color is requested.</Documentation>
      </StringVectorProperty>
      <!-- End of XYChartRepresentationBase -->
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              class="vtkPVHistogramChartRepresentation"
                              name="HistogramChartRepresentation"
                              processes="client|dataserver|renderserver">
      <Documentation>Representation used by XYHistogramChartView.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="any" name="input_array" />
      </InputProperty>
      <StringVectorProperty animateable="0"
                            command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="SelectInputArray"
                            number_of_elements="5">
        <ArrayListDomain attribute_type="Scalars"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>This property indicates the name of the array from which
        to compute the histogram.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetUseColorMapping"
                         number_of_elements="1"
                         default_values="0"
                         name="UseColorMapping"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          Use color mapping for the histogram.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetHistogramColor"
                            default_values="0 0 1"
                            name="HistogramColor"
                            number_of_elements="3"
                            panel_widget="color_selector"
                            panel_visibility="default">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="UseColorMapping" function="boolean_invert" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Sets the color for the histograms.</Documentation>
      </DoubleVectorProperty>
      <ProxyProperty command="SetLookupTable"
                     name="LookupTable"
                     panel_visibility="never" >
        <Documentation>Sets the lookup table to use for scalar
        mapping.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <SubProxy command="SetSelectionRepresentation">
        <!--
          SelectionRepresentation proxy is used to convey the selection to view.
          We keep this separate as subproxy so that when the selection is
          modified, we don't have to update the representation as well, we can
          only update the SelectionRepresentation.
        -->
        <RepresentationProxy name="SelectionRepresentation"
               class="vtkChartSelectionRepresentation"
               processes="client|dataserver|renderserver">
               <!-- See vtkSMChartRepresentationProxy::SetPropertyModifiedFlag()
                    for the details on naming this property -->
          <InputProperty command="SetInputConnection"
                         name="OriginalSelectionInput"/>
        </RepresentationProxy>
      </SubProxy>

      <IntVectorProperty command="SetBinCount"
                         default_values="256"
                         name="BinCount"
                         number_of_elements="1">
        <IntRangeDomain max="1000"
                        min="1"
                        name="range" />
        <Documentation>The value of this property specifies the number of bins
        for the histogram.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty animateable="0"
                         command="SetComponent"
                         default_values="0"
                         name="Component"
                         number_of_elements="1">
        <NumberOfComponentsDomain name="comps" enable_magnitude="1">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectInputArray" />
          </RequiredProperties>
        </NumberOfComponentsDomain>
        <Documentation>The value of this property specifies the array component
        from which the histogram should be computed.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetCenterBinsAroundMinAndMax"
                         default_values="0"
                         name="CenterBinsAroundMinAndMax"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>When set to true, first and last bin will be centered
          around the minimum and the maximum values of the data.
          By default, set to false.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseCustomBinRanges"
                                   value="0" />
          <!-- show this widget when UseCustomBinRanges==0 -->
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseCustomBinRanges"
                         default_values="0"
                         name="UseCustomBinRanges"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>When set to true, CustomBinRanges will be used instead
        of using the full range for the selected array. By default, set to
        false.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetCustomBinRanges"
                            default_values="0.0 100.0"
                            name="CustomBinRanges"
                            number_of_elements="2"
                            panel_visibility="advanced">
        <Documentation>Set custom bin ranges to use. These are used only when
        UseCustomBinRanges is set to true.</Documentation>
        <ArrayRangeDomain name="scalar_range">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
            <Property function="ArraySelection"
                      name="SelectInputArray" />
          </RequiredProperties>
        </ArrayRangeDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="UseCustomBinRanges" function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetHistogramLineStyle"
                         name="HistogramLineStyle"
                         number_of_elements="1"
                         default_values="0"
                         panel_visibility="advanced">
         <Documentation>Set the line style to use for drawing a border around the histogram bins.
         </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0" />
          <Entry text="Solid" value="1" />
          <Entry text="Dash" value="2" />
          <Entry text="Dot" value="3" />
          <Entry text="Dash Dot" value="4" />
          <Entry text="Dash Dot Dot" value="5" />
        </EnumerationDomain>
      </IntVectorProperty>
      <Hints>
        <InitializationHelper class="vtkSMXYChartRepresentationInitializationHelper" />
      </Hints>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy class="vtkPVParallelCoordinatesRepresentation"
                              name="ParallelCoordinatesRepresentation"
                              processes="client|dataserver|renderserver">
      <Documentation>Representation used by
      ParallelCoordinatesChartView.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetCompositeDataSetIndex"
                         default_values="1"
                         name="CompositeDataSetIndex"
                         number_of_elements="1">
        <Documentation>In case of Composite datasets, set the flat index of the
        dataset to pass. The flat index must point to a non-empty,
        non-composite dataset for anything to be passed through. If the input
        is not a composite dataset, then this index is ignored.</Documentation>
        <CompositeTreeDomain mode="leaves"
                             name="tree">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </CompositeTreeDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetFieldAssociation"
                         default_values="0"
                         name="FieldAssociation"
                         number_of_elements="1">
        <Documentation>Select the attribute data to pass.</Documentation>
        <FieldDataDomain enable_field_data="1"
                         name="enum">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </IntVectorProperty>

      <StringVectorProperty command="SetSeriesVisibility"
                            element_types="2 0"
                            name="SeriesVisibility"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            clean_command="ClearSeriesVisibilities">
        <Documentation>Set the series visibility.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="visibility">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="FieldAssociation" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
        <Hints>
          <!-- when present, the SeriesEditor widget will allow user to
          re-order the series which will affect the rendered plot -->
          <SeriesEditor supports_reordering="1" />
        </Hints>
      </StringVectorProperty>

      <DoubleVectorProperty command="SetColor"
                            name="Color"
                            number_of_elements="3"
                            default_values="0.0 0.0 0.0"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <Documentation>Set the series line color.</Documentation>
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            name="Opacity"
                            number_of_elements="1"
                            default_values="0.1"
                            panel_visibility="advanced">
        <Documentation>Set the opacity of the lines.</Documentation>
        <DoubleRangeDomain name="range" min="0" max="1" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetLineThickness"
                         name="LineThickness"
                         number_of_elements="1"
                         default_values="2"
                         panel_visibility="advanced">
        <Documentation>Set the series line thickness.</Documentation>
        <IntRangeDomain name="range" min="1" max="10" />
      </IntVectorProperty>
      <IntVectorProperty command="SetLineStyle"
                         name="LineStyle"
                         number_of_elements="1"
                         default_values="1"
                         panel_visibility="advanced">
        <Documentation>Set the series line style.</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0" />
          <Entry text="Solid" value="1" />
          <Entry text="Dash" value="2" />
          <Entry text="Dot" value="3" />
          <Entry text="Dash Dot" value="4" />
          <Entry text="Dash Dot Dot" value="5" />
        </EnumerationDomain>
      </IntVectorProperty>

      <PropertyGroup label="Series Parameters"
                     panel_widget="SeriesEditor" >
        <Property name="SeriesVisibility" function="SeriesVisibility" />
      </PropertyGroup>

      <PropertyGroup label="Styling">
        <Property name="Color" />
        <Property name="Opacity" />
        <Property name="LineThickness" />
        <Property name="LineStyle" />
      </PropertyGroup>

      <SubProxy command="SetSelectionRepresentation">
        <!--
          SelectionRepresentation proxy is used to convey the selection to view.
          We keep this separate as subproxy so that when the selection is
          modified, we don't have to update the representation as well, we can
          only update the SelectionRepresentation.
        -->
        <RepresentationProxy name="SelectionRepresentation"
               class="vtkChartSelectionRepresentation"
               processes="client|dataserver|renderserver">
          <InputProperty command="SetInputConnection"
                         name="SelectionInput"/>
        </RepresentationProxy>
      </SubProxy>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy class="vtkPVBoxChartRepresentation"
                                 name="BoxChartRepresentation"
                                 processes="client|dataserver|renderserver">
      <Documentation>Representation used by BoxChartView.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetCompositeDataSetIndex"
                         default_values="1"
                         name="CompositeDataSetIndex"
                         number_of_elements="1">
        <Documentation>In case of Composite datasets, set the flat index of the
        dataset to pass. The flat index must point to a non-empty,
        non-composite dataset for anything to be passed through. If the input
        is not a composite dataset, then this index is ignored.</Documentation>
        <CompositeTreeDomain mode="leaves"
                             name="tree">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </CompositeTreeDomain>
        <Hints>
          <!-- we don't want to show this property, except for MBs. -->
          <PropertyWidgetDecorator type="InputDataTypeDecorator"
            mode="visibility" name="vtkMultiBlockDataSet" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetFieldAssociation"
                         default_values="0"
                         name="FieldAssociation"
                         number_of_elements="1">
        <Documentation>Select the attribute data to pass.</Documentation>
        <FieldDataDomain enable_field_data="1"
                         name="enum">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </IntVectorProperty>

      <StringVectorProperty command="SetSeriesVisibility"
                            element_types="2 0"
                            name="SeriesVisibility"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            clean_command="ClearSeriesVisibilities">
        <Documentation>Set the series visibility.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="visibility">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="FieldAssociation" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
        <Hints>
          <!-- when present, the SeriesEditor widget will allow user to
          re-order the series which will affect the rendered plot -->
          <SeriesEditor supports_reordering="1" />
        </Hints>
      </StringVectorProperty>
      <StringVectorProperty command="SetSeriesColor"
                            element_types="2 1 1 1"
                            name="SeriesColor"
                            number_of_elements_per_command="4"
                            repeat_command="1"
                            clean_command="ClearSeriesColors">
        <Documentation>Set the series box plot color.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="color">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="FieldAssociation" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>

      <DoubleVectorProperty command="SetColor"
                            name="Color"
                            number_of_elements="3"
                            default_values="0.0 0.0 0.0"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <Documentation>Set the series line color.</Documentation>
        <DoubleRangeDomain name="range" min="0 0 0" max="1 1 1" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetLineThickness"
                         name="LineThickness"
                         number_of_elements="1"
                         default_values="2"
                         panel_visibility="advanced">
        <Documentation>Set the series line thickness.</Documentation>
        <IntRangeDomain name="range" min="1" max="10" />
      </IntVectorProperty>
      <IntVectorProperty command="SetLineStyle"
                         name="LineStyle"
                         number_of_elements="1"
                         default_values="1"
                         panel_visibility="advanced">
        <Documentation>Set the series line style.</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0" />
          <Entry text="Solid" value="1" />
          <Entry text="Dash" value="2" />
          <Entry text="Dot" value="3" />
          <Entry text="Dash Dot" value="4" />
          <Entry text="Dash Dot Dot" value="5" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetLegend"
                         default_values="1"
                         name="Legend"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the legend.</Documentation>
      </IntVectorProperty>

      <PropertyGroup label="Series Parameters"
                     panel_widget="SeriesEditor" >
        <Property name="SeriesVisibility"
                  function="SeriesVisibility" />
        <Property name="SeriesColor"
                  function="SeriesColor" />
      </PropertyGroup>

      <PropertyGroup label="Box Styling">
        <Property name="Color" />
        <Property name="LineThickness" />
        <Property name="LineStyle" />
        <Property name="Legend" />
      </PropertyGroup>

      <SubProxy command="SetSelectionRepresentation">
        <!--
          SelectionRepresentation proxy is used to convey the selection to view.
          We keep this separate as subproxy so that when the selection is
          modified, we don't have to update the representation as well, we can
          only update the SelectionRepresentation.
        -->
        <RepresentationProxy name="SelectionRepresentation"
               class="vtkChartSelectionRepresentation"
               processes="client|dataserver|renderserver">
          <InputProperty command="SetInputConnection"
                         name="SelectionInput"/>
        </RepresentationProxy>
      </SubProxy>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              class="vtkPVPlotMatrixRepresentation"
                              name="PlotMatrixRepresentation"
                              processes="client|dataserver|renderserver">
      <Documentation>Representation used by PlotMatrixView.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetCompositeDataSetIndex"
                         default_values="1"
                         name="CompositeDataSetIndex"
                         number_of_elements="1">
        <Documentation>In case of Composite datasets, set the flat index of the
        dataset to pass. The flat index must point to a non-empty,
        non-composite dataset for anything to be passed through. If the input
        is not a composite dataset, then this index is ignored.</Documentation>
        <CompositeTreeDomain mode="leaves"
                             name="tree">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
          <Hints>
            <!-- we don't want to show this property, except for MBs. -->
            <PropertyWidgetDecorator type="InputDataTypeDecorator"
              mode="visibility" name="vtkMultiBlockDataSet" />
          </Hints>
        </CompositeTreeDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetFieldAssociation"
                         default_values="0"
                         name="FieldAssociation"
                         number_of_elements="1">
        <Documentation>Select the attribute data to pass.</Documentation>
        <FieldDataDomain enable_field_data="1"
                         name="enum">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </FieldDataDomain>
      </IntVectorProperty>

      <StringVectorProperty command="SetSeriesVisibility"
                            element_types="2 0"
                            name="SeriesVisibility"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            clean_command="ClearSeriesVisibilities">
        <Documentation>Set the series visibility.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="visibility">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="FieldAssociation" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
        <Hints>
          <!-- when present, the SeriesEditor widget will allow user to
          re-order the series which will affect the rendered plot -->
          <SeriesEditor supports_reordering="1" />
        </Hints>
      </StringVectorProperty>

      <PropertyGroup label="Series Parameters"
                     panel_widget="SeriesEditor" >
        <Property name="SeriesVisibility" function="SeriesVisibility" />
      </PropertyGroup>

      <DoubleVectorProperty command="SetColor"
                            default_values="0 0 0"
                            name="ScatterPlotsColor"
                            number_of_elements="3"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <Documentation>Sets the color.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetHistogramColor"
                            default_values="0 0 0"
                            name="HistogramColor"
                            number_of_elements="3"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <Documentation>Sets the color for the histograms.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetMarkerStyle"
                         default_values="4"
                         name="ScatterPlotMarkerStyle"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <Documentation>Property which sets the marker style for the scatter
        plots.</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0"/>
          <Entry text="Cross" value="1"/>
          <Entry text="Plus" value="2"/>
          <Entry text="Square" value="3"/>
          <Entry text="Circle" value="4"/>
          <Entry text="Diamond" value="5"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetMarkerSize"
                            default_values="3"
                            name="ScatterPlotMarkerSize"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>Property which sets the marker size for the scatter
        plots.</Documentation>
        <DoubleRangeDomain name="range" min="1" max="20" />
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetActivePlotColor"
                            default_values="0 0 0"
                            name="ActivePlotColor"
                            number_of_elements="3"
                            panel_widget="color_selector"
                            panel_visibility="advanced">
        <Documentation>Sets the color for the active plot.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetActivePlotMarkerStyle"
                         default_values="4"
                         name="ActivePlotMarkerStyle"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <Documentation>Property which sets the marker style for the active
        plot.</Documentation>
        <EnumerationDomain name="enum">
          <Entry text="None" value="0"/>
          <Entry text="Cross" value="1"/>
          <Entry text="Plus" value="2"/>
          <Entry text="Square" value="3"/>
          <Entry text="Circle" value="4"/>
          <Entry text="Diamond" value="5"/>
        </EnumerationDomain>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetActivePlotMarkerSize"
                            default_values="5"
                            name="ActivePlotMarkerSize"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>Property which sets the marker size for the active
        plots.</Documentation>
        <DoubleRangeDomain name="range" min="1" max="20" />
      </DoubleVectorProperty>

      <SubProxy command="SetSelectionRepresentation">
        <!--
          SelectionRepresentation proxy is used to convey the selection to view.
          We keep this separate as subproxy so that when the selection is
          modified, we don't have to update the representation as well, we can
          only update the SelectionRepresentation.
        -->
        <RepresentationProxy name="SelectionRepresentation"
               class="vtkChartSelectionRepresentation"
               processes="client|dataserver|renderserver">
          <InputProperty command="SetInputConnection"
                         name="SelectionInput"/>
        </RepresentationProxy>
      </SubProxy>

      <PropertyGroup label="Styling">
        <Property name="ScatterPlotsColor" />
        <Property name="HistogramColor" />
        <Property name="ScatterPlotMarkerStyle" />
        <Property name="ScatterPlotMarkerSize" />
      </PropertyGroup>

      <PropertyGroup label="Styling (Active Plot)">
        <Property name="ActivePlotColor" />
        <Property name="ActivePlotMarkerStyle" />
        <Property name="ActivePlotMarkerSize" />
      </PropertyGroup>
      <!-- End of PlotMatrixRepresentation -->
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              base_proxyname="XYChartRepresentationBase"
                              class="vtkXYChartRepresentation"
                              name="XYChartRepresentation"
                              processes="client|dataserver|renderserver"
                              post_creation="SetChartTypeToLine">
      <Documentation>Representation used by XYChartView.</Documentation>
      <StringVectorProperty command="SetLineStyle"
                            clean_command="ClearLineStyles"
                            element_types="2 0"
                            name="SeriesLineStyle"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series line style.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="value"
                                    default_value="1">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetLineThickness"
                            clean_command="ClearLineThicknesses"
                            element_types="str int"
                            name="SeriesLineThickness"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series line thickness.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="value"
                                    default_value="2">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetMarkerStyle"
                            clean_command="ClearMarkerStyles"
                            element_types="2 0"
                            name="SeriesMarkerStyle"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series marker style.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="value"
                                    default_value="0">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetMarkerSize"
                            clean_command="ClearMarkerSizes"
                            element_types="str double"
                            name="SeriesMarkerSize"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series marker size.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    hide_partial_arrays="0"
                                    default_mode="value"
                                    default_value="4">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>

      <PropertyGroup label="Series Parameters"
                     panel_widget="SeriesEditor"
                     panel_visibility="default" >
        <Property name="SeriesVisibility"
                  function="SeriesVisibility" />
        <Property name="SeriesColor"
                  function="SeriesColor" />
        <Property name="SeriesLineThickness"
                  function="SeriesLineThickness" />
        <Property name="SeriesLineStyle"
                  function="SeriesLineStyle" />
        <Property name="SeriesLabel"
                  function="SeriesLabel" />
        <Property name="SeriesMarkerSize"
                  function="SeriesMarkerSize" />
        <Property name="SeriesMarkerStyle"
                  function="SeriesMarkerStyle" />
        <Property name="SeriesPlotCorner"
                  function="SeriesPlotCorner"/>
        <Property name="LastPresetName"
                  function="LastPresetName"/>
      </PropertyGroup>

      <Hints>
        <InitializationHelper class="vtkSMXYChartRepresentationInitializationHelper" />
      </Hints>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              base_proxyname="XYChartRepresentationBase"
                              class="vtkXYChartRepresentation"
                              name="XYPointChartRepresentation"
                              processes="client|dataserver|renderserver"
                              post_creation="SetChartTypeToPoints">
      <Documentation>Representation used by XYChartView.</Documentation>
      <StringVectorProperty command="SetLineStyle"
                            clean_command="ClearLineStyles"
                            element_types="2 0"
                            name="SeriesLineStyle"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series line style.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    default_mode="value"
                                    default_value="0">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetLineThickness"
                            clean_command="ClearLineThicknesses"
                            element_types="str double"
                            name="SeriesLineThickness"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series line thickness.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    default_mode="value"
                                    default_value="1">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetMarkerStyle"
                            clean_command="ClearMarkerStyles"
                            element_types="2 0"
                            name="SeriesMarkerStyle"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series marker style.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    default_mode="value"
                                    default_value="2">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetMarkerSize"
                            clean_command="ClearMarkerSizes"
                            element_types="str double"
                            name="SeriesMarkerSize"
                            number_of_elements_per_command="2"
                            repeat_command="1">
        <Documentation>Set the series marker size.</Documentation>
        <ChartSeriesSelectionDomain name="array_list"
                                    default_mode="value"
                                    default_value="4">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="FieldDataSelection" name="AttributeType" />
            <Property function="CompositeIndexSelection" name="CompositeDataSetIndex" />
          </RequiredProperties>
        </ChartSeriesSelectionDomain>
      </StringVectorProperty>

      <PropertyGroup label="Series Parameters"
                     panel_widget="SeriesEditor"
                     panel_visibility="default" >
        <Property name="SeriesVisibility"
                  function="SeriesVisibility" />
        <Property name="SeriesColor"
                  function="SeriesColor" />
        <Property name="SeriesLineThickness"
                  function="SeriesLineThickness" />
        <Property name="SeriesLineStyle"
                  function="SeriesLineStyle" />
        <Property name="SeriesLabel"
                  function="SeriesLabel" />
        <Property name="SeriesMarkerStyle"
                  function="SeriesMarkerStyle" />
        <Property name="SeriesMarkerSize"
                  function="SeriesMarkerSize" />
        <Property name="SeriesPlotCorner"
                  function="SeriesPlotCorner"/>
      </PropertyGroup>
      <Hints>
        <InitializationHelper class="vtkSMXYChartRepresentationInitializationHelper" />
      </Hints>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              base_proxyname="XYChartRepresentation"
                              class="vtkQuartileChartRepresentation"
                              name="QuartileChartRepresentation"
                              processes="client|dataserver|renderserver"
                              post_creation="SetChartTypeToArea">
      <Documentation>Representation used by Quartile Chart View.</Documentation>
      <IntVectorProperty name="ShowQuartiles"
                         command="SetQuartileVisibility"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to render the area for the q1/q3 quartiles, if available.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="ShowRanges"
                         command="SetRangeVisibility"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to render the area for the min/max range, if available.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="ShowAverage"
                         command="SetAverageVisibility"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to render the line for the average value, if available.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="ShowMedian"
                         command="SetMedianVisibility"
                         number_of_elements="1"
                         default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to render the line for the median value, if available.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="ShowMinimum"
                         command="SetMinVisibility"
                         number_of_elements="1"
                         default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to render the line for the minimum value, if available.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="ShowMaximum"
                         command="SetMaxVisibility"
                         number_of_elements="1"
                         default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether to render the line for the maximum value, if available.
        </Documentation>
      </IntVectorProperty>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <ChartRepresentationProxy base_proxygroup="representations"
                              base_proxyname="XYChartRepresentationBase"
                              class="vtkXYChartRepresentation"
                              name="XYBarChartRepresentation"
                              processes="client|dataserver|renderserver"
                              post_creation="SetChartTypeToBar">
      <Documentation>Representation used by XYBarChartView.</Documentation>
      <PropertyGroup label="Series Parameters"
                     panel_widget="SeriesEditor"
                     panel_visibility="default" >
        <Property name="SeriesVisibility"
                  function="SeriesVisibility" />
        <Property name="SeriesColor"
                  function="SeriesColor" />
        <Property name="SeriesLabel"
                  function="SeriesLabel" />
        <Property name="SeriesPlotCorner"
                  function="SeriesPlotCorner"/>
      </PropertyGroup>
    </ChartRepresentationProxy>

    <!-- =================================================================== -->
    <SpreadSheetRepresentationProxy class="vtkSpreadSheetRepresentation"
                                    name="SpreadSheetRepresentation"
                                    processes="client|dataserver|renderserver">
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataObject" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>Visibility of the representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>

      <StringVectorProperty name="Assembly"
        command="SetActiveAssemblyForSelectors"
        number_of_elements="1"
        default_values="Hierarchy"
        panel_visibility="multiblock_inspector">
        <DataAssemblyListDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </DataAssemblyListDomain>
        <Documentation>
          Select which assembly is used when specify selectors
          to choose blocks to show for composite datasets.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockVisibilities"
        command="AddSelector"
        clean_command="ClearSelectors"
        repeat_command="1"
        number_of_elements_per_command="1"
        panel_visibility="multiblock_inspector"
        default_values="/">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Documentation>
          For composite datasets, specify selectors to limit the view
          to a chosen subset of blocks.
        </Documentation>
      </StringVectorProperty>

      <PropertyGroup label="Blocks" panel_widget="DataAssemblyEditor"
        panel_visibility="multiblock_inspector">
        <Property name="Assembly" function="ActiveAssembly" />
        <Property name="BlockVisibilities" function="Selectors" />
        <Hints>
          <DataAssemblyPropertyWidget use_inputname_as_header="1" link_active_selection="1"/>
        </Hints>
      </PropertyGroup>

      <InputProperty command="SetInputConnection"
                     is_internal="1"
                     name="InternalInput1"
                     port_index="1">
        <Documentation>Internal property. Please don't touch
        this.</Documentation>
      </InputProperty>
      <!-- end of SpreadSheetRepresentation -->
    </SpreadSheetRepresentationProxy>
    <!-- =================================================================== -->
    <RepresentationProxy class="vtkTextSourceRepresentation"
                         name="TextSourceRepresentation"
                         processes="client|dataserver|renderserver"
                         si_class="vtkSIProxy">
      <Documentation>Representation proxy used to show text.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain composite_data_supported="0"
                        name="input_type">
          <DataType value="vtkTable" />
        </DataTypeDomain>
      </InputProperty>

      <IntVectorProperty command="SetTextPropMode"
                         default_values="0"
                         name="TextPropMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="2D Text Widget" value="0" />
          <Entry text="Flagpole Actor" value="1" />
          <Entry text="Billboard 3D Text" value="2" />
        </EnumerationDomain>
        <Documentation>
          Select how you want the text to be represented in the view.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInteractivity"
                         default_values="1"
                         name="Interactivity"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether user should be able to interactively place the text in the view.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="TextPropMode"
                                   value="0" />

          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="enabled_state"
                                   property="WindowLocation"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <SubProxy command="SetTextWidgetRepresentation">
        <Proxy name="TextWidgetRepresentation"
               proxygroup="representations"
               proxyname="TextWidgetRepresentation"></Proxy>
        <ExposedProperties>
          <!-- properties for Text Position-->
          <PropertyGroup name="TextPosition" label="Text Position" panel_widget="TextLocationEditor">
            <Property name="WindowLocation" />
            <Property name="Position" />
            <Property name="Position2" panel_visibility="never"/>
            <Property name="PositionInfo" />
            <Property name="Position2Info" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="TextPropMode"
                                       value="0" />
            </Hints>
          </PropertyGroup>
          <Property name="TextScaleMode" panel_visibility="never" default_values="0"/>
          <Property name="Resizable" panel_visibility="never"/>

          <!-- properties for Text -->
          <Property name="Orientation" panel_visibility="never"/>
          <PropertyGroup label="Font Properties" panel_widget="FontEditor">
            <Property name="Color" function="Color"/>
            <Property name="Opacity" function="Opacity"/>
            <Property name="FontFamily" function="Family"/>
            <Property name="FontFile" function="File"/>
            <Property name="Bold" function="Bold"/>
            <Property name="Italic" function="Italics" />
            <Property name="Shadow" function="Shadow"/>
            <Property name="FontSize" function="Size"/>
            <Property name="Justification" function="Justification" default_values="1" />
            <Property name="VerticalJustification" function="VerticalJustification"/>
          </PropertyGroup>

          <Property name="ShowBorder" label="Show Background" />
          <PropertyGroup label="Background Properties">
            <Property name="BackgroundColor" default_values="1 1 1 0.2"/>
            <Property name="BorderColor" panel_visibility="advanced"/>
            <Property name="BorderThickness" panel_visibility="advanced"/>
            <Property name="CornerRadius" panel_visibility="advanced"/>
            <Property name="Padding" panel_visibility="advanced" default_values="1" />

            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                    mode="visibility"
                                    property="TextPropMode"
                                    value="0" />

              <PropertyWidgetDecorator type="CompositeDecorator">
                <Expression type="or">
                  <PropertyWidgetDecorator type="GenericDecorator"
                    mode="visibility"
                    property="ShowBorder"
                    value="1" />

                  <PropertyWidgetDecorator type="GenericDecorator"
                    mode="visibility"
                    property="ShowBorder"
                    value="2" />
                </Expression>
              </PropertyWidgetDecorator>
            </Hints>

          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <SubProxy command="SetFlagpoleLabel">
        <Proxy name="FlagpoleLabel"
               proxygroup="annotations"
               proxyname="FlagpoleLabel"></Proxy>
         <ShareProperties subproxy="TextWidgetRepresentation">
           <Exception name="Orientation" />
           <Exception name="WindowLocation" />
           <Exception name="Position" />
           <Exception name="Position2" />
           <Exception name="PositionInfo" />
           <Exception name="Position2Info" />
           <Exception name="TextScaleMode" />
           <Exception name="Resizable" />
         </ShareProperties>
        <ExposedProperties>
          <!-- properties for Text -->
          <PropertyGroup label="Flagpole Properties">
            <Property name="BasePosition" />
            <Property name="TopPosition" />
            <Property name="FlagSize" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="TextPropMode"
                                       value="1" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <SubProxy command="SetBillboardTextActor">
        <Proxy name="BillboardTextActor3D"
               proxygroup="annotations"
               proxyname="BillboardTextActor3D"></Proxy>
         <ShareProperties subproxy="TextWidgetRepresentation">
           <Exception name="Orientation" />
           <Exception name="WindowLocation" />
           <Exception name="Position" />
           <Exception name="Position2" />
           <Exception name="PositionInfo" />
           <Exception name="Position2Info" />
           <Exception name="TextScaleMode" />
           <Exception name="Resizable" />
         </ShareProperties>
        <ExposedProperties>
          <!-- properties for Text -->
          <PropertyGroup label="Billboard Position" panel_widget="InteractiveHandle">
            <Property function="WorldPosition" name="BillboardPosition" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="TextPropMode"
                                       value="2" />
            </Hints>
          </PropertyGroup>
          <PropertyGroup label="Billboard Properties">
            <Property name="DisplayOffset" />
            <Hints>
              <PropertyWidgetDecorator type="GenericDecorator"
                                       mode="visibility"
                                       property="TextPropMode"
                                       value="2" />
            </Hints>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>
      <!-- End of TextSourceRepresentation -->
    </RepresentationProxy>
    <!-- =================================================================== -->
    <RepresentationProxy class="vtkRulerSourceRepresentation"
                         name="RulerSourceRepresentation"
                         processes="client|dataserver|renderserver"
                         si_class="vtkSIProxy">
      <Documentation>Representation proxy used to show a ruler.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain composite_data_supported="0"
                        name="input_type">
          <DataType value="vtkPolyData" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="advanced">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <StringVectorProperty command="SetLabelFormat"
                            default_values="%6.3g"
                            name="LabelFormat"
                            number_of_elements="1">
        <Documentation>
          This should be a printf-style format string. You can do things
          like limit the number of significant digits, add prefixes/suffixes,
          basically anything that printf can do. An empty string or a string
          without the % symbol results in no label.
        </Documentation>
      </StringVectorProperty>

      <DoubleVectorProperty name="Scale"
        command="SetScale"
        number_of_elements="1"
        default_values="1.">
        <Documentation>
          Scale factor applied to the global coordinate distance. Used to convert between the units used in the data set global coordinate distance to desired units. Example: convert from inches to centimeters by setting this value to 0.3937.
        </Documentation>
        <DoubleRangeDomain name="range" min="0" />
      </DoubleVectorProperty>

      <IntVectorProperty name="RulerMode"
        command="SetRulerMode"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Check to enable "ruler mode", where ticks are placed at increments
          defined by the Graduation property.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <IntVectorProperty name="NumberOfTicks"
        command="SetNumberOfRulerTicks"
        number_of_elements="1"
        default_values="5">
        <Documentation>
          Specify the number of major ruler ticks. Note: the number of ticks is the number between the two handle endpoints.
        </Documentation>
        <IntRangeDomain name="range" min="1" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="RulerMode"
                                   value="0" />
        </Hints>
      </IntVectorProperty>

      <DoubleVectorProperty name="Graduation"
        command="SetRulerDistance"
        number_of_elements="1"
        default_values="1.">
        <Documentation>
          Specify the graduation, or the spacing of the ruler tick marks. Spacing is defined in the scaled global coordinate distance (see the Scale property). For example, if data is defined in terms of inches and the Scale property is set to display distances in centimeters, this property defines the spacing of tick marks in terms of centimeters.
        </Documentation>
        <DoubleRangeDomain name="range" min="0" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="RulerMode"
                                   value="1" />
        </Hints>
      </DoubleVectorProperty>

      <PropertyGroup label="Label Properties">
        <Property name="RulerMode" />
        <Property name="LabelFormat" />
        <Property name="NumberOfTicks" />
        <Property name="Graduation" />
        <Property name="Scale" />
      </PropertyGroup>

      <DoubleVectorProperty command="SetAxisColor"
                            default_values="0 1 0"
                            name="AxisColor"
                            number_of_elements="3"
                            panel_widget="color_selector_with_palette">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>Set the color of the ruler.</Documentation>
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetAxisLineWidth"
                            default_values="2"
                            name="AxisLineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>Set the line width of the ruler in screen units.</Documentation>
      </DoubleVectorProperty>

      <PropertyGroup label="Axis Display Properties">
        <Property name="AxisColor" />
        <Property name="AxisLineWidth" />
      </PropertyGroup>

      <SubProxy command="SetTextProperty">
        <Proxy name="TextProperty"
               proxygroup="properties"
               proxyname="TextProperty"></Proxy>
        <ExposedProperties>
          <PropertyGroup label="Font Properties" panel_widget="FontEditor">
            <Property name="Color" function="Color"/>
            <Property name="Opacity" function="Opacity"/>
            <Property name="FontFamily" function="Family"/>
            <Property name="FontFile" function="File"/>
            <Property name="Bold" function="Bold"/>
            <Property name="Italic" function="Italics" />
            <Property name="Shadow" function="Shadow"/>
            <Property name="FontSize" function="Size"/>
            <Property name="Justification" function="Justification"/>
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <!-- End of RulerSourceRepresentation -->
    </RepresentationProxy>
    <!-- =================================================================== -->
    <RepresentationProxy class="vtkProgressBarSourceRepresentation"
                         name="ProgressBarSourceRepresentation"
                         processes="client|dataserver|renderserver"
                         si_class="vtkSIProxy">
      <Documentation>Representation proxy used to show ProgressBar.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <Documentation>Data input for the representation.</Documentation>
        <DataTypeDomain composite_data_supported="0"
                        name="input_type">
          <DataType value="vtkTable" />
        </DataTypeDomain>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInteractivity"
                         default_values="1"
                         name="Interactivity"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether user should be able to interactively place the progressBar in the view.
        </Documentation>
      </IntVectorProperty>
      <SubProxy command="SetProgressBarWidgetRepresentation">
        <Proxy name="ProgressBarWidgetRepresentation"
               proxygroup="representations"
               proxyname="ProgressBarWidgetRepresentation"></Proxy>
        <ExposedProperties>
          <Property name="Position" />
          <Property name="Position2" panel_visibility="never"/>
          <Property name="PositionInfo" />
          <Property name="Position2Info" />
          <Property name="ProgressBarColor"/>
          <Property name="SecondaryProgressBarColor"/>
          <Property name="DrawBackground"/>
        </ExposedProperties>
      </SubProxy>
      <!-- End of ProgressBarSourceRepresentation -->
    </RepresentationProxy>
    <!-- =================================================================== -->
    <RepresentationProxy class="vtkLogoSourceRepresentation"
                         name="LogoSourceRepresentation"
                         processes="client|dataserver|renderserver"
                         si_class="vtkSIProxy">
      <Documentation>Representation proxy used to show a Logo.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData" />
        </DataTypeDomain>
        <Documentation>ImageData input for the representation.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetInteractivity"
                         default_values="1"
                         name="Interactivity"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Set whether user should be able to interactively place the Logo in the view.
        </Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <SubProxy command="SetLogoWidgetRepresentation">
        <Proxy name="LogoWidgetRepresentation"
               proxygroup="representations"
               proxyname="LogoWidgetRepresentation"></Proxy>
        <ExposedProperties>
          <Property name="Position" />
          <Property name="Position2" panel_visibility="never"/>
          <Property name="PositionInfo" />
          <Property name="Position2Info" />
        </ExposedProperties>
      </SubProxy>
      <!-- End of LogoSourceRepresentation -->
    </RepresentationProxy>
    <!-- =================================================================== -->
    <Proxy class="vtkPVFrustumActor"
           name="FrustumWidget"
           processes="client|dataserver|renderserver">
      <Documentation>Representation for a frustum</Documentation>
      <DoubleVectorProperty argument_is_array="1"
                            command="SetFrustum"
                            default_values="0 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1"
                            name="Frustum"
                            number_of_elements="24">
        <Documentation>Specify the corners of the outline when in Oriented
        mode, the values are supplied as 8*3 double values.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetColor"
                            default_values="0.5 0.5 0.5"
                            name="Color"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="TextAnnotationColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="3.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <!-- End of FrustumWidget -->
    </Proxy>

    <!-- ================================================================== -->
    <RepresentationProxy name="GeometrySliceRepresentation"
                base_proxygroup="internal_representations"
                base_proxyname="SurfaceRepresentationBase"
                class="vtkGeometrySliceRepresentation"
                processes="client|renderserver|dataserver">
      <Documentation>
        GeometrySliceRepresentation add support to show multiple slices in the view.
        This is used by CompositeMultiSliceRepresentation.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>

      <IntVectorProperty name="ShowOutline"
        command="SetShowOutline"
        number_of_elements="1"
        default_values="0">
        <Documentation>
          Check to show data outline when showing "Slices".
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
    </RepresentationProxy>

    <!-- ================================================================ -->
    <PVRepresentationProxy name="CompositeMultiSliceRepresentation"
                           base_proxygroup="representations"
                           base_proxyname="GeometryRepresentation"
                           class="vtkPVCompositeRepresentation"
                           processes="client|renderserver|dataserver" >
       <RepresentationType  subproxy="GeometrySliceRepresentation"
         text="Slices" subtype="Surface"/>
       <SubProxy>
         <Proxy name="GeometrySliceRepresentation"
           proxygroup="representations"
           proxyname="GeometrySliceRepresentation">
         </Proxy>
         <ShareProperties subproxy="SurfaceRepresentation">
           <Exception name="Input" />
           <Exception name="Visibility" />
         </ShareProperties>
         <ExposedProperties>
           <PropertyGroup label="Slices Parameters">
             <Property name="ShowOutline"
                       panel_visibility="advanced"
                       panel_visibility_default_for_representation="slices" />
           </PropertyGroup>
         </ExposedProperties>
       </SubProxy>
    </PVRepresentationProxy>

    <!-- ================================================================ -->
    <PVRepresentationProxy name="CompositeOrthographicSliceRepresentation"
                           base_proxygroup="representations"
                           base_proxyname="CompositeMultiSliceRepresentation"
                           class="vtkPVCompositeOrthographicSliceRepresentation"
                           processes="client|renderserver|dataserver">
      <SubProxy command="SetSliceRepresentation0">
        <Proxy name="GeometrySliceRepresentationX"
               proxygroup="representations"
               proxyname="GeometrySliceRepresentation">
        </Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy command="SetSliceRepresentation1">
        <Proxy name="GeometrySliceRepresentationY"
               proxygroup="representations"
               proxyname="GeometrySliceRepresentation">
        </Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
      <SubProxy command="SetSliceRepresentation2">
        <Proxy name="GeometrySliceRepresentationZ"
               proxygroup="representations"
               proxyname="GeometrySliceRepresentation">
        </Proxy>
        <ShareProperties subproxy="SurfaceRepresentation">
          <Exception name="Input" />
          <Exception name="Visibility" />
        </ShareProperties>
      </SubProxy>
    </PVRepresentationProxy>
    <!-- ================================================================== -->
    <RepresentationProxy class="vtkPolarAxesRepresentation"
                         name="PolarAxesRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>PolarAxesRepresentation is a representation of Polar
      axes on any kind of dataset.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <Hints>
        <ProxyList>
          <Link name="Input" with_property="Input"/>
          <ShareProperties parent_subproxy="SurfaceRepresentation">
            <Exception name="Input" />
            <Exception name="Visibility" />
          </ShareProperties>
        </ProxyList>
      </Hints>
      <IntVectorProperty command="SetVisibility"
                         default_values="0"
                         name="Visibility"
                         number_of_elements="1"
                         animateable="0">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility of the representation.</Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            label="Translation"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the polar axes origin position.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the polar axes bounds transform scale.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the polar axes bounds transform orientation.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="Transform">
        <Property name="Position"/>
        <Property name="Scale"/>
        <Property name="Orientation"/>
      </PropertyGroup>

      <DoubleVectorProperty command="GetDataBounds"
                            default_values="0 1 0 1 0 1"
                            information_only="1"
                            name="DataBounds"
                            number_of_elements="6">
        <SimpleDoubleInformationHelper />
        <Documentation>Get the polar axes transformed bounds.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetEnableCustomBounds"
                         default_values="0 0 0"
                         name="EnableCustomBounds"
                         panel_visibility="advanced"
                         number_of_elements="3">
        <Documentation>Activate the use of polar axes custom bounds.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetCustomBounds"
                            default_values="0 1 0 1 0 1"
                            name="CustomBounds"
                            panel_visibility="advanced"
                            number_of_elements="6">
        <Documentation>Set the polar axes custom bounds.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetEnableCustomRange"
                         default_values="0"
                         name="EnableCustomRange"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Activate the use of polar axes custom range.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetCustomRange"
                            default_values="0 1"
                            name="CustomRange"
                            number_of_elements="2">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="EnableCustomRange"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the polar axes custom range.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="Custom Bounds and Range">
        <Property name="EnableCustomBounds"/>
        <Property name="CustomBounds"/>
        <Property name="EnableCustomRange"/>
        <Property name="CustomRange"/>
      </PropertyGroup>

      <IntVectorProperty command="SetPolarAxisVisibility"
                         default_values="1"
                         name="PolarAxisVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility of polar axis.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRadialAxesVisibility"
                         default_values="1"
                         name="RadialAxesVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set all radial axes visibility.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetDrawRadialGridlines"
                         default_values="1"
                         name="DrawRadialGridlines"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="RadialAxesVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the visibility of radial grid lines.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetPolarArcsVisibility"
                         default_values="1"
                         name="PolarArcsVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set all polar arcs visibility.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetDrawPolarArcsGridlines"
                         default_values="1"
                         name="DrawPolarArcsGridlines"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarArcsVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the visibility of polar arcs grid lines.</Documentation>
      </IntVectorProperty>
      <PropertyGroup label="Visibility Control">
        <Property name="PolarAxisVisibility" />
        <Property name="RadialAxesVisibility" />
        <Property name="DrawRadialGridlines" />
        <Property name="PolarArcsVisibility" />
        <Property name="DrawPolarArcsGridlines" />
      </PropertyGroup>

      <IntVectorProperty command="SetNumberOfRadialAxes"
                         default_values="0"
                         name="NumberOfRadialAxes"
                         number_of_elements="1">
        <IntRangeDomain min="0"
                        max="100"
                        name="range" />
        <Documentation>Set the number of radial axes,
        If value is 0 (the default), the number of radial axes is automatically calculated.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetAutoSubdividePolarAxis"
                         default_values="1"
                         name="AutoSubdividePolarAxis"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Automatically compute the number of
        polar axis ticks and tick size. If true, will override NumberOfPolarAxisTicks,
        PolarAxisMajorTickSize, LastRadialAxisMajorTickSize, ArcMajorTickSize properties.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetNumberOfPolarAxisTicks"
                         default_values="0"
                         name="NumberOfPolarAxis"
                         number_of_elements="1">
        <IntRangeDomain min="0"
                        max="100"
                        name="range" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="AutoSubdividePolarAxis"
                      function="boolean_invert" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the number of polar axis and of course polar axis ticks,
        If value is 0 (the default), the number of polar axis tick
        is automatically calculated.
        ignored if AutoSubdividePolarAxis is true.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="GetDeltaRangeMajor"
                         name="DeltaRangeMajor"
                         number_of_elements="1"
                         default_values="1"
                         information_only="1"
                         panel_visibility="never">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="GetDeltaRangeMinor"
                         name="DeltaRangeMinor"
                         number_of_elements="1"
                         default_values="1"
                         information_only="1"
                         panel_visibility="never">
        <SimpleDoubleInformationHelper/>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetMinimumRadius"
                            default_values="0"
                            name="MinimumRadius"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           max="100"
                           name="range" />
        <Documentation>Set the minimum radius, Maximum radius is automatically computed.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetMinimumAngle"
                            default_values="0"
                            name="MinimumAngle"
                            number_of_elements="1">
        <DoubleRangeDomain min="-180"
                           max="180"
                           name="range" />
        <Documentation>Set the minimum angle.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetMaximumAngle"
                            default_values="90"
                            name="MaximumAngle"
                            number_of_elements="1">
        <DoubleRangeDomain min="-180"
                           max="180"
                           name="range" />
        <Documentation>Set the maximum angle.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRadialAxesOriginToPolarAxis"
                         default_values="1"
                         name="RadialAxesOriginToPolarAxis"
                         panel_visibility="advanced"
                         number_of_elements="1">
       <BooleanDomain name="bool" />
        <Documentation>If On, the radial axes are drawn from the angle of the polar Axis
        (i.e. MinimumAngle) and continue counterclockwise with the step DeltaAngleRadialAxes.
        if Off, the start angle is 0.0.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetRatio"
                            default_values="1"
                            name="Ratio"
                            number_of_elements="1">
        <DoubleRangeDomain max="100.0"
                           min="0.001"
                           name="range" />
        <Documentation>Set the polar ellipse ratio.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="Aspect Control">
        <Property name="NumberOfRadialAxes" />
        <Property name="AutoSubdividePolarAxis" />
        <Property name="NumberOfPolarAxis" />
        <Property name="MinimumRadius" />
        <Property name="MinimumAngle" />
        <Property name="MaximumAngle" />
        <Property name="RadialAxesOriginToPolarAxis" />
        <Property name="Ratio" />
      </PropertyGroup>

      <DoubleVectorProperty command="SetPolarAxisColor"
                            default_values="1 1 1"
                            name="PolarAxisColor"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>Set the Polar Axis color.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPolarArcsColor"
                            default_values="1 1 1"
                            name="PolarArcsColor"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>Set the Polar Arcs color.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLastRadialAxisColor"
                            default_values="1 1 1"
                            name="LastRadialAxisColor"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>Set the Last Radial Axis color.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSecondaryPolarArcsColor"
                            default_values="1 1 1"
                            name="SecondaryPolarArcsColor"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>Set the Secondary Polar Arcs color.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSecondaryRadialAxesColor"
                            default_values="1 1 1"
                            name="SecondaryRadialAxesColor"
                            panel_widget="color_selector"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Documentation>Set the Secondary Radial Axes color.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="Colors">
        <Property name="PolarAxisColor"/>
        <Property name="PolarArcsColor"/>
        <Property name="LastRadialAxisColor"/>
        <Property name="SecondaryPolarArcsColor"/>
        <Property name="SecondaryRadialAxesColor"/>
      </PropertyGroup>

      <IntVectorProperty command="SetPolarTitleVisibility"
                         default_values="1"
                         name="PolarAxisTitleVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility of polar axis title.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetPolarAxisTitle"
                            name="PolarAxisTitle"
                            default_values="Radial Distance"
                            number_of_elements="1">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarAxisTitleVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the polar axis title.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetPolarAxisTitleLocation"
                         default_values="0"
                         name="PolarAxisTitleLocation"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Bottom"
                 value="0" />
          <Entry text="Extern"
                 value="1" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarAxisTitleVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the location of polar axis title.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetPolarLabelVisibility"
                         default_values="1"
                         name="PolarLabelVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the visibility of polar axis label.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetPolarLabelFormat"
                            name="PolarLabelFormat"
                            default_values="%-#6.3g"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarLabelVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the polar axis label format.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetExponentLocation"
                         default_values="2"
                         name="PolarLabelExponentLocation"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Bottom"
                 value="0" />
          <Entry text="Extern"
                 value="1" />
          <Entry text="Labels"
                 value="2" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarLabelVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the location of exponent.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRadialTitleVisibility"
                         default_values="1"
                         name="RadialLabelVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set radial label visibility.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetRadialAngleFormat"
                            default_values="%-#3.1f"
                            name="RadialLabelFormat"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="RadialLabelVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the polar radial label format.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetRadialAxisTitleLocation"
                         default_values="0"
                         name="RadialLabelLocation"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Bottom"
                 value="0" />
          <Entry text="Extern"
                 value="1" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="RadialLabelVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the location of radial labels.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRadialUnits"
                         default_values="1"
                         name="RadialUnitsVisibility"
                         panel_visibility="advanced"
                         number_of_elements="1">
       <BooleanDomain name="bool" />
      <Documentation>Show radial units in labels (degrees).</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetScreenSize"
                            default_values="10"
                            name="ScreenSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="100"/>
        <Documentation>Set the screen size to use, which impact label and title
        relative location to the axes.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="Title and Labels Control">
        <Property name="PolarAxisTitle" />
        <Property name="PolarAxisTitleVisibility" />
        <Property name="PolarAxisTitleLocation" />
        <Property name="PolarLabelVisibility" />
        <Property name="PolarLabelFormat" />
        <Property name="PolarLabelExponentLocation" />
        <Property name="RadialLabelVisibility" />
        <Property name="RadialLabelFormat" />
        <Property name="RadialLabelLocation" />
        <Property name="RadialUnitsVisibility" />
        <Property name="ScreenSize" />
      </PropertyGroup>

      <SubProxy command="SetPolarAxisTitleTextProperty">
        <Proxy name="PolarAxisTitleProperty" proxygroup="properties" proxyname="TextProperty" />
        <ExposedProperties>
          <Property exposed_name="PolarAxisTitleColor" name="Color" />
          <Property exposed_name="PolarAxisTitleOpacity" name="Opacity" />
          <Property exposed_name="PolarAxisTitleFontFamily" name="FontFamily" />
          <Property exposed_name="PolarAxisTitleFontFile" name="FontFile" />
          <Property exposed_name="PolarAxisTitleBold" name="Bold" />
          <Property exposed_name="PolarAxisTitleItalic" name="Italic" />
          <Property exposed_name="PolarAxisTitleShadow" name="Shadow" />
          <Property exposed_name="PolarAxisTitleFontSize" name="FontSize" default_values="12"/>
        </ExposedProperties>
      </SubProxy>
      <PropertyGroup label="Polar Axis Title Font Properties" panel_widget="FontEditor">
        <Property name="PolarAxisTitleColor" function="Color"/>
        <Property name="PolarAxisTitleFontFamily" function="Family"/>
        <Property name="PolarAxisTitleFontFile" function="File"/>
        <Property name="PolarAxisTitleBold" function="Bold" />
        <Property name="PolarAxisTitleItalic" function="Italics"/>
        <Property name="PolarAxisTitleFontSize" function="Size" />
        <Property name="PolarAxisTitleShadow" function="Shadow" />
        <Property name="PolarAxisTitleOpacity" function="Opacity" />
      </PropertyGroup>

      <SubProxy command="SetPolarAxisLabelTextProperty">
        <Proxy name="PolarAxisLabelProperty" proxygroup="properties" proxyname="TextProperty" />
        <ExposedProperties>
          <Property exposed_name="PolarAxisLabelColor" name="Color" />
          <Property exposed_name="PolarAxisLabelOpacity" name="Opacity" />
          <Property exposed_name="PolarAxisLabelFontFamily" name="FontFamily" />
          <Property exposed_name="PolarAxisLabelFontFile" name="FontFile" />
          <Property exposed_name="PolarAxisLabelBold" name="Bold" />
          <Property exposed_name="PolarAxisLabelItalic" name="Italic" />
          <Property exposed_name="PolarAxisLabelShadow" name="Shadow" />
          <Property exposed_name="PolarAxisLabelFontSize" name="FontSize" default_values="12"/>
        </ExposedProperties>
      </SubProxy>
      <PropertyGroup label="Polar Axis Label Font Properties" panel_widget="FontEditor">
        <Property name="PolarAxisLabelColor" function="Color"/>
        <Property name="PolarAxisLabelFontFamily" function="Family"/>
        <Property name="PolarAxisLabelFontFile" function="File"/>
        <Property name="PolarAxisLabelBold" function="Bold" />
        <Property name="PolarAxisLabelItalic" function="Italics"/>
        <Property name="PolarAxisLabelFontSize" function="Size" />
        <Property name="PolarAxisLabelShadow" function="Shadow" />
        <Property name="PolarAxisLabelOpacity" function="Opacity" />
      </PropertyGroup>

      <SubProxy command="SetLastRadialAxisTextProperty">
        <Proxy name="LastRadialAxisTextProperty" proxygroup="properties" proxyname="TextProperty" />
        <ExposedProperties>
          <Property exposed_name="LastRadialAxisTextColor" name="Color" />
          <Property exposed_name="LastRadialAxisTextOpacity" name="Opacity" />
          <Property exposed_name="LastRadialAxisTextFontFamily" name="FontFamily" />
          <Property exposed_name="LastRadialAxisTextFontFile" name="FontFile" />
          <Property exposed_name="LastRadialAxisTextBold" name="Bold" />
          <Property exposed_name="LastRadialAxisTextItalic" name="Italic" />
          <Property exposed_name="LastRadialAxisTextShadow" name="Shadow" />
          <Property exposed_name="LastRadialAxisTextFontSize" name="FontSize" default_values="12"/>
        </ExposedProperties>
      </SubProxy>
      <PropertyGroup label="Last Radial Axis Text Font Properties" panel_widget="FontEditor">
        <Property name="LastRadialAxisTextColor" function="Color"/>
        <Property name="LastRadialAxisTextFontFamily" function="Family"/>
        <Property name="LastRadialAxisTextFontFile" function="File"/>
        <Property name="LastRadialAxisTextBold" function="Bold" />
        <Property name="LastRadialAxisTextItalic" function="Italics"/>
        <Property name="LastRadialAxisTextFontSize" function="Size" />
        <Property name="LastRadialAxisTextShadow" function="Shadow" />
        <Property name="LastRadialAxisTextOpacity" function="Opacity" />
      </PropertyGroup>

      <SubProxy command="SetSecondaryRadialAxesTextProperty">
        <Proxy name="SecondaryRadialAxesTextProperty" proxygroup="properties" proxyname="TextProperty" />
        <ExposedProperties>
          <Property exposed_name="SecondaryRadialAxesTextColor" name="Color" />
          <Property exposed_name="SecondaryRadialAxesTextOpacity" name="Opacity" />
          <Property exposed_name="SecondaryRadialAxesTextFontFamily" name="FontFamily" />
          <Property exposed_name="SecondaryRadialAxesTextFontFile" name="FontFile" />
          <Property exposed_name="SecondaryRadialAxesTextBold" name="Bold" />
          <Property exposed_name="SecondaryRadialAxesTextItalic" name="Italic" />
          <Property exposed_name="SecondaryRadialAxesTextShadow" name="Shadow" />
          <Property exposed_name="SecondaryRadialAxesTextFontSize" name="FontSize" default_values="12"/>
        </ExposedProperties>
      </SubProxy>
      <PropertyGroup label="Secondary Radial Axes Text Font Properties" panel_widget="FontEditor">
        <Property name="SecondaryRadialAxesTextColor" function="Color"/>
        <Property name="SecondaryRadialAxesTextFontFamily" function="Family"/>
        <Property name="SecondaryRadialAxesTextFontFile" function="File"/>
        <Property name="SecondaryRadialAxesTextBold" function="Bold" />
        <Property name="SecondaryRadialAxesTextItalic" function="Italics"/>
        <Property name="SecondaryRadialAxesTextFontSize" function="Size" />
        <Property name="SecondaryRadialAxesTextShadow" function="Shadow" />
        <Property name="SecondaryRadialAxesTextOpacity" function="Opacity" />
      </PropertyGroup>

      <IntVectorProperty command="SetEnableDistanceLOD"
                         default_values="1"
                         name="EnableDistanceLOD"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the use of LOD based on distance.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetDistanceLODThreshold"
                            default_values="0.7"
                            name="DistanceLODThreshold"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="100"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="EnableDistanceLOD"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the LOD distance threshold to use.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetEnableViewAngleLOD"
                         default_values="1"
                         name="EnableViewAngleLOD"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the use of LOD based on the View Angle.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetViewAngleLODThreshold"
                            default_values="0.7"
                            name="ViewAngleLODThreshold"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="360"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="EnableViewAngleLOD"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the LOD View Angle threshold to use.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSmallestVisiblePolarAngle"
                            default_values="0.5"
                            name="SmallestVisiblePolarAngle"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain max="2"
                           min="0"
                           name="range" />
        <Documentation>Set the smallest radial angle distinguishable from polar axis.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="LOD and Details control">
        <Property name="EnableDistanceLOD" />
        <Property name="DistanceLODThreshold" />
        <Property name="EnableViewAngleLOD" />
        <Property name="ViewAngleLODThreshold" />
        <Property name="SmallestVisiblePolarAngle" />
      </PropertyGroup>

      <IntVectorProperty command="SetPolarTickVisibility"
                         default_values="1"
                         name="PolarTicksVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set all ticks visibility.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetArcTicksOriginToPolarAxis"
                         default_values="1"
                         panel_visibility="advanced"
                         name="ArcTicksOriginToPolarAxis"
                         number_of_elements="1">
       <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>If On, the ticks are drawn from the angle of the polar Axis
        (MinimumAngle) and continue counterclockwise with the step Delta Angle Major/Minor.
        If Off, the start angle is 0.0</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetTickLocation"
                         default_values="2"
                         name="TickLocation"
                         panel_visibility="advanced"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Inside"
                 value="0" />
          <Entry text="Outside"
                 value="1" />
          <Entry text="Both"
                 value="2" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the location of ticks.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetAxisTickVisibility"
                         default_values="1"
                         name="AxisTickVisibility"
                         number_of_elements="1">
       <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set polar axis and last radial axis tick visibility.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetAxisMinorTickVisibility"
                         default_values="0"
                         name="AxisMinorTickVisibility"
                         number_of_elements="1">
       <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set polar axis and last radial axis minor tick visibility.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetArcTickVisibility"
                         default_values="1"
                         name="ArcTickVisibility"
                         number_of_elements="1">
       <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set polar arc tick visibility.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetArcMinorTickVisibility"
                         default_values="0"
                         name="ArcMinorTickVisibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set polar arc minor tick visibility.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetDeltaAngleMajor"
                            default_values="10"
                            name="DeltaAngleMajor"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="1"
                           max="359"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the delta between major ticks on last arc.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDeltaAngleMinor"
                            default_values="5"
                            name="DeltaAngleMinor"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="1"
                           max="359"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the delta between minor and major ticks on last arc.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPolarAxisMajorTickSize"
                            default_values="0"
                            name="PolarAxisMajorTickSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the polar axis major tick size,
        If value is 0 (the default), tick size is automatically calculated.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPolarAxisTickRatioSize"
                            default_values="0.3"
                            name="PolarAxisTickRatioSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
      <Documentation>Set the polar axis size ratio between major and minor ticks.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPolarAxisMajorTickThickness"
                            default_values="1.0"
                            name="PolarAxisMajorTickThickness"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="100"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the thickness of polar axis major ticks.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPolarAxisTickRatioThickness"
                            default_values="0.5"
                            name="PolarAxisTickRatioThickness"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the thickness ratio between major and minor ticks of polar axis.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLastRadialAxisMajorTickSize"
                            default_values="0"
                            name="LastRadialAxisMajorTickSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the last radial axis major tick size,
        If value is 0 (the default), tick size is automatically calculated.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLastAxisTickRatioSize"
                            default_values="0.3"
                            name="LastRadialAxisTickRatioSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the last radial axis size ratio between major and minor ticks.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLastRadialAxisMajorTickThickness"
                            default_values="1.0"
                            name="LastRadialAxisMajorTickThickness"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="100"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the thickness of last radial axis major ticks.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLastAxisTickRatioThickness"
                            default_values="0.5"
                            name="LastRadialAxisTickRatioThickness"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the thickness ratio between major and minor ticks of last radial axis.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetArcMajorTickSize"
                            default_values="0"
                            name="ArcMajorTickSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the arc major tick size,
        If value is 0 (the default), tick size is automatically calculated.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetArcTickRatioSize"
                            default_values="0.3"
                            name="ArcTickRatioSize"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the arc size ratio between major and minor ticks.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetArcMajorTickThickness"
                            default_values="1.0"
                            name="ArcMajorTickThickness"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="100"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the thickness of arc major ticks.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetArcTickRatioThickness"
                            default_values="0.5"
                            name="ArcTickRatioThickness"
                            panel_visibility="advanced"
                            number_of_elements="1">
        <DoubleRangeDomain name="range"
                           min="0"
                           max="1"/>
        <Hints>
          <PropertyWidgetDecorator type="ShowWidgetDecorator">
            <Property name="PolarTicksVisibility"
                      function="boolean" />
          </PropertyWidgetDecorator>
        </Hints>
        <Documentation>Set the thickness ratio between major and minor ticks of arc.</Documentation>
      </DoubleVectorProperty>
      <PropertyGroup label="Ticks Control">
        <Property name="PolarTicksVisibility" />
        <Property name="ArcTicksOriginToPolarAxis" />
        <Property name="TickLocation" />
        <Property name="AxisTickVisibility" />
        <Property name="AxisMinorTickVisibility" />
        <Property name="ArcTickVisibility" />
        <Property name="ArcMinorTickVisibility" />
        <Property name="DeltaAngleMajor" />
        <Property name="DeltaAngleMinor" />
        <Property name="PolarAxisMajorTickSize" />
        <Property name="PolarAxisTickRatioSize" />
        <Property name="PolarAxisMajorTickThickness" />
        <Property name="PolarAxisTickRatioThickness" />
        <Property name="LastRadialAxisMajorTickSize" />
        <Property name="LastRadialAxisTickRatioSize" />
        <Property name="LastRadialAxisMajorTickThickness" />
        <Property name="LastRadialAxisTickRatioThickness" />
        <Property name="ArcMajorTickSize" />
        <Property name="ArcTickRatioSize" />
        <Property name="ArcMajorTickThickness" />
        <Property name="ArcTickRatioThickness" />
      </PropertyGroup>

      <IntVectorProperty command="SetUse2DMode"
                         default_values="0"
                         name="Use2DMode"
                         label="Use 2D Mode"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the use of 2D Mode for all axes.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetLog"
                         default_values="0"
                         name="UseLogAxis"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Set the use of Log axis.</Documentation>
      </IntVectorProperty>

      <PropertyGroup label="Miscellaneous">
        <Property name="Use2DMode" />
        <Property name="UseLogAxis" />
      </PropertyGroup>
      <!-- End of PolarAxesRepresentation -->
    </RepresentationProxy>
    <!-- End of RepresentationProxy -->
  </ProxyGroup>

  <ProxyGroup name="views">
    <!-- ================================================================== -->
    <ComparativeViewProxy base_proxygroup="internal_views"
                          base_proxyname="ComparativeViewBase"
                          class="vtkPVComparativeView"
                          name="ComparativeRenderView"
                          label="Render View (Comparative)">
      <Documentation>The is comparative view comprising of individual
      "RenderView" proxies for each panel in the comparative view
      grid.</Documentation>
      <SubProxy>
        <Proxy name="RootView"
               proxygroup="views"
               proxyname="RenderView"></Proxy>
        <ExposedProperties>
          <Property name="HiddenRepresentations" />
          <Property name="HiddenProps" />
          <Property name="LODThreshold" />
          <Property name="LODResolution" />
          <Property name="AxesGrid" />
          <Property name="PPI" />

          <Property name="CenterAxesVisibility" />
          <PropertyGroup label="Orientation Axes">
            <Property name="OrientationAxesVisibility" />
            <Property name="OrientationAxesInteractivity"
                      panel_visibility="advanced"/>
            <Property name="OrientationAxesLabelColor"
                      panel_visibility="advanced"/>
            <Property name="OrientationAxesOutlineColor"
                      panel_visibility="advanced"/>
          </PropertyGroup>
          <PropertyGroup label="Lights" panel_visibility="never">
            <!-- Light Kit -->
            <Property name="UseLight"/>
            <!-- Key Light -->
            <Property name="KeyLightWarmth"/>
            <Property name="KeyLightIntensity"/>
            <Property name="KeyLightElevation"/>
            <Property name="KeyLightAzimuth"/>
            <!-- Fill Light -->
            <Property name="FillLightWarmth"/>
            <Property name="FillLightK:F Ratio"/>
            <Property name="FillLightElevation"/>
            <Property name="FillLightAzimuth"/>
            <!-- Back Light -->
            <Property name="BackLightWarmth"/>
            <Property name="BackLightK:B Ratio"/>
            <Property name="BackLightElevation"/>
            <Property name="BackLightAzimuth"/>
            <!-- Head Light -->
            <Property name="HeadLightWarmth"/>
            <Property name="HeadLightK:H Ratio"/>
            <Property name="MaintainLuminance"/>
          </PropertyGroup>

          <!-- ActiveCamera -->
          <Property name="CameraPositionInfo" panel_visibility="never"/>
          <Property name="CameraPosition" panel_visibility="never"/>
          <Property name="CameraFocalPointInfo" panel_visibility="never"/>
          <Property name="CameraFocalPoint" panel_visibility="never"/>
          <Property name="CameraViewUpInfo" panel_visibility="never"/>
          <Property name="CameraViewUp" panel_visibility="never"/>
          <Property name="CameraViewAngle" panel_visibility="never"/>
          <Property name="CameraFocalDiskInfo" panel_visibility="never"/>
          <Property name="CameraFocalDisk" panel_visibility="never"/>
          <Property name="CameraFocalDistanceInfo" panel_visibility="never"/>
          <Property name="CameraFocalDistance" panel_visibility="never"/>
          <Property name="CameraParallelScale" panel_visibility="never"/>
          <Property name="CameraParallelScaleInfo" panel_visibility="never"/>
          <Property name="CameraParallelProjection"
                    panel_visibility="advanced"/>
          <Property name="EyeAngle" panel_visibility="never"/>

          <PropertyGroup label="Background">
            <Property name="UseColorPaletteForBackground" />
            <Property name="BackgroundColorMode" />
            <Property name="Background2"/>
            <Property name="Background"/>
            <Property name="BackgroundTexture"/>
            <Property name="UseEnvironmentLighting"/>
          </PropertyGroup>

          <PropertyGroup label="Render Passes">
            <Property name="UseToneMapping"/>
            <Property name="Exposure"/>
            <Property name="UseSSAO"/>
            <Property name="UseSSAODefaultPresets"/>
            <Property name="Radius"/>
            <Property name="Bias"/>
            <Property name="KernelSize"/>
            <Property name="Blur"/>
            <Property name="GenericFilmicPresets"/>
            <Property name="ToneMappingType"/>
            <Property name="Contrast"/>
            <Property name="Shoulder"/>
            <Property name="MidIn"/>
            <Property name="MidOut"/>
            <Property name="HdrMax"/>
            <Property name="UseACES"/>
          </PropertyGroup>

          <!-- Interactor -->
          <Property name="InteractionMode" panel_visibility="never"/>
          <Property name="Camera3DManipulators" panel_visibility="never"/>
          <Property name="Camera2DManipulators" panel_visibility="never"/>
          <Property name="CenterOfRotation" panel_visibility="never"/>
          <Property name="RotationFactor" panel_visibility="never"/>
          <Property name="NonInteractiveRenderDelay" panel_visibility="never"/>
          <Property name="EnableRenderOnInteraction" panel_visibility="never"/>
          <Property name="WindowResizeNonInteractiveRenderDelay" panel_visibility="never"/>
          <!-- Renderer -->
          <PropertyGroup label="Stereo">
            <Property name="StereoRender"/>
            <Property name="StereoType"/>
            <Property name="ServerStereoType"/>
          </PropertyGroup>
        </ExposedProperties>
        <!-- End of "RootView" subproxy -->
      </SubProxy>
      <!-- End of ComparativeRenderView -->
    </ComparativeViewProxy>
    <!-- ================================================================== -->
    <ComparativeViewProxy base_proxygroup="internal_views"
                          base_proxyname="ComparativeViewBase"
                          class="vtkPVComparativeView"
                          name="ComparativeXYChartView"
                          label="Line Chart View (Comparative)">
      <Documentation>The is comparative view comprising of individual
      "XYChartView" proxies for each panel in the comparative view
      grid.</Documentation>
      <SubProxy>
        <Proxy name="RootView"
               proxygroup="views"
               proxyname="XYChartView"></Proxy>
        <ExposedProperties>
          <Property name="PPI" />
          <PropertyGroup label="Title">
            <Property name="ChartTitle"/>
            <Property name="ChartTitleAlignment"/>
          </PropertyGroup>
          <PropertyGroup label="Chart Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="ChartTitleColor" function="Color"/>
            <Property name="ChartTitleFontFamily" function="Family"/>
            <Property name="ChartTitleFontFile" function="File"/>
            <Property name="ChartTitleBold" function="Bold" />
            <Property name="ChartTitleItalic" function="Italics"/>
            <Property name="ChartTitleFontSize" function="Size" />
          </PropertyGroup>
          <PropertyGroup label="Legend">
            <Property name="ShowLegend"/>
            <Property name="LegendLocation"/>
            <Property name="LegendPosition"/>
            <Property name="LegendSymbolWidth"/>
          </PropertyGroup>
          <PropertyGroup label="Legend Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="LegendFontFamily" function="Family"/>
            <Property name="LegendFontFile" function="File"/>
            <Property name="LegendBold" function="Bold"/>
            <Property name="LegendItalic" function="Italics"/>
            <Property name="LegendFontSize" function="Size"/>
          </PropertyGroup>
          <PropertyGroup label="Tooltip"
                         panel_visibility="advanced">
            <Property name="TooltipNotation"/>
            <Property name="TooltipPrecision"/>
          </PropertyGroup>

          <!-- left axis -->
          <PropertyGroup label="Left Axis">
            <Property name="LeftAxisTitle"/>
            <Property name="ShowLeftAxisGrid"/>
            <Property name="LeftAxisGridColor"/>
            <Property name="LeftAxisColor"/>
          </PropertyGroup>

          <PropertyGroup label="Left Axis Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="LeftAxisTitleColor" function="Color"/>
            <Property name="LeftAxisTitleFontFamily" function="Family"/>
            <Property name="LeftAxisTitleFontFile" function="File"/>
            <Property name="LeftAxisTitleBold" function="Bold" />
            <Property name="LeftAxisTitleItalic" function="Italics"/>
            <Property name="LeftAxisTitleFontSize" function="Size" />
          </PropertyGroup>

          <PropertyGroup label="Left Axis Range">
            <Property name="LeftAxisLogScale"/>
            <Property name="LeftAxisUseCustomRange"/>
            <Property name="LeftAxisRangeMinimum"/>
            <Property name="LeftAxisRangeMaximum"/>
          </PropertyGroup>

          <PropertyGroup label="Left Axis Labels">
            <Property name="ShowLeftAxisLabels"/>
            <Property name="LeftAxisLabelNotation"/>
            <Property name="LeftAxisLabelPrecision"/>
            <Property name="LeftAxisUseCustomLabels"/>
            <Property name="LeftAxisLabels"/>
          </PropertyGroup>

          <PropertyGroup label="Left Axis Label Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="LeftAxisLabelColor" function="Color"/>
            <Property name="LeftAxisLabelFontFamily" function="Family"/>
            <Property name="LeftAxisLabelFontFile" function="File"/>
            <Property name="LeftAxisLabelBold" function="Bold" />
            <Property name="LeftAxisLabelItalic" function="Italics"/>
            <Property name="LeftAxisLabelFontSize" function="Size" />
          </PropertyGroup>
          <!-- bottom axis -->
          <PropertyGroup label="Bottom Axis">
            <Property name="BottomAxisTitle"/>
            <Property name="ShowBottomAxisGrid"/>
            <Property name="BottomAxisGridColor"/>
            <Property name="BottomAxisColor"/>
          </PropertyGroup>
          <PropertyGroup label="Bottom Axis Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="BottomAxisTitleColor" function="Color"/>
            <Property name="BottomAxisTitleFontFamily" function="Family"/>
            <Property name="BottomAxisTitleFontFile" function="File"/>
            <Property name="BottomAxisTitleBold" function="Bold" />
            <Property name="BottomAxisTitleItalic" function="Italics"/>
            <Property name="BottomAxisTitleFontSize" function="Size" />
          </PropertyGroup>
          <PropertyGroup label="Bottom Axis Range">
            <Property name="BottomAxisLogScale"/>
            <Property name="BottomAxisUseCustomRange"/>
            <Property name="BottomAxisRangeMinimum"/>
            <Property name="BottomAxisRangeMaximum"/>
          </PropertyGroup>
          <PropertyGroup label="Bottom Axis Labels">
            <Property name="ShowBottomAxisLabels"/>
            <Property name="BottomAxisLabelNotation"/>
            <Property name="BottomAxisLabelPrecision"/>
            <Property name="BottomAxisUseCustomLabels"/>
            <Property name="BottomAxisLabels"/>
          </PropertyGroup>
          <PropertyGroup label="Bottom Axis Label Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="BottomAxisLabelColor" function="Color"/>
            <Property name="BottomAxisLabelFontFamily" function="Family"/>
            <Property name="BottomAxisLabelFontFile" function="File"/>
            <Property name="BottomAxisLabelBold" function="Bold" />
            <Property name="BottomAxisLabelItalic" function="Italics"/>
            <Property name="BottomAxisLabelFontSize" function="Size" />
          </PropertyGroup>
          <!-- right axis -->
          <PropertyGroup label="Right Axis">
            <Property name="RightAxisTitle"/>
            <Property name="ShowRightAxisGrid"/>
            <Property name="RightAxisGridColor"/>
            <Property name="RightAxisColor"/>
          </PropertyGroup>
          <PropertyGroup label="Right Axis Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="RightAxisTitleColor" function="Color"/>
            <Property name="RightAxisTitleFontFamily" function="Family"/>
            <Property name="RightAxisTitleFontFile" function="File"/>
            <Property name="RightAxisTitleBold" function="Bold" />
            <Property name="RightAxisTitleItalic" function="Italics"/>
            <Property name="RightAxisTitleFontSize" function="Size" />
          </PropertyGroup>
          <PropertyGroup label="Right Axis Range">
            <Property name="RightAxisLogScale"/>
            <Property name="RightAxisUseCustomRange"/>
            <Property name="RightAxisRangeMinimum"/>
            <Property name="RightAxisRangeMaximum"/>
          </PropertyGroup>
          <PropertyGroup label="Right Axis Labels">
            <Property name="ShowRightAxisLabels"/>
            <Property name="RightAxisLabelNotation"/>
            <Property name="RightAxisLabelPrecision"/>
            <Property name="RightAxisUseCustomLabels"/>
            <Property name="RightAxisLabels"/>
          </PropertyGroup>
          <PropertyGroup label="Right Axis Label Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="RightAxisLabelColor" function="Color"/>
            <Property name="RightAxisLabelFontFamily" function="Family"/>
            <Property name="RightAxisLabelFontFile" function="File"/>
            <Property name="RightAxisLabelBold" function="Bold" />
            <Property name="RightAxisLabelItalic" function="Italics"/>
            <Property name="RightAxisLabelFontSize" function="Size" />
          </PropertyGroup>
          <!-- top axis -->
          <PropertyGroup label="Top Axis">
            <Property name="TopAxisTitle"/>
            <Property name="ShowTopAxisGrid"/>
            <Property name="TopAxisGridColor"/>
            <Property name="TopAxisColor"/>
          </PropertyGroup>
          <PropertyGroup label="Top Axis Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="TopAxisTitleColor" function="Color"/>
            <Property name="TopAxisTitleFontFamily" function="Family"/>
            <Property name="TopAxisTitleFontFile" function="File"/>
            <Property name="TopAxisTitleBold" function="Bold" />
            <Property name="TopAxisTitleItalic" function="Italics"/>
            <Property name="TopAxisTitleFontSize" function="Size" />
          </PropertyGroup>
          <PropertyGroup label="Top Axis Range">
            <Property name="TopAxisLogScale"/>
            <Property name="TopAxisUseCustomRange"/>
            <Property name="TopAxisRangeMinimum"/>
            <Property name="TopAxisRangeMaximum"/>
          </PropertyGroup>
          <PropertyGroup label="Top Axis Labels">
            <Property name="ShowTopAxisLabels"/>
            <Property name="TopAxisLabelNotation"/>
            <Property name="TopAxisLabelPrecision"/>
            <Property name="TopAxisUseCustomLabels"/>
            <Property name="TopAxisLabels"/>
          </PropertyGroup>
          <PropertyGroup label="Top Axis Label Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="TopAxisLabelColor" function="Color"/>
            <Property name="TopAxisLabelFontFamily" function="Family"/>
            <Property name="TopAxisLabelFontFile" function="File"/>
            <Property name="TopAxisLabelBold" function="Bold" />
            <Property name="TopAxisLabelItalic" function="Italics"/>
            <Property name="TopAxisLabelFontSize" function="Size" />
          </PropertyGroup>
        </ExposedProperties>
        <!-- End of "RootView" subproxy -->
      </SubProxy>
      <!-- End of ComparativeXYChartView -->
    </ComparativeViewProxy>
    <!-- ================================================================== -->
    <ComparativeViewProxy base_proxygroup="internal_views"
                          base_proxyname="ComparativeViewBase"
                          class="vtkPVComparativeView"
                          name="ComparativeXYBarChartView"
                          label="Bar Chart View (Comparative)">
      <Documentation>The is comparative view comprising of individual
      "XYBarChartView" proxies for each panel in the comparative view
      grid.</Documentation>

      <SubProxy>
        <Proxy name="RootView"
               proxygroup="views"
               proxyname="XYBarChartView"></Proxy>
        <ExposedProperties>
          <Property name="PPI" />
          <PropertyGroup label="Title">
            <Property name="ChartTitle"/>
            <Property name="ChartTitleAlignment"/>
          </PropertyGroup>
          <PropertyGroup label="Chart Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="ChartTitleColor" function="Color"/>
            <Property name="ChartTitleFontFamily" function="Family"/>
            <Property name="ChartTitleFontFile" function="File"/>
            <Property name="ChartTitleBold" function="Bold" />
            <Property name="ChartTitleItalic" function="Italics"/>
            <Property name="ChartTitleFontSize" function="Size" />
          </PropertyGroup>
          <PropertyGroup label="Legend">
            <Property name="ShowLegend"/>
            <Property name="LegendLocation"/>
            <Property name="LegendPosition"/>
            <Property name="LegendSymbolWidth"/>
          </PropertyGroup>
          <PropertyGroup label="Legend Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
              <Property name="LegendFontFamily" function="Family"/>
              <Property name="LegendFontFile" function="File"/>
              <Property name="LegendBold" function="Bold"/>
              <Property name="LegendItalic" function="Italics"/>
              <Property name="LegendFontSize" function="Size"/>
          </PropertyGroup>
          <PropertyGroup label="Tooltip"
                         panel_visibility="advanced">
            <Property name="TooltipNotation"/>
            <Property name="TooltipPrecision"/>
          </PropertyGroup>

          <!-- left axis -->
          <PropertyGroup label="Left Axis">
            <Property name="LeftAxisTitle"/>
            <Property name="ShowLeftAxisGrid"/>
            <Property name="LeftAxisGridColor"/>
            <Property name="LeftAxisColor"/>
          </PropertyGroup>

          <PropertyGroup label="Left Axis Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="LeftAxisTitleColor" function="Color"/>
            <Property name="LeftAxisTitleFontFamily" function="Family"/>
            <Property name="LeftAxisTitleFontFile" function="File"/>
            <Property name="LeftAxisTitleBold" function="Bold" />
            <Property name="LeftAxisTitleItalic" function="Italics"/>
            <Property name="LeftAxisTitleFontSize" function="Size" />
          </PropertyGroup>

          <PropertyGroup label="Left Axis Range">
            <Property name="LeftAxisLogScale"/>
            <Property name="LeftAxisUseCustomRange"/>
            <Property name="LeftAxisRangeMinimum"/>
            <Property name="LeftAxisRangeMaximum"/>
          </PropertyGroup>

          <PropertyGroup label="Left Axis Labels">
            <Property name="ShowLeftAxisLabels"/>
            <Property name="LeftAxisLabelNotation"/>
            <Property name="LeftAxisLabelPrecision"/>
            <Property name="LeftAxisUseCustomLabels"/>
            <Property name="LeftAxisLabels"/>
          </PropertyGroup>

          <PropertyGroup label="Left Axis Label Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="LeftAxisLabelColor" function="Color"/>
            <Property name="LeftAxisLabelFontFamily" function="Family"/>
            <Property name="LeftAxisLabelFontFile" function="File"/>
            <Property name="LeftAxisLabelBold" function="Bold" />
            <Property name="LeftAxisLabelItalic" function="Italics"/>
            <Property name="LeftAxisLabelFontSize" function="Size" />
          </PropertyGroup>
          <!-- bottom axis -->
          <PropertyGroup label="Bottom Axis">
            <Property name="BottomAxisTitle"/>
            <Property name="ShowBottomAxisGrid"/>
            <Property name="BottomAxisGridColor"/>
            <Property name="BottomAxisColor"/>
          </PropertyGroup>

          <PropertyGroup label="Bottom Axis Title Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="BottomAxisTitleColor" function="Color"/>
            <Property name="BottomAxisTitleFontFamily" function="Family"/>
            <Property name="BottomAxisTitleFontFile" function="File"/>
            <Property name="BottomAxisTitleBold" function="Bold" />
            <Property name="BottomAxisTitleItalic" function="Italics"/>
            <Property name="BottomAxisTitleFontSize" function="Size" />
          </PropertyGroup>

          <PropertyGroup label="Bottom Axis Range">
            <Property name="BottomAxisLogScale"/>
            <Property name="BottomAxisUseCustomRange"/>
            <Property name="BottomAxisRangeMinimum"/>
            <Property name="BottomAxisRangeMaximum"/>
          </PropertyGroup>

          <PropertyGroup label="Bottom Axis Labels">
            <Property name="ShowBottomAxisLabels"/>
            <Property name="BottomAxisLabelNotation"/>
            <Property name="BottomAxisLabelPrecision"/>
            <Property name="BottomAxisUseCustomLabels"/>
            <Property name="BottomAxisLabels"/>
          </PropertyGroup>

          <PropertyGroup label="Bottom Axis Label Properties"
                         panel_widget="FontEditor"
                         panel_visibility="advanced">
            <Property name="BottomAxisLabelColor" function="Color"/>
            <Property name="BottomAxisLabelFontFamily" function="Family"/>
            <Property name="BottomAxisLabelFontFile" function="File"/>
            <Property name="BottomAxisLabelBold" function="Bold" />
            <Property name="BottomAxisLabelItalic" function="Italics"/>
            <Property name="BottomAxisLabelFontSize" function="Size" />
          </PropertyGroup>
        </ExposedProperties>
      </SubProxy>

      <!-- End of ComparativeXYBarChartView -->
    </ComparativeViewProxy>
     <!-- ================================================================== -->
     <MultiSliceViewProxy name="MultiSlice" class="vtkPVMultiSliceView"
         processes="client|renderserver|dataserver"
         base_proxygroup="views" base_proxyname="RenderView"
         label="Slice View">
        <DoubleVectorProperty name="XSlicesValues"
          set_number_command="SetNumberOfXSlices"
          command="SetXSlices"
          argument_is_array="1"
          panel_visibility="never">
        </DoubleVectorProperty>
        <DoubleVectorProperty name="YSlicesValues"
          set_number_command="SetNumberOfYSlices"
          command="SetYSlices"
          argument_is_array="1"
          panel_visibility="never">
        </DoubleVectorProperty>
        <DoubleVectorProperty name="ZSlicesValues"
          set_number_command="SetNumberOfZSlices"
          command="SetZSlices"
          argument_is_array="1"
          panel_visibility="never">
        </DoubleVectorProperty>
        <StringVectorProperty name="XTitle"
          number_of_elements="1"
          default_values="X"
          panel_visibility="never" />
        <StringVectorProperty name="YTitle"
          number_of_elements="1"
          default_values="Y"
          panel_visibility="never" />
        <StringVectorProperty name="ZTitle"
          number_of_elements="1"
          default_values="Z"
          panel_visibility="never" />
     </MultiSliceViewProxy>

     <!-- ================================================================== -->
  </ProxyGroup>

  <!-- ==================================================================== -->
  <ProxyGroup name="internal_representations">
    <!-- group for representations not meant to be used directly, but that
    should be created in a vtkPVCompositeRepresentation. Helps us keep the
    properties manageable, since we don't need to expose too many properties
    from these. Only public API properties need to be defined for these proxies
    (along with "Input" and "Representation", if applicable).
    -->

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkAMROutlineRepresentation"
                         name="AMROutlineRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation for showing an outline for AMR
      dataset that is streaming capable.</Documentation>

      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkOverlappingAMR" />
        </DataTypeDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>

      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty argument_is_array="1"
                            command="SetUserTransform"
                            default_values="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
                            name="UserTransform"
                            number_of_elements="16">
        <Documentation>
          In addition to the instance variables such as position and
          orientation, you can add an additional transformation for your own
          use. This transformation is concatenated with the actor's internal
          transformation, which you implicitly create through the use of
          Position, Origin, Orientation. The value is 4x4 matrix for the linear
          transform to use.
        </Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAmbientColor"
                            default_values="1.0 1.0 1.0"
                            name="AmbientColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="ForegroundColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuseColor"
                            default_values="1.0 1.0 1.0"
                            name="DiffuseColor"
                            number_of_elements="3"
                            panel_widget="color_selector_with_palette">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SurfaceColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularColor"
                            default_values="1.0 1.0 1.0"
                            name="SpecularColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="1.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLuminosity"
                            default_values="0.0"
                            name="Luminosity"
                            number_of_elements="1">
        <DoubleRangeDomain max="100.0"
                           min="0"
                           name="range" />
        <Documentation>Makes the object emit light.
        Only takes effect with OSPRay's path traced renderer.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRenderLinesAsTubes"
                         default_values="0"
                         name="RenderLinesAsTubes"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all lines are rendered as 3D tubes, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <!-- end of AMROutlineRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkAMRStreamingVolumeRepresentation"
                         name="AMRVolumeRepresentation"
                         processes="client|renderserver|dataserver">
      <Documentation>
        Representation for rendering Overlapping AMR as volume.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <DataTypeDomain name="input_type">
          <DataType value="vtkOverlappingAMR" />
        </DataTypeDomain>
        <InputArrayDomain attribute_type="any"
                          name="input_array_any">
        </InputArrayDomain>
        <Documentation>Set the input to the representation.</Documentation>
      </InputProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                         input_domain_name="input_array_any">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolationType"
                         default_values="2"
                         name="InterpolationType"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Nearest"
                 value="0" />
          <Entry text="Linear"
                 value="1" />
          <Entry text="Cubic"
                 value="2" />
        </EnumerationDomain>
      </IntVectorProperty>
      <ProxyProperty command="SetColor"
                     name="LookupTable" >
        <ProxyGroupDomain name="groups">
          <Group name="transfer_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetShade"
                         default_values="0"
                         name="Shade"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable/Disable shading.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetNumberOfSamples"
                         default_values="64 128 64"
                         name="NumberOfSamples"
                         number_of_elements="3">
        <Documentation>
          Set the number of samples used to create an uniform grid
          from the AMR.
        </Documentation>
        <IntRangeDomain name="range" />
      </IntVectorProperty>
      <ProxyProperty command="SetScalarOpacity"
                     name="ScalarOpacityFunction" >
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty command="SetRequestedRenderMode"
                         default_values="0"
                         name="VolumeRenderingMode"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Smart"
                 value="0" />
          <Entry text="Ray Cast Only"
                 value="2" />
          <Entry text="GPU Based"
                 value="4" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty command="SetResamplingMode"
                         default_values="0"
                         name="ResamplingMode"
                         number_of_elements="1"
                         panel_visibility="default" >
        <EnumerationDomain name="enum">
          <Entry text="Over Data Bounds" value="0" />
          <Entry text="Using View Frustum" value="1" />
        </EnumerationDomain>
      </IntVectorProperty>

      <IntVectorProperty command="SetStreamingRequestSize"
                         default_values="10"
                         name="StreamingRequestSize"
                         number_of_elements="1"
                         panel_visibility="default">
        <IntRangeDomain name="range" min="1" max="10000" />
        <Documentation>
          Set the number of blocks to request at a given time on a single
          process when streaming.
        </Documentation>
      </IntVectorProperty>

      <DoubleVectorProperty command="SetScalarOpacityUnitDistance"
                            default_values="1"
                            name="ScalarOpacityUnitDistance"
                            number_of_elements="1">
        <BoundsDomain mode="approximate_cell_length"
                      name="bounds" >
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </BoundsDomain>
      </DoubleVectorProperty>
      <!-- end of AMRVolumeRepresentation -->
    </RepresentationProxy>

    <!-- ================================================================== -->
    <RepresentationProxy class="vtkGeometryRepresentation"
                         name="SurfaceRepresentationBase"
                         processes="client|renderserver|dataserver">
      <Documentation>Representation to show any dataset in a 3D render
      view.</Documentation>
      <IntVectorProperty command="SetVisibility"
                         default_values="1"
                         name="Visibility"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Get/Set the visibility of the
        representation.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetForceUseCache"
                         default_values="0"
                         is_internal="1"
                         name="ForceUseCache"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetForcedCacheKey"
                            default_values="none"
                            is_internal="1"
                            name="ForcedCacheKey"
                            number_of_elements="1">
        <DoubleRangeDomain name="range" />
        <Documentation>Typically UseCache and CacheKey are updated by the View
        and representations cache based on what the view tells it. However in
        some cases we may want to force a representation to cache irrespective
        of the view (e.g. comparative views). In which case these ivars can up
        set. If ForcedCacheKey is true, it overrides UseCache and CacheKey.
        Instead, ForcedCacheKey is used.</Documentation>
      </DoubleVectorProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="ColorArrayName"
                            no_custom_default="1"
                            number_of_elements="5">
        <Documentation>
          Set the array to color with. One must specify the field association and
          the array name of the array. If the array is missing, scalar coloring will
          automatically be disabled.
        </Documentation>
        <RepresentedArrayListDomain name="array_list"
                                    input_domain_name="input_array_any">>
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetRepresentation"
                            default_values="Surface"
                            name="Representation"
                            panel_widget="display_representation_selector"
                            number_of_elements="1">
        <StringListDomain name="string_list">
          <String value="Points" />
          <String value="Wireframe" />
          <String value="Surface" />
          <String value="Surface With Edges" />
        </StringListDomain>
      </StringVectorProperty>
      <IntVectorProperty command="SetCoordinateShiftScaleMethod"
                         default_values="2"
                         name="CoordinateShiftScaleMethod"
                         number_of_elements="1">
        <Documentation>Options for normalizing the point coordinates.
        The points are sent to the GPU as float data which can result in resolution issues
        due to the limited precision of float. VTK includes a variety of methods to normalize
        the point coordinates prior to sending them to the GPU. Auto shift scale is a good
        setting that should work for most datasets. Focal point shift scale works based
        on the current camera viewpoint which makes it the most robust setting but it
        will renormalize the data occasionally as the camera's settings change which
        requires reuploading the data to the GPU so there may be a performance cost.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="Disable"
                 value="0" />
          <Entry text="Auto Shift Scale"
                 value="1" />
          <Entry text="Always Auto Shift Scale"
                 value="2" />
          <Entry text="Auto Shift Only"
                 value="4" />
          <Entry text="Near Focal Plane Shift Scale"
                 value="5" />
          <Entry text="Focal Point Shift Scale"
                 value="6" />
        </EnumerationDomain>
      </IntVectorProperty>
      <StringVectorProperty command="SetTCoordArray"
                            default_values=""
                            label="Texture Coordinates"
                            name="SelectTCoordArray"
                            number_of_elements="1">
        <Documentation>
          Set the texture coordinates array used for texture mapping.
        </Documentation>
        <RepresentedArrayListDomain attribute_type="TCoords"
                         input_domain_name="input_array_point_2"
                         data_type="VTK_FLOAT VTK_DOUBLE"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetNormalArray"
                            default_values=""
                            label="Normal Array"
                            name="SelectNormalArray"
                            number_of_elements="1">
        <Documentation>
          Set the normal array used for smooth shading.
        </Documentation>
        <RepresentedArrayListDomain attribute_type="Normals"
                         input_domain_name="input_array_point_3"
                         data_type="VTK_FLOAT VTK_DOUBLE"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <StringVectorProperty command="SetTangentArray"
                            default_values=""
                            label="Tangent Array"
                            name="SelectTangentArray"
                            number_of_elements="1">
        <Documentation>
          Set the tangent coordinates array used for normal mapping.
        </Documentation>
        <RepresentedArrayListDomain attribute_type="Tangents"
                         input_domain_name="input_array_point_3"
                         data_type="VTK_FLOAT VTK_DOUBLE"
                         name="array_list"
                         none_string="None">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </RepresentedArrayListDomain>
      </StringVectorProperty>
      <DoubleVectorProperty command="SetAmbient"
                            default_values="0.0"
                            name="Ambient"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuse"
                            default_values="1.0"
                            name="Diffuse"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecular"
                            default_values="0.0"
                            name="Specular"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRoughness"
                            default_values="0.3"
                            name="Roughness"
                            number_of_elements="1">
        <Documentation>
          Set how rough is the surface.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetMetallic"
                            default_values="0.0"
                            name="Metallic"
                            number_of_elements="1">
        <Documentation>
          Set metalness of the surface. It is usually either 0 or 1 but any value is valid.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEdgeTint"
                            default_values="1.0 1.0 1.0"
                            name="EdgeTint"
                            number_of_elements="3">
        <Documentation>
          For metals only. Set the tint at grazing angles.
        </Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                          name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetBaseIOR"
                            default_values="1.5"
                            name="BaseIOR"
                            number_of_elements="1">
        <Documentation>
          Set the index of refraction of the base layer.
        </Documentation>
        <DoubleRangeDomain max="4"
                           min="1"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCoatIOR"
                            default_values="2.0"
                            name="CoatIOR"
                            number_of_elements="1">
        <Documentation>
          Set the index of refraction of the coat layer.
        </Documentation>
        <DoubleRangeDomain max="4"
                           min="1"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCoatStrength"
                            default_values="0.0"
                            name="CoatStrength"
                            number_of_elements="1">
        <Documentation>
          Set the strength of the coat layer.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetCoatRoughness"
                            default_values="0.0"
                            name="CoatRoughness"
                            number_of_elements="1">
        <Documentation>
          Set the roughness of the coat layer.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>

      <DoubleVectorProperty command="SetCoatColor"
                            default_values="1.0 1.0 1.0"
                            name="CoatColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAnisotropy"
                            default_values="0.0"
                            name="Anisotropy"
                            number_of_elements="1">
        <Documentation>
          Set the anisotropy coefficient of the surface.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <!-- Enable widget only if normals and tangents are here -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectNormalArray" value="None" inverse="1"/>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectTangentArray" value="None" inverse="1"/>
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetAnisotropyRotation"
                            default_values="0.0"
                            name="AnisotropyRotation"
                            number_of_elements="1">
        <Documentation>
          Set the anisotropy rotation coefficient of the surface.
        </Documentation>
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <!-- Enable widget only if normals and tangents are here -->
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectNormalArray" value="None" inverse="1"/>
          <PropertyWidgetDecorator type="GenericDecorator" mode="enabled_state" property="SelectTangentArray" value="None" inverse="1"/>
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetTexture"
                     name="Texture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the diffuse color texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <IntVectorProperty command="SetRepeatTextures"
                         default_values="1"
                         name="RepeatTextures"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Should textures be clamped or repeated when texture coordinates go
          outside the range of 0 to 1.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolateTextures"
                         default_values="0"
                         name="InterpolateTextures"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When sampling a texture should linear interpolations be used. If false
          then nearest neighbor sampling will be used.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseMipmapTextures"
                         default_values="0"
                         name="UseMipmapTextures"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Should mipmaps be used for textures. Mipmaps are espcially useful when
          working with large detailed textures or situations where you might be
          viewing a texture map from far away.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="InterpolateTextures"
                                   value="1" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetShowTexturesOnBackface"
                         default_values="1"
                         name="ShowTexturesOnBackface"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Should textures be applied to the backface of a surface.
        </Documentation>
      </IntVectorProperty>
      <ProxyProperty command="SetBaseColorTexture"
                     name="BaseColorTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the base color (also called albedo) texture. It will define the diffuse color for a
          non metallic surface or the specular color for a metallic surface.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <ProxyProperty command="SetMaterialTexture"
                     name="MaterialTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the material texture. This texture encodes occlusion, roughness and metalness
          on the red, green, blue channel respectively.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <ProxyProperty command="SetAnisotropyTexture"
                     name="AnisotropyTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the anisotropy texture. This texture encodes anisotropy strength on the red and anisotropy rotation
          on the green channel.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" check_tangents="1" />
          <!-- enable the texture selector only when tcoords and tangents are available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetOcclusionStrength"
                            default_values="1.0"
                            name="OcclusionStrength"
                            number_of_elements="1">
        <Documentation>
          Set the ambient occlusion strength of the material texture.
        </Documentation>
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="MaterialTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetNormalTexture"
                     name="NormalTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the normal mapping texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="0"
                                   inverse="1" />
          <TextureSelectorWidget check_tcoords="1" check_tangents="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetNormalScale"
                            default_values="1.0"
                            name="NormalScale"
                            number_of_elements="1">
        <Documentation>
          Set the scale of normal mapping deviation.
        </Documentation>
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="NormalTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetCoatNormalTexture"
                     name="CoatNormalTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the coat normal mapping texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="0"
                                   inverse="1" />
          <TextureSelectorWidget check_tcoords="1" check_tangents="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetCoatNormalScale"
                            default_values="1.0"
                            name="CoatNormalScale"
                            number_of_elements="1">
        <Documentation>
          Set the scale of coat normal mapping deviation.
        </Documentation>
        <DoubleRangeDomain max="5"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="CoatNormalTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <ProxyProperty command="SetEmissiveTexture"
                     name="EmissiveTexture"
                     panel_widget="texture_selector"
                     null_on_empty="1" >
        <Documentation>
          Set the emissive texture.
        </Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="textures" />
        </ProxyGroupDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3" />
          <TextureSelectorWidget check_tcoords="1" />
          <!-- enable the texture selector only when tcoords is available. -->
        </Hints>
      </ProxyProperty>
      <DoubleVectorProperty command="SetEmissiveFactor"
                            default_values="1.0 1.0 1.0"
                            name="EmissiveFactor"
                            number_of_elements="3">
        <Documentation>
          Set the factor of the red, green, blue channels of the emissive texture.
        </Documentation>
        <DoubleRangeDomain max="10"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EmissiveTexture"
                                   value="null"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetFlipTextures"
                         default_values="0"
                         name="FlipTextures"
                         number_of_elements="1">
        <Documentation>
          Enable texture coordinate flip on Y axis. Depending on some format specification, the
          origin of the texture could be either at the bottom left or the top left of the image.
        </Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <IntVectorProperty command="SetSuppressLOD"
                         default_values="0"
                         name="SuppressLOD"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetAmbientColor"
                            default_values="1.0 1.0 1.0"
                            name="AmbientColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="ForegroundColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetDiffuseColor"
                            default_values="1.0 1.0 1.0"
                            name="DiffuseColor"
                            number_of_elements="3"
                            panel_widget="color_selector_with_palette">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="SurfaceColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularColor"
                            default_values="1.0 1.0 1.0"
                            name="SpecularColor"
                            number_of_elements="3">
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLineWidth"
                            default_values="1.0"
                            name="LineWidth"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPointSize"
                            default_values="2.0"
                            name="PointSize"
                            number_of_elements="1">
        <DoubleRangeDomain min="0"
                           name="range" />
      </DoubleVectorProperty>
      <IntVectorProperty command="SetRenderLinesAsTubes"
                         default_values="0"
                         name="RenderLinesAsTubes"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all lines are rendered as 3D tubes, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetRenderPointsAsSpheres"
                         default_values="0"
                         name="RenderPointsAsSpheres"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>
          When set, all points are rendered as 3D spheres, if supported by OpenGL driver.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolation"
                         default_values="1"
                         name="Interpolation"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Flat"
                 value="0" />
          <Entry text="Gouraud"
                 value="1" />
          <Entry text="PBR"
                 value="3" />
        </EnumerationDomain>
      </IntVectorProperty>
      <IntVectorProperty command="SetTriangulate"
                         default_values="0"
                         name="Triangulate"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Triangulate the geometry internally to avoid rendering
        issues of non-convex polygons. This feature has a processing and memory
        cost, it should be enabled only when needed.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseShaderReplacements"
                         default_values="0"
                         name="UseShaderReplacements"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable the use of shader replacements.</Documentation>
      </IntVectorProperty>
      <StringVectorProperty command="SetShaderReplacements"
                            default_values=""
                            name="ShaderReplacements"
                            number_of_elements="1"
                            panel_widget="shader_replacements_selector"
                            panel_visibility="advanced">
        <Documentation>
          Specify shader replacements using a Json string.
          The Json string can be a single node or an array of nodes with the
          following properties:&#xa;
            "type": specifies the type of shader the replacement is about.
              It can be either "vertex", "fragment" or "geometry".&#xa;
            "original": specifies the original string to be replaced in the shader code.
              This string is generally a pattern defined by the mapper
              vtkOpenGLPolyDataMapper at specific locations of the shader
              GLSL source code.&#xa;
            "replacement": specifies the replacement string in GLSL source code.
              Note that the Json parser supports multiple lines entries.&#xa;
          Example of a simple shader replacement (draw all the fragments in full red
          color without any shading consideration):&#xa;
            {&#xa;
             "type": "fragment",&#xa;
             "original": "//VTK::Light::Impl",&#xa;
             "replacement": "gl_FragData[0]=vec4(1.0,0.0,0.0,1.0);"&#xa;
           }&#xa;
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="UseShaderReplacements"
                                   value="1" />
          <!-- show this widget when UseShaderReplacements is enabled -->
        </Hints>
      </StringVectorProperty>
      <IntVectorProperty command="SetNonlinearSubdivisionLevel"
                         default_values="1"
                         name="NonlinearSubdivisionLevel"
                         number_of_elements="1">
        <IntRangeDomain max="4"
                        min="0"
                        name="range" />
      </IntVectorProperty>
      <DoubleVectorProperty command="SetOpacity"
                            default_values="1.0"
                            name="Opacity"
                            number_of_elements="1">
        <DoubleRangeDomain max="1"
                           min="0"
                           name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetSpecularPower"
                            default_values="100.0"
                            name="SpecularPower"
                            number_of_elements="1">
        <DoubleRangeDomain max="100"
                           min="0"
                           name="range" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Interpolation"
                                   value="3"
                                   inverse="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetLuminosity"
                            default_values="0.0"
                            name="Luminosity"
                            number_of_elements="1">
        <DoubleRangeDomain max="100.0"
                           min="0"
                           name="range" />
        <Documentation>Makes the object emit light.
        Only takes effect with OSPRay's path traced renderer.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="EnableOSPRay"
                                   values="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetEdgeColor"
                            default_values="0 0 0.5"
                            name="EdgeColor"
                            number_of_elements="3">
        <Documentation>Set the edge color. This color is used to draw the edge
        for the polygonal data when EdgeVisibility is on.</Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="EdgeColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetInteractiveSelectionColor"
                            default_values="0.5 0.0 1.0"
                            name="InteractiveSelectionColor"
                            number_of_elements="3">
        <Documentation>Set the preselection color. This color is used to draw the edge
        of the current preselection.</Documentation>
        <DoubleRangeDomain max="1 1 1"
                           min="0 0 0"
                           name="range" />
        <Hints>
          <PropertyLink group="settings" proxy="ColorPalette" property="InteractiveSelectionColor" unlink_if_modified="1" />
        </Hints>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetPosition"
                            default_values="0 0 0"
                            label="Translation"
                            name="Position"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetScale"
                            default_values="1 1 1"
                            name="Scale"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrientation"
                            default_values="0 0 0"
                            name="Orientation"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetOrigin"
                            default_values="0 0 0"
                            name="Origin"
                            number_of_elements="3">
        <DoubleRangeDomain name="range" />
      </DoubleVectorProperty>

      <DoubleVectorProperty argument_is_array="1"
                            command="SetUserTransform"
                            default_values="1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"
                            name="UserTransform"
                            number_of_elements="16">
        <Documentation>
          In addition to the instance variables such as position and
          orientation, you can add an additional transformation for your own
          use. This transformation is concatenated with the actor's internal
          transformation, which you implicitly create through the use of
          Position, Origin, Orientation. The value is 4x4 matrix for the linear
          transform to use.
        </Documentation>
      </DoubleVectorProperty>

      <IntVectorProperty command="SetPickable"
                         default_values="1"
                         name="Pickable"
                         number_of_elements="1">
        <Hints>
          <NoDefault />
        </Hints>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <ProxyProperty command="SetLookupTable"
                     name="LookupTable" >
        <Documentation>Set the lookup-table to use to map data array to colors.
        Lookuptable is only used with MapScalars to ON.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="lookup_tables" />
        </ProxyGroupDomain>
      </ProxyProperty>
      <IntVectorProperty default_values="0"
                         name="UseSeparateColorMap"
                         number_of_elements="1"
                         panel_visibility="never">
        <BooleanDomain name="bool" />
        <Documentation>By default, ParaView shares a single color map among all datasets colored
        by arrays that have the same name. When this option is enabled, the active dataset will
        be assigned a separate color map not shared by other datasets.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetMapScalars"
                         default_values="1"
                         name="MapScalars"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When enabled, LookupTable will always be
        used for scalar mapping. Otherwise, when up to 4 component
        scalars are present, the components are clamped to a valid
        color interval (0-255 for an integral type and 0.0-1.0 for a
        floating point type) and then directly used as
        color.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty default_values="0"
                         name="MultiComponentsMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Enable multi components mapping. For a two-components array,
        the first component is mapped to the color, the second component is mapped to the
        opacity. For a four-components array, the first, second and third components are used as
        RGB values and the fourth component is mapped to the opacity. Only available
        when MapScalars is ON. This feature forces "Separate Color Map" and scales the color and
        the opacity range with the correct component.</Documentation>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="Representation"
                                   value="Volume" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="MapScalars"
                                   value="1" />
          <PropertyWidgetDecorator type="MultiComponentsDecorator"
                                   components="2 4" />
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetInterpolateScalarsBeforeMapping"
                         default_values="1"
                         name="InterpolateScalarsBeforeMapping"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>When set to true (default), texture coordinates
        are sent to and interpolated by the graphics card. This is
        equivalent with interpolating scalars and then mapping them to
        obtain colors between points. Otherwise, colors are sent to
        and interpolated by the graphics card.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSeamlessU"
                         default_values="0"
                         name="SeamlessU"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This parameter prevents seams in the U direction in
          the parameterization space. It should be used when using a cylindrical
          or toroidal parameterization on the surface.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetSeamlessV"
                         default_values="0"
                         name="SeamlessV"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>This parameter prevents seams in the V direction in
          the parameterization space. It should be used when using a cylindrical
          or toroidal parameterization on the surface.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetStatic"
                         default_values="0"
                         name="StaticMode"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
      </IntVectorProperty>

      <StringVectorProperty name="Assembly"
        command="SetActiveAssembly"
        number_of_elements="1"
        default_values="Hierarchy"
        panel_visibility="multiblock_inspector">
        <DataAssemblyListDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </DataAssemblyListDomain>
        <Documentation>
          Select which assembly is used when specify selectors
          to choose block visibilities, block colors, etc. for composite datasets.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockSelectors"
        command="AddBlockSelector"
        clean_command="RemoveAllBlockSelectors"
        repeat_command="1"
        number_of_elements_per_command="1"
        panel_visibility="multiblock_inspector"
        number_of_elements="1"
        default_values="/">
        <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Documentation>
          For composite datasets, specify selectors to limit the view
          to a chosen subset of blocks.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockColors"
                            command="SetBlockColor"
                            clean_command="RemoveAllBlockColors"
                            element_types="2 1 1 1"
                            number_of_elements_per_command="4"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
         <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Documentation>
          For composite datasets, specify colors associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </StringVectorProperty>

      <StringVectorProperty name="BlockOpacities"
                            command="SetBlockOpacity"
                            clean_command="RemoveAllBlockOpacities"
                            element_types="2 1"
                            number_of_elements_per_command="2"
                            repeat_command="1"
                            panel_visibility="multiblock_inspector">
         <DataAssemblyDomain name="data_assembly">
          <RequiredProperties>
            <Property function="Input" name="Input" />
            <Property function="ActiveAssembly" name="Assembly" />
          </RequiredProperties>
        </DataAssemblyDomain>
        <Documentation>
          For composite datasets, specify opacities associated with selectors
          on the assembly chosen using **Assembly**.
        </Documentation>
      </StringVectorProperty>

      <PropertyGroup label="Blocks"
                     panel_widget="DataAssemblyEditor"
                     panel_visibility="multiblock_inspector">
        <Property name="Assembly"       function="ActiveAssembly" />
        <Property name="BlockSelectors" function="Selectors" />
        <Property name="BlockColors"    function="Colors" />
        <Property name="BlockOpacities" function="Opacities" />
        <Hints>
          <DataAssemblyPropertyWidget use_inputname_as_header="1"  link_active_selection="1"/>
        </Hints>
      </PropertyGroup>

      <IntVectorProperty command="SetBlockColorsDistinctValues"
                         default_values="7"
                         name="BlockColorsDistinctValues"
                         number_of_elements="1"
                         panel_visibility="never">
        <Documentation>
          Determines the number of distinct values in
          vtkBlockColors. This array is added to each block if
          the dataset is a composite dataset. The array has one value
          set to (blockIndex % BlockColorsDistinctValues)
        </Documentation>
        <IntRangeDomain min="2" name="range" />
        <Hints>
          <PropertyLink group="settings"
                        proxy="GeneralSettings"
                        property="BlockColorsDistinctValues"/>
        </Hints>
      </IntVectorProperty>
      <IntVectorProperty command="SetUseDataPartitions"
                         default_values="0"
                         name="UseDataPartitions"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>Specify whether or not to redistribute the data when actor is translucent.
        Default is false.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetEnableScaling"
                         default_values="0"
                         name="OSPRayUseScaleArray"
                         label="Scaling Mode"
                         number_of_elements="1">
        <Documentation>
          Choose how the size of each sphere and cylinder is determined.
        </Documentation>
        <EnumerationDomain name="enum">
          <Entry text="All Exact"
                 value="-1" />
          <Entry text="All Approximate"
                 value="0" />
          <Entry text="Each Scaled"
                 value="1" />
          <Entry text="Each Exact"
                 value="2" />
        </EnumerationDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
        </Hints>
      </IntVectorProperty>
      <StringVectorProperty command="SetScalingArrayName"
                            default_values=""
                            name="OSPRayScaleArray"
                            label="Scale Array"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <ArrayListDomain input_domain_name="input_array_point"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input" name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          Choice of an array for OSPRay implicit points and lines sizes.
        </Documentation>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="OSPRayUseScaleArray"
                                   values="1" />
        </Hints>
      </StringVectorProperty>
      <ProxyProperty command="SetScalingFunction"
                     name="OSPRayScaleFunction"
                     label="Scale Function"
                     panel_visibility="advanced"
                     panel_widget="transfer_function_editor" >
        <Documentation>Set the piecewise function used to map data array to sprite size.
        ScaleTransferFunction is only used if ScaleByArray is set.</Documentation>
        <ProxyGroupDomain name="groups">
          <Group name="piecewise_functions" />
        </ProxyGroupDomain>
        <ProxyListDomain name="proxy_list">
          <Proxy group="piecewise_functions"
                 name="PiecewiseFunction" />
        </ProxyListDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
          <PropertyWidgetDecorator type="GenericDecorator"
                                   mode="visibility"
                                   property="OSPRayUseScaleArray"
                                   values="1" />
        </Hints>
      </ProxyProperty>
      <StringVectorProperty command="SetMaterial"
                            name="OSPRayMaterial"
                            label="Material"
                            number_of_elements="1"
                            panel_visibility="advanced"
                            default_values="None">
        <Documentation>Set the material to paint this object with.</Documentation>
        <MaterialDomain name="string_list">
        </MaterialDomain>
        <Hints>
          <PropertyWidgetDecorator type="OSPRayHidingDecorator" />
        </Hints>
      </StringVectorProperty>

      <!-- End of SurfaceRepresentationBase -->
    </RepresentationProxy>

  </ProxyGroup>
</ServerManagerConfiguration>
