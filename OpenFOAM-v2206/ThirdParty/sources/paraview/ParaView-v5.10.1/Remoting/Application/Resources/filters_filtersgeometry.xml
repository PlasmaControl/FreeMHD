<ServerManagerConfiguration>
  <ProxyGroup name="filters">
    <!-- ==================================================================== -->
    <SourceProxy class="vtkDataSetRegionSurfaceFilter"
                 label="Extract Region Surface"
                 name="DataSetRegionSurfaceFilter">
      <Documentation long_help="Extract a 2D boundary surface using neighbor relations to eliminate internal faces."
                     short_help="Extract 2D boundary surface.">The Extract
                     Surface filter extracts the polygons forming the outer
                     surface of the input dataset. This filter operates on any
                     type of data and produces polygonal data as
                     output.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>This property specifies the input to the Extract Surface
        filter.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetPieceInvariant"
                         default_values="1"
                         name="PieceInvariant"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is set to 1, internal
        surfaces along process boundaries will be removed. NOTE: Enabling this
        option might cause multiple executions of the data source because more
        information is needed to remove internal surfaces.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetNonlinearSubdivisionLevel"
                         default_values="1"
                         name="NonlinearSubdivisionLevel"
                         number_of_elements="1">
        <IntRangeDomain max="4"
                        min="0"
                        name="range" />
        <Documentation>If the input is an unstructured grid with nonlinear
        faces, this parameter determines how many times the face is subdivided
        into linear faces. If 0, the output is the equivalent of its linear
        counterpart (and the midpoints determining the nonlinear interpolation
        are discarded). If 1, the nonlinear face is triangulated based on the
        midpoints. If greater than 1, the triangulated pieces are recursively
        subdivided to reach the desired subdivision. Setting the value to
        greater than 1 may cause some point data to not be passed even if no
        quadratic faces exist. This option has no effect if the input is not an
        unstructured grid.</Documentation>
      </IntVectorProperty>

      <StringVectorProperty command="SetRegionArrayName"
                            default_values="material"
                            name="RegionArrayName"
                            number_of_elements="1">
        <Documentation>This property specifies the name of the material
        array for generating parts.</Documentation>
      </StringVectorProperty>

      <IntVectorProperty command="SetSingleSided"
                         default_values="1"
                         name="SingleSided"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is set to 1 (the default),
        surfaces along the boundary are 1 layer thick. Otherwise there is
        a surface for the material on each side.</Documentation>
      </IntVectorProperty>

      <StringVectorProperty command="SetMaterialPropertiesName"
                            default_values="material_properties"
                            name="MaterialPropertiesName"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>This the name of the input material property field data array</Documentation>
      </StringVectorProperty>

      <StringVectorProperty command="SetMaterialIDsName"
                            default_values="material_ids"
                            name="MaterialIDsName"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>This the name of the input and output material id field data array</Documentation>
      </StringVectorProperty>

      <StringVectorProperty command="SetMaterialPIDsName"
                            default_values="material_ancestors"
                            name="MaterialPIDsName"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>This the name of the output material ancestry id field data array</Documentation>
      </StringVectorProperty>

      <StringVectorProperty command="SetInterfaceIDsName"
                            default_values="interface_ids"
                            name="InterfaceIDsName"
                            number_of_elements="1"
                            panel_visibility="advanced">
        <Documentation>This the name of the input and output interface id field data array</Documentation>
      </StringVectorProperty>

      <!-- End DataSetRegionSurfaceFilter -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy class="vtkDataSetSurfaceFilter"
                 label="Extract Surface"
                 name="DataSetSurfaceFilter">
      <Documentation long_help="Extract a 2D boundary surface using neighbor relations to eliminate internal faces."
                     short_help="Extract 2D boundary surface.">The Extract
                     Surface filter extracts the polygons forming the outer
                     surface of the input dataset. This filter operates on any
                     type of data and produces polygonal data as
                     output.</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>This property specifies the input to the Extract Surface
        filter.</Documentation>
      </InputProperty>
      <IntVectorProperty command="SetPieceInvariant"
                         default_values="1"
                         name="PieceInvariant"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is set to 1, internal
        surfaces along process boundaries will be removed. NOTE: Enabling this
        option might cause multiple executions of the data source because more
        information is needed to remove internal surfaces.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetNonlinearSubdivisionLevel"
                         default_values="1"
                         name="NonlinearSubdivisionLevel"
                         number_of_elements="1">
        <IntRangeDomain max="4"
                        min="0"
                        name="range" />
        <Documentation>If the input is an unstructured grid with nonlinear
        faces, this parameter determines how many times the face is subdivided
        into linear faces. If 0, the output is the equivalent of its linear
        counterpart (and the midpoints determining the nonlinear interpolation
        are discarded). If 1, the nonlinear face is triangulated based on the
        midpoints. If greater than 1, the triangulated pieces are recursively
        subdivided to reach the desired subdivision. Setting the value to
        greater than 1 may cause some point data to not be passed even if no
        quadratic faces exist. This option has no effect if the input is not an
        unstructured grid.</Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetFastMode"
                         default_values="0"
                         name="FastMode"
                         number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>
          When enabled, the filter may use approxiamte algorithm for extracting
          the exterior surface at the risk not being highly accurate.
          This may miss interior faces, for example, for structured data with blanking
          for better speed.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty command="SetDelegation"
                         default_values="0"
                         name="UseGeometryFilter"
                         number_of_elements="1"
                         panel_visibility="advanced" >
        <BooleanDomain name="bool" />
        <Documentation>
          When enabled, the filter may use `vtkGeometryFilter` internally to generate
          the surface.
        </Documentation>
      </IntVectorProperty>

      <!-- End DataSetSurfaceFilter -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy class="vtkImageDataToUniformGrid"
                 label="Image Data To Uniform Grid"
                 name="ImageDataToUniformGrid">
      <Documentation long_help="Create a uniform grid from an image data by specified blanking arrays."
                     short_help="Create a uniform grid from an image data.">
        Create a vtkUniformGrid from a vtkImageData by passing in arrays to be used
        for point and/or cell blanking. By default, values of 0 in the specified
        array will result in a point or cell being blanked. Use Reverse to switch this.
      </Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkImageData"/>
          <DataType value="vtkCompositeDataSet" child_match="any">
            <DataType value="vtkImageData" />
          </DataType>
        </DataTypeDomain>
        <InputArrayDomain name="input_array"
                          number_of_components="1" />
      </InputProperty>
      <StringVectorProperty command="SetInputArrayToProcess"
                            element_types="0 0 0 0 2"
                            name="SelectInputScalars"
                            number_of_elements="5">
        <ArrayListDomain attribute_type="Scalars"
                         name="array_list">
          <RequiredProperties>
            <Property function="Input"
                      name="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>Specify the array to use for blanking.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetReverse"
                         default_values="0"
                         name="Reverse"
                         number_of_elements="1">
        <Documentation>Reverse the array value to whether or not a point or cell is blanked.</Documentation>
        <BooleanDomain name="bool" />
      </IntVectorProperty>
      <!-- End ImageDataToUniformGrid -->
    </SourceProxy>

    <!-- ==================================================================== -->
    <SourceProxy class="vtkRectilinearGridGeometryFilter"
                 name="RectilinearGridGeometryFilter">
      <Documentation long_help="Extracts geometry for a rectilinear grid.  Output is a polydata dataset."
                     short_help="Extracts geometry for a rectilinear grid.">
                     RectilinearGridGeometryFilter is a filter that extracts
                     geometry from a rectilinear grid. By specifying
                     appropriate i-j-k indices, it is possible to extract a
                     point, a curve, a surface, or a "volume". The volume is
                     actually a (n x m x o) region of points. The extent
                     specification is zero-offset. That is, the first k-plane
                     in a 50x50x50 rectilinear grid is given by (0,49, 0,49,
                     0,0).</Documentation>
      <InputProperty command="SetInputConnection"
                     name="Input">
        <ProxyGroupDomain name="groups">
          <Group name="sources" />
          <Group name="filters" />
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet" />
        </DataTypeDomain>
        <Documentation>Set the input to the Rectilinear Grid Geometry
        filter.</Documentation>
      </InputProperty>
      <!-- End RectilinearGridGeometryFilter -->
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
