<ServerManagerConfiguration>
  <ProxyGroup name="sources">
    <SourceProxy class="vtkSegYReader"
                 label="SegY Reader"
                 name="SegY Reader">
      <Documentation short_help="Reads SEG-Y data files.">
        SEG-Y Reader reads SEG-Y data files. We create a Structured
        Grid for 2.5D SEG-Y and 3D data. If we set the StructuredGrid
        option to false we create a Image Data for 3D data. This saves
        memory and may speed-up certain algorithms, but the position
        and the shape of the data may not be correct. The axes for the
        data are: crossline, inline, depth.
      </Documentation>
      <StringVectorProperty animateable="0"
                            command="SetFileName"
                            name="FileName"
                            number_of_elements="1"
                            panel_visibility="never">
        <FileListDomain name="files" />
        <Documentation>This property specifies the file name for the
        SEG-Y reader.</Documentation>
      </StringVectorProperty>
      <IntVectorProperty command="SetXYCoordMode"
                         default_values="0"
                         name="XYCoordMode"
                         label="XY Coord Mode"
                         number_of_elements="1" >
        <EnumerationDomain name="enum">
          <Entry text="Source"
                 value="0" />
          <Entry text="CDP"
                 value="1" />
          <Entry text="Custom"
                 value="2" />
        </EnumerationDomain>
        <Documentation>
Specify whether to use source x/y coordinates or CDP coordinates or custom
byte positions for data position in the SEG-Y trace header. Defaults to
source x/y coordinates.

As per SEG-Y rev 2.0 specification:

- Source XY coordinate bytes = (73, 77)
- CDP XY coordinate bytes = (181, 185)
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetXCoordByte"
                         default_values="73"
                         name="XCoordByte"
                         number_of_elements="1">
        <IntRangeDomain name="range" />
        <Documentation>
          Specify X and Y byte positions for custom XYCoordinateMode.
          By default, XCoordByte = 73, YCoordByte = 77 i.e. source xy.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetYCoordByte"
                         default_values="76"
                         name="YCoordByte"
                         number_of_elements="1">
        <IntRangeDomain name="range" />
        <Documentation>
          Specify X and Y byte positions for custom XYCoordinateMode.
          By default, XCoordByte = 73, YCoordByte = 77 i.e. source xy.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetVerticalCRS"
                         default_values="0"
                         name="VerticalCRS"
                         number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Heights"
                 value="0" />
          <Entry text="Depths"
                 value="1" />
        </EnumerationDomain>
        <Documentation>
Specify whether the vertical coordinates in the SEG-Y file are heights
(positive up) or depths (positive down). By default, the vertical
coordinates are treated as heights (i.e. positive up). This means that the
Z-axis of the dataset goes from 0 (surface) to -ve depth (last sample).
Note. As per the SEG-Y rev 2.0 specification, this information is defined
in the Location Data Stanza of the Extended Textual Header. However, as of
this revision, SegYReader does not support reading the extended
textual header.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty
                         command="SetStructuredGrid"
                         name="StructuredGrid"
                         number_of_elements="1"
                         default_values="1">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify if we create a Structured Grid even when the data is
          SEG-Y 3D. Note this consumes more memory but it shows the
          precise location for each point and the correct shape of the
          data. The default value is true. If we set this option to
          false we create an Image Data for a SEG-Y 3D dataset.
        </Documentation>
      </IntVectorProperty>
      <IntVectorProperty name="Force2D"
                         label="Force 2D"
                         command="SetForce2D"
                         number_of_elements="1"
                         default_values="0">
        <BooleanDomain name="bool" />
        <Documentation>
          Specify if we create a Structured Grid even when the data is
          SEG-Y 3D. Note this consumes more memory but it shows the
          precise location for each point and the correct shape of the
          data. The default value is true. If we set this option to
          false we create an Image Data for a SEG-Y 3D dataset.
          Specify if we should we force the data to be interpreted as a 2D dataset.
          It may be a 2D sheet through 3D space. When this is turned on we ignore the cross
          line and line values and instead build a 2D data by processing and
          connecting the traces in order from first to last. The output will be a
          Structured Grid.
        </Documentation>
      </IntVectorProperty>
      <Hints>
        <ReaderFactory extensions="sgy segy"
                       file_description="SEG-Y Files" />
      </Hints>
    </SourceProxy>
    <!-- End SegYReader -->
  </ProxyGroup>

</ServerManagerConfiguration>
