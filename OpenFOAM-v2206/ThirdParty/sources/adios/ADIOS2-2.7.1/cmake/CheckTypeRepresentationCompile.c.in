@headers@

#undef KEY
#if defined(__i386)
# define KEY '_','_','i','3','8','6',' ',' ',' ',' ',' ',' ',' ',' ',' '
#elif defined(__x86_64)
# define KEY '_','_','x','8','6','_','6','4',' ',' ',' ',' ',' ',' ',' '
#elif defined(__ppc__)
# define KEY '_','_','p','p','c','_','_',' ',' ',' ',' ',' ',' ',' ',' '
#elif defined(__ppc64__)
# define KEY '_','_','p','p','c','6','4','_','_',' ',' ',' ',' ',' ',' '
#elif defined(__aarch64__)
# define KEY '_','_','a','a','r','c','h','6','4','_','_',' ',' ',' ',' '
#elif defined(__ARM_ARCH_7A__)
# define KEY '_','_','A','R','M','_','A','R','C','H','_','7','A','_','_'
#elif defined(__ARM_ARCH_7S__)
# define KEY '_','_','A','R','M','_','A','R','C','H','_','7','S','_','_'
#else
# define KEY ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '
#endif

struct check_type_representation_info {
  char header[16];
  @type@ sample;
  char footer[32];
};

static struct check_type_representation_info ctri = {
  .header = { '1', '6', ' ', 'b', 'y', 't', 'e', ' ', 'h', 'e', 'a', 'd', 'e', 'r', ' ', '[' },
  .sample = @value@,
  .footer = { ']', ' ', '3', '2', ' ', 'b', 'y', 't', 'e', ' ', 'f', 'o', 'o', 't', 'e', 'r', ' ', KEY },
};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += ctri.header[argc];
  (void)argv;
  return require;
}
